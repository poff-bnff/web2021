function loadMyFavFilms(){try{document.getElementById("loggedOutFavouriteStatus").style.display="none"}catch(e){}try{toggleFavButtons(userProfile.shortlist.map(function(e){return e.cassette_id}))}catch(e){}try{toggleMyCalButtons(userProfile.myCal)}catch(e){}try{toggleSavedScreeningsButtons(userProfile.savedscreenings),toggleAll()}catch(e){}}function toggleFavButtons(e){var a=document.getElementsByClassName("isshortlisted");for(i=0;i<a.length;i++){var t=a[i].id.split("_")[0];e.includes(t)?(a[i].style.display="block",document.getElementById(t+"_cassette_id").style.display="block"):a[i].style.display="none"}var n=document.getElementsByClassName("notshortlisted");for(i=0;i<n.length;i++){t=n[i].id.split("_")[0];e.includes(t)?n[i].style.display="none":n[i].style.display="block"}}function toggleSavedScreeningsButtons(e){var a=[];for(j=0;j<e.length;j++)a.push(e[j].screeningId);var t=document.getElementsByClassName("issavedscreening");for(i=0;i<t.length;i++){var n=t[i].id.split("_")[0];if(a.includes(n))t[i].style.display="block";else try{t[i].style.display="none"}catch(e){}}var _=document.getElementsByClassName("notsavedscreening");for(i=0;i<_.length;i++){n=_[i].id.split("_")[0];a.includes(n)?_[i].style.display="none":_[i].style.display="block"}}function toggleMyCalButtons(e){var a=document.getElementsByClassName("remove_from_calendar_button");for(i=0;i<a.length;i++){var t=a[i].id.split("_")[0];if(e.includes(t)){document.getElementById(t+"_inMyCalendar").style.display="";try{document.getElementById(t).style.display=""}catch(e){}}else try{document.getElementById(t+"_notInMyCalendar").style.display=""}catch(e){}}}function saveFilmAsFavourite(a){window.location.href,location.origin;var e=new Headers;e.append("Authorization","Bearer "+localStorage.getItem("ACCESS_TOKEN")),fetch("https://api.poff.ee/favourite/"+a,{method:"PUT",headers:e,redirect:"follow"}).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){e.ok&&(document.getElementById(a+"_not_shortlisted").style.display="none",document.getElementById(a+"_is_shortlisted").style.display="block")}).catch(function(e){console.warn(e)})}function saveScreeningAsFavourite(a,e,t){var n={id:a,screeningTitle:e,screeningTime:t},i={method:"PUT",redirect:"follow",headers:{Authorization:"Bearer "+localStorage.getItem("ACCESS_TOKEN"),"Content-Type":"application/json"},body:JSON.stringify(n)};fetch("https://api.poff.ee/favourite/"+a,i).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){e.ok&&(document.getElementById(a+"_not_savedscreening").style.display="none",document.getElementById(a+"_is_savedscreening").style.display="block")}).catch(function(e){console.warn(e)})}function calendarfile(e){var a=document.createElement("a");a.setAttribute("href","data:text/calendar;charset=utf-8,"+document.getElementById("cal_"+e).innerText),a.setAttribute("download","IndustryEvent_"+e+".ics"),a.style.display="none",document.body.appendChild(a),a.click(),document.body.removeChild(a)}function addToMyCal(a){calendarfile(a);var e={method:"PUT",redirect:"follow",headers:{Authorization:"Bearer "+localStorage.getItem("ACCESS_TOKEN")}};fetch("https://api.poff.ee/favourite/event_"+a,e).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){e.ok&&(document.getElementById(a+"_notInMyCalendar").style.display="none",document.getElementById(a+"_inMyCalendar").style.display="")}).catch(function(e){console.warn(e)})}function removeFilm(a){var e=new Headers;e.append("Authorization","Bearer "+localStorage.getItem("ACCESS_TOKEN")),fetch("https://api.poff.ee/favourite/"+a,{method:"DELETE",headers:e,redirect:"follow"}).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){if(e.ok){try{document.getElementById(a+"_not_shortlisted").style.display="block",document.getElementById(a+"_is_shortlisted").style.display="none"}catch(e){}try{document.getElementById(a+"_cassette_id").style.display="none"}catch(e){}}}).catch(function(e){console.warn(e)})}function removeScreening(a){var e=new Headers;e.append("Authorization","Bearer "+localStorage.getItem("ACCESS_TOKEN")),fetch("https://api.poff.ee/favourite/screening_"+a,{method:"DELETE",headers:e,redirect:"follow"}).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){if(e.ok){try{document.getElementById(a+"_is_savedscreening").style.display="none",document.getElementById(a+"_not_savedscreening").style.display="block"}catch(e){}try{document.getElementById(a).style.display="none"}catch(e){}}}).catch(function(e){console.warn(e)})}function removeEvent(a){var e=new Headers;e.append("Authorization","Bearer "+localStorage.getItem("ACCESS_TOKEN")),fetch("https://api.poff.ee/favourite/event_"+a,{method:"DELETE",headers:e,redirect:"follow"}).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){if(e.ok){try{document.getElementById(a+"_notInMyCalendar").style.display="",document.getElementById(a+"_inMyCalendar").style.display="none"}catch(e){}if(!document.getElementById(a+"_notInMyCalendar"))try{document.getElementById(a.split("_")[0]).style.display="none"}catch(e){}}}).catch(function(e){console.warn(e)})}function changeToRemove(e){document.getElementById(e).innerHTML="remove",document.getElementById(e).style.color="red"}function revertRemove(e){document.getElementById(e).innerHTML="In my calendar",document.getElementById(e).style.color="rgba(255, 255, 255, 0.96)"}Gettext=function(e){this.domain="messages",this.locale_data=void 0;var a=["domain","locale_data"];if(this.isValidObject(e))for(var t in e)for(var n=0;n<a.length;n++)t==a[n]&&this.isValidObject(e[t])&&(this[t]=e[t]);return this.try_load_lang(),this},Gettext.context_glue="",Gettext._locale_data={},Gettext.prototype.try_load_lang=function(){if(void 0!==this.locale_data){var e=this.locale_data;if(this.locale_data=void 0,this.parse_locale_data(e),void 0===Gettext._locale_data[this.domain])throw new Error("Error: Gettext 'locale_data' does not contain the domain '"+this.domain+"'")}var a=this.get_lang_refs();if("object"==typeof a&&0<a.length)for(var t=0;t<a.length;t++){var n=a[t];if("application/json"==n.type){if(!this.try_load_lang_json(n.href))throw new Error("Error: Gettext 'try_load_lang_json' failed. Unable to exec xmlhttprequest for link ["+n.href+"]")}else{if("application/x-po"!=n.type)throw new Error("TODO: link type ["+n.type+"] found, and support is planned, but not implemented at this time.");if(!this.try_load_lang_po(n.href))throw new Error("Error: Gettext 'try_load_lang_po' failed. Unable to exec xmlhttprequest for link ["+n.href+"]")}}},Gettext.prototype.parse_locale_data=function(e){for(var a in void 0===Gettext._locale_data&&(Gettext._locale_data={}),e)if(e.hasOwnProperty(a)&&this.isValidObject(e[a])){var t=!1;for(var n in e[a]){t=!0;break}if(t){var i=e[a];for(var _ in""==a&&(a="messages"),this.isValidObject(Gettext._locale_data[a])||(Gettext._locale_data[a]={}),this.isValidObject(Gettext._locale_data[a].head)||(Gettext._locale_data[a].head={}),this.isValidObject(Gettext._locale_data[a].msgs)||(Gettext._locale_data[a].msgs={}),i)if(""==_){var o=i[_];for(var r in o){var s=r.toLowerCase();Gettext._locale_data[a].head[s]=o[r]}}else Gettext._locale_data[a].msgs[_]=i[_]}}for(var a in Gettext._locale_data)if(this.isValidObject(Gettext._locale_data[a].head["plural-forms"])&&void 0===Gettext._locale_data[a].head.plural_func){var l=Gettext._locale_data[a].head["plural-forms"];if(!new RegExp("^(\\s*nplurals\\s*=\\s*[0-9]+\\s*;\\s*plural\\s*=\\s*(?:\\s|[-\\?\\|&=!<>+*/%:;a-zA-Z0-9_()])+)","m").test(l))throw new Error("Syntax error in language file. Plural-Forms header is invalid ["+l+"]");var u=Gettext._locale_data[a].head["plural-forms"];/;\s*$/.test(u)||(u=u.concat(";"));var g="var plural; var nplurals; "+u+' return { "nplural" : nplurals, "plural" : (plural === true ? 1 : plural ? plural : 0) };';Gettext._locale_data[a].head.plural_func=new Function("n",g)}else void 0===Gettext._locale_data[a].head.plural_func&&(Gettext._locale_data[a].head.plural_func=function(e){return{nplural:2,plural:1!=e?1:0}})},Gettext.prototype.try_load_lang_po=function(e){var a=this.sjax(e);if(a){var t=this.uri_basename(e),n=this.parse_po(a),i={};return n&&(n[""]||(n[""]={}),n[""].domain||(n[""].domain=t),i[t=n[""].domain]=n,this.parse_locale_data(i)),1}},Gettext.prototype.uri_basename=function(e){var a,t;return(a=e.match(/^(.*\/)?(.*)/))?(t=a[2].match(/^(.*)\..+$/))?t[1]:a[2]:""},Gettext.prototype.parse_po=function(e){for(var a={},t={},n="",i=[],_=e.split("\n"),o=0;o<_.length;o++){if(_[o]=_[o].replace(/(\n|\r)+$/,""),/^$/.test(_[o])){if(void 0!==t.msgid){var r=void 0!==t.msgctxt&&t.msgctxt.length?t.msgctxt+Gettext.context_glue+t.msgid:t.msgid,s=void 0!==t.msgid_plural&&t.msgid_plural.length?t.msgid_plural:null,l=[];for(var u in t){(g=u.match(/^msgstr_(\d+)/))&&(l[parseInt(g[1])]=t[u])}l.unshift(s),1<l.length&&(a[r]=l),t={},n=""}}else{if(/^#/.test(_[o]))continue;(g=_[o].match(/^msgctxt\s+(.*)/))?t[n="msgctxt"]=this.parse_po_dequote(g[1]):(g=_[o].match(/^msgid\s+(.*)/))?t[n="msgid"]=this.parse_po_dequote(g[1]):(g=_[o].match(/^msgid_plural\s+(.*)/))?t[n="msgid_plural"]=this.parse_po_dequote(g[1]):(g=_[o].match(/^msgstr\s+(.*)/))||(g=_[o].match(/^msgstr\[0\]\s+(.*)/))?t[n="msgstr_0"]=this.parse_po_dequote(g[1]):(g=_[o].match(/^msgstr\[(\d+)\]\s+(.*)/))?t[n="msgstr_"+g[1]]=this.parse_po_dequote(g[2]):/^"/.test(_[o])?t[n]+=this.parse_po_dequote(_[o]):i.push("Strange line ["+o+"] : "+_[o])}}if(void 0!==t.msgid){var g,r=void 0!==t.msgctxt&&t.msgctxt.length?t.msgctxt+Gettext.context_glue+t.msgid:t.msgid,s=void 0!==t.msgid_plural&&t.msgid_plural.length?t.msgid_plural:null,l=[];for(var u in t){(g=u.match(/^msgstr_(\d+)/))&&(l[parseInt(g[1])]=t[u])}l.unshift(s),1<l.length&&(a[r]=l),t={},n=""}if(a[""]&&a[""][1]){for(var h,c,d,S,m={},C=a[""][1].split(/\\n/),o=0;o<C.length;o++){C.length&&(-1!=(h=C[o].indexOf(":",0))?(c=C[o].substring(0,h),d=C[o].substring(h+1),m[S=c.toLowerCase()]&&m[S].length?i.push("SKIPPING DUPLICATE HEADER LINE: "+C[o]):/#-#-#-#-#/.test(S)?i.push("SKIPPING ERROR MARKER IN HEADER: "+C[o]):(d=d.replace(/^\s+/,""),m[S]=d)):(i.push("PROBLEM LINE IN HEADER: "+C[o]),m[C[o]]=""))}a[""]=m}else a[""]={};return a},Gettext.prototype.parse_po_dequote=function(e){var a;return(a=e.match(/^"(.*)"/))&&(e=a[1]),e=e.replace(/\\"/g,'"')},Gettext.prototype.try_load_lang_json=function(e){var a=this.sjax(e);if(a){var t=this.JSON(a);return this.parse_locale_data(t),1}},Gettext.prototype.get_lang_refs=function(){for(var e=new Array,a=document.getElementsByTagName("link"),t=0;t<a.length;t++)if("gettext"==a[t].rel&&a[t].href){if(void 0===a[t].type||""==a[t].type)if(/\.json$/i.test(a[t].href))a[t].type="application/json";else if(/\.js$/i.test(a[t].href))a[t].type="application/json";else if(/\.po$/i.test(a[t].href))a[t].type="application/x-po";else{if(!/\.mo$/i.test(a[t].href))throw new Error("LINK tag with rel=gettext found, but the type and extension are unrecognized.");a[t].type="application/x-mo"}if(a[t].type=a[t].type.toLowerCase(),"application/json"==a[t].type)a[t].type="application/json";else if("text/javascript"==a[t].type)a[t].type="application/json";else if("application/x-po"==a[t].type)a[t].type="application/x-po";else{if("application/x-mo"!=a[t].type)throw new Error("LINK tag with rel=gettext found, but the type attribute ["+a[t].type+"] is unrecognized.");a[t].type="application/x-mo"}e.push(a[t])}return e},Gettext.prototype.textdomain=function(e){return e&&e.length&&(this.domain=e),this.domain},Gettext.prototype.gettext=function(e){return this.dcnpgettext(null,void 0,e,void 0,void 0,void 0)},Gettext.prototype.dgettext=function(e,a){return this.dcnpgettext(e,void 0,a,void 0,void 0,void 0)},Gettext.prototype.dcgettext=function(e,a,t){return this.dcnpgettext(e,void 0,a,void 0,void 0,t)},Gettext.prototype.ngettext=function(e,a,t){return this.dcnpgettext(null,void 0,e,a,t,void 0)},Gettext.prototype.dngettext=function(e,a,t,n){return this.dcnpgettext(e,void 0,a,t,n,void 0)},Gettext.prototype.dcngettext=function(e,a,t,n,i){return this.dcnpgettext(e,void 0,a,t,n,i,i)},Gettext.prototype.pgettext=function(e,a){return this.dcnpgettext(null,e,a,void 0,void 0,void 0)},Gettext.prototype.dpgettext=function(e,a,t){return this.dcnpgettext(e,a,t,void 0,void 0,void 0)},Gettext.prototype.dcpgettext=function(e,a,t,n){return this.dcnpgettext(e,a,t,void 0,void 0,n)},Gettext.prototype.npgettext=function(e,a,t,n){return this.dcnpgettext(null,e,a,t,n,void 0)},Gettext.prototype.dnpgettext=function(e,a,t,n,i){return this.dcnpgettext(e,a,t,n,i,void 0)},Gettext.prototype.dcnpgettext=function(e,a,t,n,i,_){if(!this.isValidObject(t))return"";var o=this.isValidObject(n),r=this.isValidObject(a)?a+Gettext.context_glue+t:t,s=this.isValidObject(e)?e:this.isValidObject(this.domain)?this.domain:"messages",l=new Array;if(void 0!==Gettext._locale_data&&this.isValidObject(Gettext._locale_data[s]))l.push(Gettext._locale_data[s]);else if(void 0!==Gettext._locale_data)for(var u in Gettext._locale_data)l.push(Gettext._locale_data[u]);var g,h=[],c=!1;if(l.length)for(var d=0;d<l.length;d++){var S=l[d];if(this.isValidObject(S.msgs[r])){for(var m=0;m<S.msgs[r].length;m++)h[m]=S.msgs[r][m];if(h.shift(),g=S,c=!0,0<h.length&&0!=h[0].length)break}}0!=h.length&&0!=h[0].length||(h=[t,n]);var C,M,A=h[0];return o&&(M=c&&this.isValidObject(g.head.plural_func)?((C=g.head.plural_func(i)).plural||(C.plural=0),C.nplural||(C.nplural=0),C.nplural<=C.plural&&(C.plural=0),C.plural):1!=i?1:0,this.isValidObject(h[M])&&(A=h[M])),A},Gettext.strargs=function(e,a){null==a||void 0===a?a=[]:a.constructor!=Array&&(a=[a]);for(var t="";;){var n,i,_,o=e.indexOf("%");if(-1==o){t+=e;break}t+=e.substr(0,o),e="%%"==e.substr(o,2)?(t+="%",e.substr(o+2)):(n=e.substr(o).match(/^%(\d+)/))?(i=parseInt(n[1]),_=n[1].length,0<i&&null!=a[i-1]&&void 0!==a[i-1]&&(t+=a[i-1]),e.substr(o+1+_)):(t+="%",e.substr(o+1))}return t},Gettext.prototype.strargs=function(e,a){return Gettext.strargs(e,a)},Gettext.prototype.isArray=function(e){return this.isValidObject(e)&&e.constructor==Array},Gettext.prototype.isValidObject=function(e){return null!=e&&void 0!==e},Gettext.prototype.sjax=function(e){var a=window.XMLHttpRequest?new XMLHttpRequest:-1!=navigator.userAgent.toLowerCase().indexOf("msie 5")?new ActiveXObject("Microsoft.XMLHTTP"):new ActiveXObject("Msxml2.XMLHTTP");if(!a)throw new Error("Your browser doesn't do Ajax. Unable to support external language files.");a.open("GET",e,!1);try{a.send(null)}catch(e){return}var t=a.status;if(200==t||0==t)return a.responseText;var n=a.statusText+" (Error "+a.status+")";return a.responseText.length&&(n+="\n"+a.responseText),void alert(n)},Gettext.prototype.JSON=function(data){return eval("("+data+")")},function(e,a){"object"==typeof exports&&"object"==typeof module?module.exports=a():"function"==typeof define&&define.amd?define([],a):"object"==typeof exports?exports.AmazonCognitoIdentity=a():e.AmazonCognitoIdentity=a()}("undefined"!=typeof self?self:this,function(){return i={},n.m=t=[function(e,a,t){var n;e.exports=(n=function(u){var t=Object.create||function(e){var a;return h.prototype=e,a=new h,h.prototype=null,a},e={},a=e.lib={},n=a.Base={extend:function(e){var a=t(this);return e&&a.mixIn(e),a.hasOwnProperty("init")&&this.init!==a.init||(a.init=function(){a.$super.init.apply(this,arguments)}),(a.init.prototype=a).$super=this,a},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},mixIn:function(e){for(var a in e)e.hasOwnProperty(a)&&(this[a]=e[a]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}},g=a.WordArray=n.extend({init:function(e,a){e=this.words=e||[],this.sigBytes=null!=a?a:4*e.length},toString:function(e){return(e||_).stringify(this)},concat:function(e){var a=this.words,t=e.words,n=this.sigBytes,i=e.sigBytes;if(this.clamp(),n%4)for(var _=0;_<i;_++){var o=t[_>>>2]>>>24-_%4*8&255;a[n+_>>>2]|=o<<24-(n+_)%4*8}else for(_=0;_<i;_+=4)a[n+_>>>2]=t[_>>>2];return this.sigBytes+=i,this},clamp:function(){var e=this.words,a=this.sigBytes;e[a>>>2]&=4294967295<<32-a%4*8,e.length=u.ceil(a/4)},clone:function(){var e=n.clone.call(this);return e.words=this.words.slice(0),e},random:function(e){for(var a=[],t=0;t<e;t+=4){var n=function(a){var a=a,t=987654321,n=4294967295;return function(){var e=((t=36969*(65535&t)+(t>>16)&n)<<16)+(a=18e3*(65535&a)+(a>>16)&n)&n;return e/=4294967296,(e+=.5)*(.5<u.random()?1:-1)}}(4294967296*(i||u.random())),i=987654071*n();a.push(4294967296*n()|0)}return new g.init(a,e)}}),i=e.enc={},_=i.Hex={stringify:function(e){for(var a=e.words,t=e.sigBytes,n=[],i=0;i<t;i++){var _=a[i>>>2]>>>24-i%4*8&255;n.push((_>>>4).toString(16)),n.push((15&_).toString(16))}return n.join("")},parse:function(e){for(var a=e.length,t=[],n=0;n<a;n+=2)t[n>>>3]|=parseInt(e.substr(n,2),16)<<24-n%8*4;return new g.init(t,a/2)}},o=i.Latin1={stringify:function(e){for(var a=e.words,t=e.sigBytes,n=[],i=0;i<t;i++){var _=a[i>>>2]>>>24-i%4*8&255;n.push(String.fromCharCode(_))}return n.join("")},parse:function(e){for(var a=e.length,t=[],n=0;n<a;n++)t[n>>>2]|=(255&e.charCodeAt(n))<<24-n%4*8;return new g.init(t,a)}},r=i.Utf8={stringify:function(e){try{return decodeURIComponent(escape(o.stringify(e)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(e){return o.parse(unescape(encodeURIComponent(e)))}},s=a.BufferedBlockAlgorithm=n.extend({reset:function(){this._data=new g.init,this._nDataBytes=0},_append:function(e){"string"==typeof e&&(e=r.parse(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes},_process:function(e){var a=this._data,t=a.words,n=a.sigBytes,i=this.blockSize,_=n/(4*i),o=(_=e?u.ceil(_):u.max((0|_)-this._minBufferSize,0))*i,r=u.min(4*o,n);if(o){for(var s=0;s<o;s+=i)this._doProcessBlock(t,s);var l=t.splice(0,o);a.sigBytes-=r}return new g.init(l,r)},clone:function(){var e=n.clone.call(this);return e._data=this._data.clone(),e},_minBufferSize:0}),l=(a.Hasher=s.extend({cfg:n.extend(),init:function(e){this.cfg=this.cfg.extend(e),this.reset()},reset:function(){s.reset.call(this),this._doReset()},update:function(e){return this._append(e),this._process(),this},finalize:function(e){return e&&this._append(e),this._doFinalize()},blockSize:16,_createHelper:function(t){return function(e,a){return new t.init(a).finalize(e)}},_createHmacHelper:function(t){return function(e,a){return new l.HMAC.init(t,a).finalize(e)}}}),e.algo={});function h(){}return e}(Math),n)},function(e,E,G){"use strict";(function(e){function t(){return g.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function r(e,a){if(t()<a)throw new RangeError("Invalid typed array length");return g.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(a)).__proto__=g.prototype:(null===e&&(e=new g(a)),e.length=a),e}function g(e,a,t){if(!(g.TYPED_ARRAY_SUPPORT||this instanceof g))return new g(e,a,t);if("number"!=typeof e)return n(this,e,a,t);if("string"==typeof a)throw new Error("If encoding is specified then the first argument must be a string");return i(this,e)}function n(e,a,t,n){if("number"==typeof a)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&a instanceof ArrayBuffer?function(e,a,t,n){if(a.byteLength,t<0||a.byteLength<t)throw new RangeError("'offset' is out of bounds");if(a.byteLength<t+(n||0))throw new RangeError("'length' is out of bounds");return a=void 0===t&&void 0===n?new Uint8Array(a):void 0===n?new Uint8Array(a,t):new Uint8Array(a,t,n),g.TYPED_ARRAY_SUPPORT?(e=a).__proto__=g.prototype:e=_(e,a),e}(e,a,t,n):"string"==typeof a?function(e,a,t){if("string"==typeof t&&""!==t||(t="utf8"),!g.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');var n=0|l(a,t),i=(e=r(e,n)).write(a,t);return i!==n&&(e=e.slice(0,i)),e}(e,a,t):function(e,a){if(g.isBuffer(a)){var t=0|o(a.length);return 0===(e=r(e,t)).length||a.copy(e,0,0,t),e}if(a){if("undefined"!=typeof ArrayBuffer&&a.buffer instanceof ArrayBuffer||"length"in a)return"number"!=typeof a.length||function(e){return e!=e}(a.length)?r(e,0):_(e,a);if("Buffer"===a.type&&B(a.data))return _(e,a.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,a)}function s(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function i(e,a){if(s(a),e=r(e,a<0?0:0|o(a)),!g.TYPED_ARRAY_SUPPORT)for(var t=0;t<a;++t)e[t]=0;return e}function _(e,a){var t=a.length<0?0:0|o(a.length);e=r(e,t);for(var n=0;n<t;n+=1)e[n]=255&a[n];return e}function o(e){if(e>=t())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+t().toString(16)+" bytes");return 0|e}function l(e,a){if(g.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var t=e.length;if(0===t)return 0;for(var n=!1;;)switch(a){case"ascii":case"latin1":case"binary":return t;case"utf8":case"utf-8":case void 0:return v(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*t;case"hex":return t>>>1;case"base64":return k(e).length;default:if(n)return v(e).length;a=(""+a).toLowerCase(),n=!0}}function a(e,a,t){var n,i,_,o=!1;if((void 0===a||a<0)&&(a=0),a>this.length)return"";if((void 0===t||t>this.length)&&(t=this.length),t<=0)return"";if((t>>>=0)<=(a>>>=0))return"";for(e=e||"utf8";;)switch(e){case"hex":return function(e,a,t){var n=e.length;(!a||a<0)&&(a=0),(!t||t<0||n<t)&&(t=n);for(var i="",_=a;_<t;++_)i+=function(e){return e<16?"0"+e.toString(16):e.toString(16)}(e[_]);return i}(this,a,t);case"utf8":case"utf-8":return m(this,a,t);case"ascii":return function(e,a,t){var n="";t=Math.min(e.length,t);for(var i=a;i<t;++i)n+=String.fromCharCode(127&e[i]);return n}(this,a,t);case"latin1":case"binary":return function(e,a,t){var n="";t=Math.min(e.length,t);for(var i=a;i<t;++i)n+=String.fromCharCode(e[i]);return n}(this,a,t);case"base64":return n=this,_=t,0===(i=a)&&_===n.length?b.fromByteArray(n):b.fromByteArray(n.slice(i,_));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,a,t){for(var n=e.slice(a,t),i="",_=0;_<n.length;_+=2)i+=String.fromCharCode(n[_]+256*n[_+1]);return i}(this,a,t);default:if(o)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),o=!0}}function u(e,a,t){var n=e[a];e[a]=e[t],e[t]=n}function h(e,a,t,n,i){if(0===e.length)return-1;if("string"==typeof t?(n=t,t=0):2147483647<t?t=2147483647:t<-2147483648&&(t=-2147483648),t=+t,isNaN(t)&&(t=i?0:e.length-1),t<0&&(t=e.length+t),t>=e.length){if(i)return-1;t=e.length-1}else if(t<0){if(!i)return-1;t=0}if("string"==typeof a&&(a=g.from(a,n)),g.isBuffer(a))return 0===a.length?-1:c(e,a,t,n,i);if("number"==typeof a)return a&=255,g.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,a,t):Uint8Array.prototype.lastIndexOf.call(e,a,t):c(e,[a],t,n,i);throw new TypeError("val must be string, number or Buffer")}function c(e,a,t,n,i){function _(e,a){return 1===o?e[a]:e.readUInt16BE(a*o)}var o=1,r=e.length,s=a.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||a.length<2)return-1;r/=o=2,s/=2,t/=2}if(i)for(var l=-1,u=t;u<r;u++)if(_(e,u)===_(a,-1===l?0:u-l)){if(-1===l&&(l=u),u-l+1===s)return l*o}else-1!==l&&(u-=u-l),l=-1;else for(r<t+s&&(t=r-s),u=t;0<=u;u--){for(var g=!0,h=0;h<s;h++)if(_(e,u+h)!==_(a,h)){g=!1;break}if(g)return u}return-1}function d(e,a,t,n){return R(function(e){for(var a=[],t=0;t<e.length;++t)a.push(255&e.charCodeAt(t));return a}(a),e,t,n)}function S(e,a,t,n){return R(function(e,a){for(var t,n,i,_=[],o=0;o<e.length&&!((a-=2)<0);++o)t=e.charCodeAt(o),n=t>>8,i=t%256,_.push(i),_.push(n);return _}(a,e.length-t),e,t,n)}function m(e,a,t){t=Math.min(e.length,t);for(var n=[],i=a;i<t;){var _,o,r,s,l=e[i],u=null,g=239<l?4:223<l?3:191<l?2:1;if(i+g<=t)switch(g){case 1:l<128&&(u=l);break;case 2:128==(192&(_=e[i+1]))&&127<(s=(31&l)<<6|63&_)&&(u=s);break;case 3:_=e[i+1],o=e[i+2],128==(192&_)&&128==(192&o)&&2047<(s=(15&l)<<12|(63&_)<<6|63&o)&&(s<55296||57343<s)&&(u=s);break;case 4:_=e[i+1],o=e[i+2],r=e[i+3],128==(192&_)&&128==(192&o)&&128==(192&r)&&65535<(s=(15&l)<<18|(63&_)<<12|(63&o)<<6|63&r)&&s<1114112&&(u=s)}null===u?(u=65533,g=1):65535<u&&(u-=65536,n.push(u>>>10&1023|55296),u=56320|1023&u),n.push(u),i+=g}return function(e){var a=e.length;if(a<=I)return String.fromCharCode.apply(String,e);for(var t="",n=0;n<a;)t+=String.fromCharCode.apply(String,e.slice(n,n+=I));return t}(n)}function C(e,a,t){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(t<e+a)throw new RangeError("Trying to access beyond buffer length")}function M(e,a,t,n,i,_){if(!g.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(i<a||a<_)throw new RangeError('"value" argument is out of bounds');if(t+n>e.length)throw new RangeError("Index out of range")}function A(e,a,t,n){a<0&&(a=65535+a+1);for(var i=0,_=Math.min(e.length-t,2);i<_;++i)e[t+i]=(a&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function T(e,a,t,n){a<0&&(a=4294967295+a+1);for(var i=0,_=Math.min(e.length-t,4);i<_;++i)e[t+i]=a>>>8*(n?i:3-i)&255}function f(e,a,t,n){if(t+n>e.length)throw new RangeError("Index out of range");if(t<0)throw new RangeError("Index out of range")}function y(e,a,t,n,i){return i||f(e,0,t,4),P.write(e,a,t,n,23,4),t+4}function p(e,a,t,n,i){return i||f(e,0,t,8),P.write(e,a,t,n,52,8),t+8}function v(e,a){a=a||1/0;for(var t,n=e.length,i=null,_=[],o=0;o<n;++o){if(55295<(t=e.charCodeAt(o))&&t<57344){if(!i){if(56319<t){-1<(a-=3)&&_.push(239,191,189);continue}if(o+1===n){-1<(a-=3)&&_.push(239,191,189);continue}i=t;continue}if(t<56320){-1<(a-=3)&&_.push(239,191,189),i=t;continue}t=65536+(i-55296<<10|t-56320)}else i&&-1<(a-=3)&&_.push(239,191,189);if(i=null,t<128){if(--a<0)break;_.push(t)}else if(t<2048){if((a-=2)<0)break;_.push(t>>6|192,63&t|128)}else if(t<65536){if((a-=3)<0)break;_.push(t>>12|224,t>>6&63|128,63&t|128)}else{if(!(t<1114112))throw new Error("Invalid code point");if((a-=4)<0)break;_.push(t>>18|240,t>>12&63|128,t>>6&63|128,63&t|128)}}return _}function k(e){return b.toByteArray(function(e){if((e=((a=e).trim?a.trim():a.replace(/^\s+|\s+$/g,"")).replace(N,"")).length<2)return"";for(var a;e.length%4!=0;)e+="=";return e}(e))}function R(e,a,t,n){for(var i=0;i<n&&!(i+t>=a.length||i>=e.length);++i)a[i+t]=e[i];return i}var b=G(21),P=G(22),B=G(23);E.Buffer=g,E.SlowBuffer=function(e){return+e!=e&&(e=0),g.alloc(+e)},E.INSPECT_MAX_BYTES=50,g.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),E.kMaxLength=t(),g.poolSize=8192,g._augment=function(e){return e.__proto__=g.prototype,e},g.from=function(e,a,t){return n(null,e,a,t)},g.TYPED_ARRAY_SUPPORT&&(g.prototype.__proto__=Uint8Array.prototype,g.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&g[Symbol.species]===g&&Object.defineProperty(g,Symbol.species,{value:null,configurable:!0})),g.alloc=function(e,a,t){return n=null,_=a,o=t,s(i=e),!(i<=0)&&void 0!==_?"string"==typeof o?r(n,i).fill(_,o):r(n,i).fill(_):r(n,i);var n,i,_,o},g.allocUnsafe=function(e){return i(null,e)},g.allocUnsafeSlow=function(e){return i(null,e)},g.isBuffer=function(e){return!(null==e||!e._isBuffer)},g.compare=function(e,a){if(!g.isBuffer(e)||!g.isBuffer(a))throw new TypeError("Arguments must be Buffers");if(e===a)return 0;for(var t=e.length,n=a.length,i=0,_=Math.min(t,n);i<_;++i)if(e[i]!==a[i]){t=e[i],n=a[i];break}return t<n?-1:n<t?1:0},g.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},g.concat=function(e,a){if(!B(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return g.alloc(0);if(void 0===a)for(i=a=0;i<e.length;++i)a+=e[i].length;for(var t=g.allocUnsafe(a),n=0,i=0;i<e.length;++i){var _=e[i];if(!g.isBuffer(_))throw new TypeError('"list" argument must be an Array of Buffers');_.copy(t,n),n+=_.length}return t},g.byteLength=l,g.prototype._isBuffer=!0,g.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var a=0;a<e;a+=2)u(this,a,a+1);return this},g.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var a=0;a<e;a+=4)u(this,a,a+3),u(this,a+1,a+2);return this},g.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var a=0;a<e;a+=8)u(this,a,a+7),u(this,a+1,a+6),u(this,a+2,a+5),u(this,a+3,a+4);return this},g.prototype.toString=function(){var e=0|this.length;return 0==e?"":0===arguments.length?m(this,0,e):a.apply(this,arguments)},g.prototype.equals=function(e){if(!g.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===g.compare(this,e)},g.prototype.inspect=function(){var e="",a=E.INSPECT_MAX_BYTES;return 0<this.length&&(e=this.toString("hex",0,a).match(/.{2}/g).join(" "),this.length>a&&(e+=" ... ")),"<Buffer "+e+">"},g.prototype.compare=function(e,a,t,n,i){if(!g.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===a&&(a=0),void 0===t&&(t=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),a<0||t>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(i<=n&&t<=a)return 0;if(i<=n)return-1;if(t<=a)return 1;if(this===e)return 0;for(var _=(i>>>=0)-(n>>>=0),o=(t>>>=0)-(a>>>=0),r=Math.min(_,o),s=this.slice(n,i),l=e.slice(a,t),u=0;u<r;++u)if(s[u]!==l[u]){_=s[u],o=l[u];break}return _<o?-1:o<_?1:0},g.prototype.includes=function(e,a,t){return-1!==this.indexOf(e,a,t)},g.prototype.indexOf=function(e,a,t){return h(this,e,a,t,!0)},g.prototype.lastIndexOf=function(e,a,t){return h(this,e,a,t,!1)},g.prototype.write=function(e,a,t,n){if(void 0===a)n="utf8",t=this.length,a=0;else if(void 0===t&&"string"==typeof a)n=a,t=this.length,a=0;else{if(!isFinite(a))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");a|=0,isFinite(t)?(t|=0,void 0===n&&(n="utf8")):(n=t,t=void 0)}var i=this.length-a;if((void 0===t||i<t)&&(t=i),0<e.length&&(t<0||a<0)||a>this.length)throw new RangeError("Attempt to write outside buffer bounds");n=n||"utf8";for(var _,o,r,s,l,u,g=!1;;)switch(n){case"hex":return function(e,a,t,n){t=Number(t)||0;var i=e.length-t;(!n||(n=Number(n))>i)&&(n=i);var _=a.length;if(_%2!=0)throw new TypeError("Invalid hex string");_/2<n&&(n=_/2);for(var o=0;o<n;++o){var r=parseInt(a.substr(2*o,2),16);if(isNaN(r))return o;e[t+o]=r}return o}(this,e,a,t);case"utf8":case"utf-8":return l=a,u=t,R(v(e,(s=this).length-l),s,l,u);case"ascii":return d(this,e,a,t);case"latin1":case"binary":return d(this,e,a,t);case"base64":return _=this,o=a,r=t,R(k(e),_,o,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,a,t);default:if(g)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),g=!0}},g.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var I=4096;g.prototype.slice=function(e,a){var t=this.length;if((e=~~e)<0?(e+=t)<0&&(e=0):t<e&&(e=t),(a=void 0===a?t:~~a)<0?(a+=t)<0&&(a=0):t<a&&(a=t),a<e&&(a=e),g.TYPED_ARRAY_SUPPORT)(i=this.subarray(e,a)).__proto__=g.prototype;else for(var n=a-e,i=new g(n,void 0),_=0;_<n;++_)i[_]=this[_+e];return i},g.prototype.readUIntLE=function(e,a,t){e|=0,a|=0,t||C(e,a,this.length);for(var n=this[e],i=1,_=0;++_<a&&(i*=256);)n+=this[e+_]*i;return n},g.prototype.readUIntBE=function(e,a,t){e|=0,a|=0,t||C(e,a,this.length);for(var n=this[e+--a],i=1;0<a&&(i*=256);)n+=this[e+--a]*i;return n},g.prototype.readUInt8=function(e,a){return a||C(e,1,this.length),this[e]},g.prototype.readUInt16LE=function(e,a){return a||C(e,2,this.length),this[e]|this[e+1]<<8},g.prototype.readUInt16BE=function(e,a){return a||C(e,2,this.length),this[e]<<8|this[e+1]},g.prototype.readUInt32LE=function(e,a){return a||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},g.prototype.readUInt32BE=function(e,a){return a||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},g.prototype.readIntLE=function(e,a,t){e|=0,a|=0,t||C(e,a,this.length);for(var n=this[e],i=1,_=0;++_<a&&(i*=256);)n+=this[e+_]*i;return(i*=128)<=n&&(n-=Math.pow(2,8*a)),n},g.prototype.readIntBE=function(e,a,t){e|=0,a|=0,t||C(e,a,this.length);for(var n=a,i=1,_=this[e+--n];0<n&&(i*=256);)_+=this[e+--n]*i;return(i*=128)<=_&&(_-=Math.pow(2,8*a)),_},g.prototype.readInt8=function(e,a){return a||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},g.prototype.readInt16LE=function(e,a){a||C(e,2,this.length);var t=this[e]|this[e+1]<<8;return 32768&t?4294901760|t:t},g.prototype.readInt16BE=function(e,a){a||C(e,2,this.length);var t=this[e+1]|this[e]<<8;return 32768&t?4294901760|t:t},g.prototype.readInt32LE=function(e,a){return a||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},g.prototype.readInt32BE=function(e,a){return a||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},g.prototype.readFloatLE=function(e,a){return a||C(e,4,this.length),P.read(this,e,!0,23,4)},g.prototype.readFloatBE=function(e,a){return a||C(e,4,this.length),P.read(this,e,!1,23,4)},g.prototype.readDoubleLE=function(e,a){return a||C(e,8,this.length),P.read(this,e,!0,52,8)},g.prototype.readDoubleBE=function(e,a){return a||C(e,8,this.length),P.read(this,e,!1,52,8)},g.prototype.writeUIntLE=function(e,a,t,n){e=+e,a|=0,t|=0,n||M(this,e,a,t,Math.pow(2,8*t)-1,0);var i=1,_=0;for(this[a]=255&e;++_<t&&(i*=256);)this[a+_]=e/i&255;return a+t},g.prototype.writeUIntBE=function(e,a,t,n){e=+e,a|=0,t|=0,n||M(this,e,a,t,Math.pow(2,8*t)-1,0);var i=t-1,_=1;for(this[a+i]=255&e;0<=--i&&(_*=256);)this[a+i]=e/_&255;return a+t},g.prototype.writeUInt8=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,1,255,0),g.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[a]=255&e,a+1},g.prototype.writeUInt16LE=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,2,65535,0),g.TYPED_ARRAY_SUPPORT?(this[a]=255&e,this[a+1]=e>>>8):A(this,e,a,!0),a+2},g.prototype.writeUInt16BE=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,2,65535,0),g.TYPED_ARRAY_SUPPORT?(this[a]=e>>>8,this[a+1]=255&e):A(this,e,a,!1),a+2},g.prototype.writeUInt32LE=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,4,4294967295,0),g.TYPED_ARRAY_SUPPORT?(this[a+3]=e>>>24,this[a+2]=e>>>16,this[a+1]=e>>>8,this[a]=255&e):T(this,e,a,!0),a+4},g.prototype.writeUInt32BE=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,4,4294967295,0),g.TYPED_ARRAY_SUPPORT?(this[a]=e>>>24,this[a+1]=e>>>16,this[a+2]=e>>>8,this[a+3]=255&e):T(this,e,a,!1),a+4},g.prototype.writeIntLE=function(e,a,t,n){var i;e=+e,a|=0,n||M(this,e,a,t,(i=Math.pow(2,8*t-1))-1,-i);var _=0,o=1,r=0;for(this[a]=255&e;++_<t&&(o*=256);)e<0&&0===r&&0!==this[a+_-1]&&(r=1),this[a+_]=(e/o>>0)-r&255;return a+t},g.prototype.writeIntBE=function(e,a,t,n){var i;e=+e,a|=0,n||M(this,e,a,t,(i=Math.pow(2,8*t-1))-1,-i);var _=t-1,o=1,r=0;for(this[a+_]=255&e;0<=--_&&(o*=256);)e<0&&0===r&&0!==this[a+_+1]&&(r=1),this[a+_]=(e/o>>0)-r&255;return a+t},g.prototype.writeInt8=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,1,127,-128),g.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[a]=255&e,a+1},g.prototype.writeInt16LE=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,2,32767,-32768),g.TYPED_ARRAY_SUPPORT?(this[a]=255&e,this[a+1]=e>>>8):A(this,e,a,!0),a+2},g.prototype.writeInt16BE=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,2,32767,-32768),g.TYPED_ARRAY_SUPPORT?(this[a]=e>>>8,this[a+1]=255&e):A(this,e,a,!1),a+2},g.prototype.writeInt32LE=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,4,2147483647,-2147483648),g.TYPED_ARRAY_SUPPORT?(this[a]=255&e,this[a+1]=e>>>8,this[a+2]=e>>>16,this[a+3]=e>>>24):T(this,e,a,!0),a+4},g.prototype.writeInt32BE=function(e,a,t){return e=+e,a|=0,t||M(this,e,a,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),g.TYPED_ARRAY_SUPPORT?(this[a]=e>>>24,this[a+1]=e>>>16,this[a+2]=e>>>8,this[a+3]=255&e):T(this,e,a,!1),a+4},g.prototype.writeFloatLE=function(e,a,t){return y(this,e,a,!0,t)},g.prototype.writeFloatBE=function(e,a,t){return y(this,e,a,!1,t)},g.prototype.writeDoubleLE=function(e,a,t){return p(this,e,a,!0,t)},g.prototype.writeDoubleBE=function(e,a,t){return p(this,e,a,!1,t)},g.prototype.copy=function(e,a,t,n){if(t=t||0,n||0===n||(n=this.length),a>=e.length&&(a=e.length),a=a||0,0<n&&n<t&&(n=t),n===t)return 0;if(0===e.length||0===this.length)return 0;if(a<0)throw new RangeError("targetStart out of bounds");if(t<0||t>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-a<n-t&&(n=e.length-a+t);var i,_=n-t;if(this===e&&t<a&&a<n)for(i=_-1;0<=i;--i)e[i+a]=this[i+t];else if(_<1e3||!g.TYPED_ARRAY_SUPPORT)for(i=0;i<_;++i)e[i+a]=this[i+t];else Uint8Array.prototype.set.call(e,this.subarray(t,t+_),a);return _},g.prototype.fill=function(e,a,t,n){if("string"==typeof e){var i;if("string"==typeof a?(n=a,a=0,t=this.length):"string"==typeof t&&(n=t,t=this.length),1===e.length&&(i=e.charCodeAt(0))<256&&(e=i),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!g.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);if(a<0||this.length<a||this.length<t)throw new RangeError("Out of range index");if(t<=a)return this;if(a>>>=0,t=void 0===t?this.length:t>>>0,"number"==typeof(e=e||0))for(r=a;r<t;++r)this[r]=e;else for(var _=g.isBuffer(e)?e:v(new g(e,n).toString()),o=_.length,r=0;r<t-a;++r)this[r+a]=_[r%o];return this};var N=/[^+\/0-9A-Za-z-_]/g}).call(E,G(20))},function(e,a,t){"use strict";t.d(a,"a",function(){return d});function r(e){return l.Buffer.from(s.a.lib.WordArray.random(e).toString(),"hex")}var n,l=t(1),i=(t.n(l),t(0)),s=t.n(i),_=t(3),o=(t.n(_),t(4)),u=t.n(o),g=t(5),h=t.n(g),c=t(6),d=((n=S.prototype).getSmallAValue=function(){return this.smallAValue},n.getLargeAValue=function(t){var n=this;this.largeAValue?t(null,this.largeAValue):this.calculateA(this.smallAValue,function(e,a){e&&t(e,null),n.largeAValue=a,t(null,n.largeAValue)})},n.generateRandomSmallA=function(){var e=r(128).toString("hex");return new c.a(e,16).mod(this.N)},n.generateRandomString=function(){return r(40).toString("base64")},n.getRandomPassword=function(){return this.randomPassword},n.getSaltDevices=function(){return this.SaltToHashDevices},n.getVerifierDevices=function(){return this.verifierDevices},n.generateHashDevice=function(e,a,t){var n=this;this.randomPassword=this.generateRandomString();var i=""+e+a+":"+this.randomPassword,_=this.hash(i),o=r(16).toString("hex");this.SaltToHashDevices=this.padHex(new c.a(o,16)),this.g.modPow(new c.a(this.hexHash(this.SaltToHashDevices+_),16),this.N,function(e,a){e&&t(e,null),n.verifierDevices=n.padHex(a),t(null,null)})},n.calculateA=function(e,t){var n=this;this.g.modPow(e,this.N,function(e,a){e&&t(e,null),a.mod(n.N).equals(c.a.ZERO)&&t(new Error("Illegal paramater. A mod N cannot be 0."),null),t(null,a)})},n.calculateU=function(e,a){return this.UHexHash=this.hexHash(this.padHex(e)+this.padHex(a)),new c.a(this.UHexHash,16)},n.hash=function(e){var a=e instanceof l.Buffer?s.a.lib.WordArray.create(e):e,t=u()(a).toString();return new Array(64-t.length).join("0")+t},n.hexHash=function(e){return this.hash(l.Buffer.from(e,"hex"))},n.computehkdf=function(e,a){var t=s.a.lib.WordArray.create(l.Buffer.concat([this.infoBits,l.Buffer.from(String.fromCharCode(1),"utf8")])),n=e instanceof l.Buffer?s.a.lib.WordArray.create(e):e,i=a instanceof l.Buffer?s.a.lib.WordArray.create(a):a,_=h()(n,i),o=h()(t,_);return l.Buffer.from(o.toString(),"hex").slice(0,16)},n.getPasswordAuthenticationKey=function(e,a,t,n,i){var _=this;if(t.mod(this.N).equals(c.a.ZERO))throw new Error("B cannot be zero.");if(this.UValue=this.calculateU(this.largeAValue,t),this.UValue.equals(c.a.ZERO))throw new Error("U cannot be zero.");var o=""+this.poolName+e+":"+a,r=this.hash(o),s=new c.a(this.hexHash(this.padHex(n)+r),16);this.calculateS(s,t,function(e,a){e&&i(e,null);var t=_.computehkdf(l.Buffer.from(_.padHex(a),"hex"),l.Buffer.from(_.padHex(_.UValue.toString(16)),"hex"));i(null,t)})},n.calculateS=function(t,n,i){var _=this;this.g.modPow(t,this.N,function(e,a){e&&i(e,null),n.subtract(_.k.multiply(a)).modPow(_.smallAValue.add(_.UValue.multiply(t)),_.N,function(e,a){e&&i(e,null),i(null,a.mod(_.N))})})},n.getNewPasswordRequiredChallengeUserAttributePrefix=function(){return"userAttributes."},n.padHex=function(e){var a=e.toString(16);return a.length%2==1?a="0"+a:-1!=="89ABCDEFabcdef".indexOf(a[0])&&(a="00"+a),a},S);function S(e){this.N=new c.a("FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF",16),this.g=new c.a("2",16),this.k=new c.a(this.hexHash("00"+this.N.toString(16)+"0"+this.g.toString(16)),16),this.smallAValue=this.generateRandomSmallA(),this.getLargeAValue(function(){}),this.infoBits=l.Buffer.from("Caldera Derived Key","utf8"),this.poolName=e}},function(e,a,t){var n;e.exports=(n=t(0),function(){var e,i;"function"==typeof ArrayBuffer&&(e=n.lib.WordArray,i=e.init,(e.init=function(e){if(e instanceof ArrayBuffer&&(e=new Uint8Array(e)),(e instanceof Int8Array||"undefined"!=typeof Uint8ClampedArray&&e instanceof Uint8ClampedArray||e instanceof Int16Array||e instanceof Uint16Array||e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array)&&(e=new Uint8Array(e.buffer,e.byteOffset,e.byteLength)),e instanceof Uint8Array){for(var a=e.byteLength,t=[],n=0;n<a;n++)t[n>>>2]|=e[n]<<24-n%4*8;i.call(this,t,a)}else i.apply(this,arguments)}).prototype=e)}(),n.lib.WordArray)},function(e,a,t){var s;e.exports=(s=t(0),function(i){var e=s,a=e.lib,t=a.WordArray,n=a.Hasher,_=e.algo,o=[],A=[];!function(){function e(e){return 4294967296*(e-(0|e))|0}for(var a=2,t=0;t<64;)!function(e){for(var a=i.sqrt(e),t=2;t<=a;t++)if(!(e%t))return;return 1}(a)||(t<8&&(o[t]=e(i.pow(a,.5))),A[t]=e(i.pow(a,1/3)),t++),a++}();var T=[],r=_.SHA256=n.extend({_doReset:function(){this._hash=new t.init(o.slice(0))},_doProcessBlock:function(e,a){for(var t,n,i,_,o=this._hash.words,r=o[0],s=o[1],l=o[2],u=o[3],g=o[4],h=o[5],c=o[6],d=o[7],S=0;S<64;S++){S<16?T[S]=0|e[a+S]:(n=((t=T[S-15])<<25|t>>>7)^(t<<14|t>>>18)^t>>>3,_=((i=T[S-2])<<15|i>>>17)^(i<<13|i>>>19)^i>>>10,T[S]=n+T[S-7]+_+T[S-16]);var m=r&s^r&l^s&l,C=(r<<30|r>>>2)^(r<<19|r>>>13)^(r<<10|r>>>22),M=d+((g<<26|g>>>6)^(g<<21|g>>>11)^(g<<7|g>>>25))+(g&h^~g&c)+A[S]+T[S],d=c,c=h,h=g,g=u+M|0,u=l,l=s,s=r,r=M+(C+m)|0}o[0]=o[0]+r|0,o[1]=o[1]+s|0,o[2]=o[2]+l|0,o[3]=o[3]+u|0,o[4]=o[4]+g|0,o[5]=o[5]+h|0,o[6]=o[6]+c|0,o[7]=o[7]+d|0},_doFinalize:function(){var e=this._data,a=e.words,t=8*this._nDataBytes,n=8*e.sigBytes;return a[n>>>5]|=128<<24-n%32,a[14+(64+n>>>9<<4)]=i.floor(t/4294967296),a[15+(64+n>>>9<<4)]=t,e.sigBytes=4*a.length,this._process(),this._hash},clone:function(){var e=n.clone.call(this);return e._hash=this._hash.clone(),e}});e.SHA256=n._createHelper(r),e.HmacSHA256=n._createHmacHelper(r)}(Math),s.SHA256)},function(e,a,t){var n;e.exports=(n=t(0),t(4),t(24),n.HmacSHA256)},function(e,a,t){"use strict";function A(e,a){null!=e&&this.fromString(e,a)}function T(){return new A(null)}function s(e){return _.charAt(e)}function M(e){var a=T();return a.fromInt(e),a}function f(e){var a,t=1;return 0!=(a=e>>>16)&&(e=a,t+=16),0!=(a=e>>8)&&(e=a,t+=8),0!=(a=e>>4)&&(e=a,t+=4),0!=(a=e>>2)&&(e=a,t+=2),0!=(a=e>>1)&&(e=a,t+=1),t}function y(e){this.m=e,this.mp=e.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}a.a=A;var n="undefined"!=typeof navigator,i=n&&"Microsoft Internet Explorer"==navigator.appName?(A.prototype.am=function(e,a,t,n,i,_){for(var o=32767&a,r=a>>15;0<=--_;){var s=32767&this[e],l=this[e++]>>15,u=r*s+l*o;i=((s=o*s+((32767&u)<<15)+t[n]+(1073741823&i))>>>30)+(u>>>15)+r*l+(i>>>30),t[n++]=1073741823&s}return i},30):n&&"Netscape"!=navigator.appName?(A.prototype.am=function(e,a,t,n,i,_){for(;0<=--_;){var o=a*this[e++]+t[n]+i;i=Math.floor(o/67108864),t[n++]=67108863&o}return i},26):(A.prototype.am=function(e,a,t,n,i,_){for(var o=16383&a,r=a>>14;0<=--_;){var s=16383&this[e],l=this[e++]>>14,u=r*s+l*o;i=((s=o*s+((16383&u)<<14)+t[n]+i)>>28)+(u>>14)+r*l,t[n++]=268435455&s}return i},28);A.prototype.DB=i,A.prototype.DM=(1<<i)-1,A.prototype.DV=1<<i,A.prototype.FV=Math.pow(2,52),A.prototype.F1=52-i,A.prototype.F2=2*i-52;for(var _="0123456789abcdefghijklmnopqrstuvwxyz",l=new Array,o="0".charCodeAt(0),r=0;r<=9;++r)l[o++]=r;for(o="a".charCodeAt(0),r=10;r<36;++r)l[o++]=r;for(o="A".charCodeAt(0),r=10;r<36;++r)l[o++]=r;y.prototype.convert=function(e){var a=T();return e.abs().dlShiftTo(this.m.t,a),a.divRemTo(this.m,null,a),e.s<0&&0<a.compareTo(A.ZERO)&&this.m.subTo(a,a),a},y.prototype.revert=function(e){var a=T();return e.copyTo(a),this.reduce(a),a},y.prototype.reduce=function(e){for(;e.t<=this.mt2;)e[e.t++]=0;for(var a=0;a<this.m.t;++a){var t=32767&e[a],n=t*this.mpl+((t*this.mph+(e[a]>>15)*this.mpl&this.um)<<15)&e.DM;for(e[t=a+this.m.t]+=this.m.am(0,n,e,a,0,this.m.t);e[t]>=e.DV;)e[t]-=e.DV,e[++t]++}e.clamp(),e.drShiftTo(this.m.t,e),0<=e.compareTo(this.m)&&e.subTo(this.m,e)},y.prototype.mulTo=function(e,a,t){e.multiplyTo(a,t),this.reduce(t)},y.prototype.sqrTo=function(e,a){e.squareTo(a),this.reduce(a)},A.prototype.copyTo=function(e){for(var a=this.t-1;0<=a;--a)e[a]=this[a];e.t=this.t,e.s=this.s},A.prototype.fromInt=function(e){this.t=1,this.s=e<0?-1:0,0<e?this[0]=e:e<-1?this[0]=e+this.DV:this.t=0},A.prototype.fromString=function(e,a){var t;if(16==a)t=4;else if(8==a)t=3;else if(2==a)t=1;else if(32==a)t=5;else{if(4!=a)throw new Error("Only radix 2, 4, 8, 16, 32 are supported");t=2}this.t=0,this.s=0;for(var n,i,_=e.length,o=!1,r=0;0<=--_;){var s=(n=_,i=void 0,null==(i=l[e.charCodeAt(n)])?-1:i);s<0?"-"==e.charAt(_)&&(o=!0):(o=!1,0==r?this[this.t++]=s:r+t>this.DB?(this[this.t-1]|=(s&(1<<this.DB-r)-1)<<r,this[this.t++]=s>>this.DB-r):this[this.t-1]|=s<<r,(r+=t)>=this.DB&&(r-=this.DB))}this.clamp(),o&&A.ZERO.subTo(this,this)},A.prototype.clamp=function(){for(var e=this.s&this.DM;0<this.t&&this[this.t-1]==e;)--this.t},A.prototype.dlShiftTo=function(e,a){for(var t=this.t-1;0<=t;--t)a[t+e]=this[t];for(t=e-1;0<=t;--t)a[t]=0;a.t=this.t+e,a.s=this.s},A.prototype.drShiftTo=function(e,a){for(var t=e;t<this.t;++t)a[t-e]=this[t];a.t=Math.max(this.t-e,0),a.s=this.s},A.prototype.lShiftTo=function(e,a){for(var t=e%this.DB,n=this.DB-t,i=(1<<n)-1,_=Math.floor(e/this.DB),o=this.s<<t&this.DM,r=this.t-1;0<=r;--r)a[r+_+1]=this[r]>>n|o,o=(this[r]&i)<<t;for(r=_-1;0<=r;--r)a[r]=0;a[_]=o,a.t=this.t+_+1,a.s=this.s,a.clamp()},A.prototype.rShiftTo=function(e,a){a.s=this.s;var t=Math.floor(e/this.DB);if(t>=this.t)a.t=0;else{var n=e%this.DB,i=this.DB-n,_=(1<<n)-1;a[0]=this[t]>>n;for(var o=t+1;o<this.t;++o)a[o-t-1]|=(this[o]&_)<<i,a[o-t]=this[o]>>n;0<n&&(a[this.t-t-1]|=(this.s&_)<<i),a.t=this.t-t,a.clamp()}},A.prototype.subTo=function(e,a){for(var t=0,n=0,i=Math.min(e.t,this.t);t<i;)n+=this[t]-e[t],a[t++]=n&this.DM,n>>=this.DB;if(e.t<this.t){for(n-=e.s;t<this.t;)n+=this[t],a[t++]=n&this.DM,n>>=this.DB;n+=this.s}else{for(n+=this.s;t<e.t;)n-=e[t],a[t++]=n&this.DM,n>>=this.DB;n-=e.s}a.s=n<0?-1:0,n<-1?a[t++]=this.DV+n:0<n&&(a[t++]=n),a.t=t,a.clamp()},A.prototype.multiplyTo=function(e,a){var t=this.abs(),n=e.abs(),i=t.t;for(a.t=i+n.t;0<=--i;)a[i]=0;for(i=0;i<n.t;++i)a[i+t.t]=t.am(0,n[i],a,i,0,t.t);a.s=0,a.clamp(),this.s!=e.s&&A.ZERO.subTo(a,a)},A.prototype.squareTo=function(e){for(var a=this.abs(),t=e.t=2*a.t;0<=--t;)e[t]=0;for(t=0;t<a.t-1;++t){var n=a.am(t,a[t],e,2*t,0,1);(e[t+a.t]+=a.am(t+1,2*a[t],e,2*t+1,n,a.t-t-1))>=a.DV&&(e[t+a.t]-=a.DV,e[t+a.t+1]=1)}0<e.t&&(e[e.t-1]+=a.am(t,a[t],e,2*t,0,1)),e.s=0,e.clamp()},A.prototype.divRemTo=function(e,a,t){var n=e.abs();if(!(n.t<=0)){var i=this.abs();if(i.t<n.t)return null!=a&&a.fromInt(0),void(null!=t&&this.copyTo(t));null==t&&(t=T());var _=T(),o=this.s,r=e.s,s=this.DB-f(n[n.t-1]);0<s?(n.lShiftTo(s,_),i.lShiftTo(s,t)):(n.copyTo(_),i.copyTo(t));var l=_.t,u=_[l-1];if(0!=u){var g=u*(1<<this.F1)+(1<l?_[l-2]>>this.F2:0),h=this.FV/g,c=(1<<this.F1)/g,d=1<<this.F2,S=t.t,m=S-l,C=null==a?T():a;for(_.dlShiftTo(m,C),0<=t.compareTo(C)&&(t[t.t++]=1,t.subTo(C,t)),A.ONE.dlShiftTo(l,C),C.subTo(_,_);_.t<l;)_[_.t++]=0;for(;0<=--m;){var M=t[--S]==u?this.DM:Math.floor(t[S]*h+(t[S-1]+d)*c);if((t[S]+=_.am(0,M,t,m,0,l))<M)for(_.dlShiftTo(m,C),t.subTo(C,t);t[S]<--M;)t.subTo(C,t)}null!=a&&(t.drShiftTo(l,a),o!=r&&A.ZERO.subTo(a,a)),t.t=l,t.clamp(),0<s&&t.rShiftTo(s,t),o<0&&A.ZERO.subTo(t,t)}}},A.prototype.invDigit=function(){if(this.t<1)return 0;var e=this[0];if(0==(1&e))return 0;var a=3&e;return 0<(a=(a=(a=(a=a*(2-(15&e)*a)&15)*(2-(255&e)*a)&255)*(2-((65535&e)*a&65535))&65535)*(2-e*a%this.DV)%this.DV)?this.DV-a:-a},A.prototype.addTo=function(e,a){for(var t=0,n=0,i=Math.min(e.t,this.t);t<i;)n+=this[t]+e[t],a[t++]=n&this.DM,n>>=this.DB;if(e.t<this.t){for(n+=e.s;t<this.t;)n+=this[t],a[t++]=n&this.DM,n>>=this.DB;n+=this.s}else{for(n+=this.s;t<e.t;)n+=e[t],a[t++]=n&this.DM,n>>=this.DB;n+=e.s}a.s=n<0?-1:0,0<n?a[t++]=n:n<-1&&(a[t++]=this.DV+n),a.t=t,a.clamp()},A.prototype.toString=function(e){if(this.s<0)return"-"+this.negate().toString(e);var a;if(16==e)a=4;else if(8==e)a=3;else if(2==e)a=1;else if(32==e)a=5;else{if(4!=e)throw new Error("Only radix 2, 4, 8, 16, 32 are supported");a=2}var t,n=(1<<a)-1,i=!1,_="",o=this.t,r=this.DB-o*this.DB%a;if(0<o--)for(r<this.DB&&0<(t=this[o]>>r)&&(i=!0,_=s(t));0<=o;)r<a?(t=(this[o]&(1<<r)-1)<<a-r,t|=this[--o]>>(r+=this.DB-a)):(t=this[o]>>(r-=a)&n,r<=0&&(r+=this.DB,--o)),0<t&&(i=!0),i&&(_+=s(t));return i?_:"0"},A.prototype.negate=function(){var e=T();return A.ZERO.subTo(this,e),e},A.prototype.abs=function(){return this.s<0?this.negate():this},A.prototype.compareTo=function(e){var a=this.s-e.s;if(0!=a)return a;var t=this.t;if(0!=(a=t-e.t))return this.s<0?-a:a;for(;0<=--t;)if(0!=(a=this[t]-e[t]))return a;return 0},A.prototype.bitLength=function(){return this.t<=0?0:this.DB*(this.t-1)+f(this[this.t-1]^this.s&this.DM)},A.prototype.mod=function(e){var a=T();return this.abs().divRemTo(e,null,a),this.s<0&&0<a.compareTo(A.ZERO)&&e.subTo(a,a),a},A.prototype.equals=function(e){return 0==this.compareTo(e)},A.prototype.add=function(e){var a=T();return this.addTo(e,a),a},A.prototype.subtract=function(e){var a=T();return this.subTo(e,a),a},A.prototype.multiply=function(e){var a=T();return this.multiplyTo(e,a),a},A.prototype.divide=function(e){var a=T();return this.divRemTo(e,a,null),a},A.prototype.modPow=function(e,a,t){var n,i=e.bitLength(),_=M(1),o=new y(a);if(i<=0)return _;n=i<18?1:i<48?3:i<144?4:i<768?5:6;var r=new Array,s=3,l=n-1,u=(1<<n)-1;if(r[1]=o.convert(this),1<n){var g=T();for(o.sqrTo(r[1],g);s<=u;)r[s]=T(),o.mulTo(g,r[s-2],r[s]),s+=2}for(var h,c,d=e.t-1,S=!0,m=T(),i=f(e[d])-1;0<=d;){for(l<=i?h=e[d]>>i-l&u:(h=(e[d]&(1<<i+1)-1)<<l-i,0<d&&(h|=e[d-1]>>this.DB+i-l)),s=n;0==(1&h);)h>>=1,--s;if((i-=s)<0&&(i+=this.DB,--d),S)r[h].copyTo(_),S=!1;else{for(;1<s;)o.sqrTo(_,m),o.sqrTo(m,_),s-=2;0<s?o.sqrTo(_,m):(c=_,_=m,m=c),o.mulTo(m,r[h],_)}for(;0<=d&&0==(e[d]&1<<i);)o.sqrTo(_,m),c=_,_=m,m=c,--i<0&&(i=this.DB-1,--d)}var C=o.revert(_);return t(null,C),C},A.ZERO=M(0),A.ONE=M(1)},function(e,a,t){"use strict";t.d(a,"a",function(){return r});var n,i,_,o=t(8),r=(n=o.a,_=n,(i=s).prototype=Object.create(_.prototype),(i.prototype.constructor=i).__proto__=_,s);function s(e){var a=(void 0===e?{}:e).AccessToken;return n.call(this,a||"")||this}},function(e,a,t){"use strict";t.d(a,"a",function(){return _});var n,i=t(1),_=(t.n(i),(n=o.prototype).getJwtToken=function(){return this.jwtToken},n.getExpiration=function(){return this.payload.exp},n.getIssuedAt=function(){return this.payload.iat},n.decodePayload=function(){var e=this.jwtToken.split(".")[1];try{return JSON.parse(i.Buffer.from(e,"base64").toString("utf8"))}catch(e){return{}}},o);function o(e){this.jwtToken=e||"",this.payload=this.decodePayload()}},function(e,a,t){"use strict";t.d(a,"a",function(){return r});var n,i,_,o=t(8),r=(n=o.a,_=n,(i=s).prototype=Object.create(_.prototype),(i.prototype.constructor=i).__proto__=_,s);function s(e){var a=(void 0===e?{}:e).IdToken;return n.call(this,a||"")||this}},function(e,a,t){"use strict";t.d(a,"a",function(){return n});var n=(i.prototype.getToken=function(){return this.token},i);function i(e){var a=(void 0===e?{}:e).RefreshToken;this.token=a||""}},function(e,a,t){"use strict";t.d(a,"a",function(){return y});var n,S=t(1),i=(t.n(S),t(0)),m=t.n(i),_=t(3),o=(t.n(_),t(25)),C=t.n(o),r=t(5),M=t.n(r),A=t(6),l=t(2),g=t(7),h=t(9),c=t(10),d=t(12),s=t(13),u=t(14),T=t(15),f="undefined"!=typeof navigator?navigator.userAgent:"nodejs",y=((n=p.prototype).setSignInUserSession=function(e){this.clearCachedUserData(),this.signInUserSession=e,this.cacheTokens()},n.getSignInUserSession=function(){return this.signInUserSession},n.getUsername=function(){return this.username},n.getAuthenticationFlowType=function(){return this.authenticationFlowType},n.setAuthenticationFlowType=function(e){this.authenticationFlowType=e},n.initiateAuth=function(e,i){var _=this,a=e.getAuthParameters();a.USERNAME=this.username;var t=0!==Object.keys(e.getValidationData()).length?e.getValidationData():e.getClientMetadata(),n={AuthFlow:"CUSTOM_AUTH",ClientId:this.pool.getClientId(),AuthParameters:a,ClientMetadata:t};this.getUserContextData()&&(n.UserContextData=this.getUserContextData()),this.client.request("InitiateAuth",n,function(e,a){if(e)return i.onFailure(e);var t=a.ChallengeName,n=a.ChallengeParameters;return"CUSTOM_CHALLENGE"===t?(_.Session=a.Session,i.customChallenge(n)):(_.signInUserSession=_.getCognitoUserSession(a.AuthenticationResult),_.cacheTokens(),i.onSuccess(_.signInUserSession))})},n.authenticateUser=function(e,a){return"USER_PASSWORD_AUTH"===this.authenticationFlowType?this.authenticateUserPlainUsernamePassword(e,a):"USER_SRP_AUTH"===this.authenticationFlowType||"CUSTOM_AUTH"===this.authenticationFlowType?this.authenticateUserDefaultAuth(e,a):a.onFailure(new Error("Authentication flow type is invalid."))},n.authenticateUserDefaultAuth=function(n,g){var i,_,h=this,c=new l.a(this.pool.getUserPoolId().split("_")[1]),d=new s.a,o={};null!=this.deviceKey&&(o.DEVICE_KEY=this.deviceKey),o.USERNAME=this.username,c.getLargeAValue(function(e,a){e&&g.onFailure(e),o.SRP_A=a.toString(16),"CUSTOM_AUTH"===h.authenticationFlowType&&(o.CHALLENGE_NAME="SRP_A");var u=0!==Object.keys(n.getValidationData()).length?n.getValidationData():n.getClientMetadata(),t={AuthFlow:h.authenticationFlowType,ClientId:h.pool.getClientId(),AuthParameters:o,ClientMetadata:u};h.getUserContextData(h.username)&&(t.UserContextData=h.getUserContextData(h.username)),h.client.request("InitiateAuth",t,function(e,s){if(e)return g.onFailure(e);var l=s.ChallengeParameters;h.username=l.USER_ID_FOR_SRP,i=new A.a(l.SRP_B,16),_=new A.a(l.SALT,16),h.getCachedDeviceKeyAndPassword(),c.getPasswordAuthenticationKey(h.username,n.getPassword(),i,_,function(e,a){e&&g.onFailure(e);var t=d.getNowString(),n=m.a.lib.WordArray.create(S.Buffer.concat([S.Buffer.from(h.pool.getUserPoolId().split("_")[1],"utf8"),S.Buffer.from(h.username,"utf8"),S.Buffer.from(l.SECRET_BLOCK,"base64"),S.Buffer.from(t,"utf8")])),i=m.a.lib.WordArray.create(a),_=C.a.stringify(M()(n,i)),o={};o.USERNAME=h.username,o.PASSWORD_CLAIM_SECRET_BLOCK=l.SECRET_BLOCK,o.TIMESTAMP=t,o.PASSWORD_CLAIM_SIGNATURE=_,null!=h.deviceKey&&(o.DEVICE_KEY=h.deviceKey);var r={ChallengeName:"PASSWORD_VERIFIER",ClientId:h.pool.getClientId(),ChallengeResponses:o,Session:s.Session,ClientMetadata:u};h.getUserContextData()&&(r.UserContextData=h.getUserContextData()),function t(n,i){return h.client.request("RespondToAuthChallenge",n,function(e,a){return e&&"ResourceNotFoundException"===e.code&&-1!==e.message.toLowerCase().indexOf("device")?(o.DEVICE_KEY=null,h.deviceKey=null,h.randomPassword=null,h.deviceGroupKey=null,h.clearCachedDeviceKeyAndPassword(),t(n,i)):i(e,a)})}(r,function(e,a){return e?g.onFailure(e):h.authenticateUserInternal(a,c,g)})})})})},n.authenticateUserPlainUsernamePassword=function(e,t){var n,a,i,_=this,o={};o.USERNAME=this.username,o.PASSWORD=e.getPassword(),o.PASSWORD?(n=new l.a(this.pool.getUserPoolId().split("_")[1]),this.getCachedDeviceKeyAndPassword(),null!=this.deviceKey&&(o.DEVICE_KEY=this.deviceKey),a=0!==Object.keys(e.getValidationData()).length?e.getValidationData():e.getClientMetadata(),i={AuthFlow:"USER_PASSWORD_AUTH",ClientId:this.pool.getClientId(),AuthParameters:o,ClientMetadata:a},this.getUserContextData(this.username)&&(i.UserContextData=this.getUserContextData(this.username)),this.client.request("InitiateAuth",i,function(e,a){return e?t.onFailure(e):_.authenticateUserInternal(a,n,t)})):t.onFailure(new Error("PASSWORD parameter is required"))},n.authenticateUserInternal=function(t,n,i){var _=this,e=t.ChallengeName,a=t.ChallengeParameters;if("SMS_MFA"===e)return this.Session=t.Session,i.mfaRequired(e,a);if("SELECT_MFA_TYPE"===e)return this.Session=t.Session,i.selectMFAType(e,a);if("MFA_SETUP"===e)return this.Session=t.Session,i.mfaSetup(e,a);if("SOFTWARE_TOKEN_MFA"===e)return this.Session=t.Session,i.totpRequired(e,a);if("CUSTOM_CHALLENGE"===e)return this.Session=t.Session,i.customChallenge(a);if("NEW_PASSWORD_REQUIRED"===e){this.Session=t.Session;var o=null,r=null,s=[],l=n.getNewPasswordRequiredChallengeUserAttributePrefix();if(a&&(o=JSON.parse(t.ChallengeParameters.userAttributes),r=JSON.parse(t.ChallengeParameters.requiredAttributes)),r)for(var u=0;u<r.length;u++)s[u]=r[u].substr(l.length);return i.newPasswordRequired(o,s)}if("DEVICE_SRP_AUTH"!==e){this.signInUserSession=this.getCognitoUserSession(t.AuthenticationResult),this.challengeName=e,this.cacheTokens();var g=t.AuthenticationResult.NewDeviceMetadata;if(null==g)return i.onSuccess(this.signInUserSession);n.generateHashDevice(t.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,t.AuthenticationResult.NewDeviceMetadata.DeviceKey,function(e){if(e)return i.onFailure(e);var a={Salt:S.Buffer.from(n.getSaltDevices(),"hex").toString("base64"),PasswordVerifier:S.Buffer.from(n.getVerifierDevices(),"hex").toString("base64")};_.verifierDevices=a.PasswordVerifier,_.deviceGroupKey=g.DeviceGroupKey,_.randomPassword=n.getRandomPassword(),_.client.request("ConfirmDevice",{DeviceKey:g.DeviceKey,AccessToken:_.signInUserSession.getAccessToken().getJwtToken(),DeviceSecretVerifierConfig:a,DeviceName:f},function(e,a){return e?i.onFailure(e):(_.deviceKey=t.AuthenticationResult.NewDeviceMetadata.DeviceKey,_.cacheDeviceKeyAndPassword(),!0===a.UserConfirmationNecessary?i.onSuccess(_.signInUserSession,a.UserConfirmationNecessary):i.onSuccess(_.signInUserSession))})})}else this.getDeviceResponse(i)},n.completeNewPasswordChallenge=function(e,a,t,n){var i=this;if(!e)return t.onFailure(new Error("New password is required."));var _=new l.a(this.pool.getUserPoolId().split("_")[1]),o=_.getNewPasswordRequiredChallengeUserAttributePrefix(),r={};a&&Object.keys(a).forEach(function(e){r[o+e]=a[e]}),r.NEW_PASSWORD=e,r.USERNAME=this.username;var s={ChallengeName:"NEW_PASSWORD_REQUIRED",ClientId:this.pool.getClientId(),ChallengeResponses:r,Session:this.Session,ClientMetadata:n};this.getUserContextData()&&(s.UserContextData=this.getUserContextData()),this.client.request("RespondToAuthChallenge",s,function(e,a){return e?t.onFailure(e):i.authenticateUserInternal(a,_,t)})},n.getDeviceResponse=function(u,n){var g=this,i=new l.a(this.deviceGroupKey),h=new s.a,_={};_.USERNAME=this.username,_.DEVICE_KEY=this.deviceKey,i.getLargeAValue(function(e,a){e&&u.onFailure(e),_.SRP_A=a.toString(16);var t={ChallengeName:"DEVICE_SRP_AUTH",ClientId:g.pool.getClientId(),ChallengeResponses:_,ClientMetadata:n};g.getUserContextData()&&(t.UserContextData=g.getUserContextData()),g.client.request("RespondToAuthChallenge",t,function(e,s){if(e)return u.onFailure(e);var l=s.ChallengeParameters,a=new A.a(l.SRP_B,16),t=new A.a(l.SALT,16);i.getPasswordAuthenticationKey(g.deviceKey,g.randomPassword,a,t,function(e,a){if(e)return u.onFailure(e);var t=h.getNowString(),n=m.a.lib.WordArray.create(S.Buffer.concat([S.Buffer.from(g.deviceGroupKey,"utf8"),S.Buffer.from(g.deviceKey,"utf8"),S.Buffer.from(l.SECRET_BLOCK,"base64"),S.Buffer.from(t,"utf8")])),i=m.a.lib.WordArray.create(a),_=C.a.stringify(M()(n,i)),o={};o.USERNAME=g.username,o.PASSWORD_CLAIM_SECRET_BLOCK=l.SECRET_BLOCK,o.TIMESTAMP=t,o.PASSWORD_CLAIM_SIGNATURE=_,o.DEVICE_KEY=g.deviceKey;var r={ChallengeName:"DEVICE_PASSWORD_VERIFIER",ClientId:g.pool.getClientId(),ChallengeResponses:o,Session:s.Session};g.getUserContextData()&&(r.UserContextData=g.getUserContextData()),g.client.request("RespondToAuthChallenge",r,function(e,a){return e?u.onFailure(e):(g.signInUserSession=g.getCognitoUserSession(a.AuthenticationResult),g.cacheTokens(),u.onSuccess(g.signInUserSession))})})})})},n.confirmRegistration=function(e,a,t,n){var i={ClientId:this.pool.getClientId(),ConfirmationCode:e,Username:this.username,ForceAliasCreation:a,ClientMetadata:n};this.getUserContextData()&&(i.UserContextData=this.getUserContextData()),this.client.request("ConfirmSignUp",i,function(e){return e?t(e,null):t(null,"SUCCESS")})},n.sendCustomChallengeAnswer=function(e,t,a){var n=this,i={};i.USERNAME=this.username,i.ANSWER=e;var _=new l.a(this.pool.getUserPoolId().split("_")[1]);this.getCachedDeviceKeyAndPassword(),null!=this.deviceKey&&(i.DEVICE_KEY=this.deviceKey);var o={ChallengeName:"CUSTOM_CHALLENGE",ChallengeResponses:i,ClientId:this.pool.getClientId(),Session:this.Session,ClientMetadata:a};this.getUserContextData()&&(o.UserContextData=this.getUserContextData()),this.client.request("RespondToAuthChallenge",o,function(e,a){return e?t.onFailure(e):n.authenticateUserInternal(a,_,t)})},n.sendMFACode=function(e,i,a,t){var _=this,n={};n.USERNAME=this.username,n.SMS_MFA_CODE=e;var o=a||"SMS_MFA";"SOFTWARE_TOKEN_MFA"===o&&(n.SOFTWARE_TOKEN_MFA_CODE=e),null!=this.deviceKey&&(n.DEVICE_KEY=this.deviceKey);var r={ChallengeName:o,ChallengeResponses:n,ClientId:this.pool.getClientId(),Session:this.Session,ClientMetadata:t};this.getUserContextData()&&(r.UserContextData=this.getUserContextData()),this.client.request("RespondToAuthChallenge",r,function(e,t){if(e)return i.onFailure(e);if("DEVICE_SRP_AUTH"!==t.ChallengeName){if(_.signInUserSession=_.getCognitoUserSession(t.AuthenticationResult),_.cacheTokens(),null==t.AuthenticationResult.NewDeviceMetadata)return i.onSuccess(_.signInUserSession);var n=new l.a(_.pool.getUserPoolId().split("_")[1]);n.generateHashDevice(t.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,t.AuthenticationResult.NewDeviceMetadata.DeviceKey,function(e){if(e)return i.onFailure(e);var a={Salt:S.Buffer.from(n.getSaltDevices(),"hex").toString("base64"),PasswordVerifier:S.Buffer.from(n.getVerifierDevices(),"hex").toString("base64")};_.verifierDevices=a.PasswordVerifier,_.deviceGroupKey=t.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,_.randomPassword=n.getRandomPassword(),_.client.request("ConfirmDevice",{DeviceKey:t.AuthenticationResult.NewDeviceMetadata.DeviceKey,AccessToken:_.signInUserSession.getAccessToken().getJwtToken(),DeviceSecretVerifierConfig:a,DeviceName:f},function(e,a){return e?i.onFailure(e):(_.deviceKey=t.AuthenticationResult.NewDeviceMetadata.DeviceKey,_.cacheDeviceKeyAndPassword(),!0===a.UserConfirmationNecessary?i.onSuccess(_.signInUserSession,a.UserConfirmationNecessary):i.onSuccess(_.signInUserSession))})})}else _.getDeviceResponse(i)})},n.changePassword=function(e,a,t,n){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t(new Error("User is not authenticated"),null);this.client.request("ChangePassword",{PreviousPassword:e,ProposedPassword:a,AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),ClientMetadata:n},function(e){return e?t(e,null):t(null,"SUCCESS")})},n.enableMFA=function(a){if(null==this.signInUserSession||!this.signInUserSession.isValid())return a(new Error("User is not authenticated"),null);var e=[];e.push({DeliveryMedium:"SMS",AttributeName:"phone_number"}),this.client.request("SetUserSettings",{MFAOptions:e,AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?a(e,null):a(null,"SUCCESS")})},n.setUserMfaPreference=function(e,a,t){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t(new Error("User is not authenticated"),null);this.client.request("SetUserMFAPreference",{SMSMfaSettings:e,SoftwareTokenMfaSettings:a,AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?t(e,null):t(null,"SUCCESS")})},n.disableMFA=function(a){if(null==this.signInUserSession||!this.signInUserSession.isValid())return a(new Error("User is not authenticated"),null);this.client.request("SetUserSettings",{MFAOptions:[],AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?a(e,null):a(null,"SUCCESS")})},n.deleteUser=function(a,e){var t=this;if(null==this.signInUserSession||!this.signInUserSession.isValid())return a(new Error("User is not authenticated"),null);this.client.request("DeleteUser",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),ClientMetadata:e},function(e){return e?a(e,null):(t.clearCachedUser(),a(null,"SUCCESS"))})},n.updateAttributes=function(e,a,t){var n=this;if(null==this.signInUserSession||!this.signInUserSession.isValid())return a(new Error("User is not authenticated"),null);this.client.request("UpdateUserAttributes",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),UserAttributes:e,ClientMetadata:t},function(e){return e?a(e,null):n.getUserData(function(){return a(null,"SUCCESS")},{bypassCache:!0})})},n.getUserAttributes=function(o){if(null==this.signInUserSession||!this.signInUserSession.isValid())return o(new Error("User is not authenticated"),null);this.client.request("GetUser",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e,a){if(e)return o(e,null);for(var t=[],n=0;n<a.UserAttributes.length;n++){var i={Name:a.UserAttributes[n].Name,Value:a.UserAttributes[n].Value},_=new u.a(i);t.push(_)}return o(null,t)})},n.getMFAOptions=function(t){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t(new Error("User is not authenticated"),null);this.client.request("GetUser",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e,a){return e?t(e,null):t(null,a.MFAOptions)})},n.createGetUserRequest=function(){return this.client.promisifyRequest("GetUser",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()})},n.refreshSessionIfPossible=function(){var t=this;return new Promise(function(e){var a=t.signInUserSession.getRefreshToken();a&&a.getToken()?t.refreshSession(a,e):e()})},n.getUserData=function(a,e){var t=this;if(null==this.signInUserSession||!this.signInUserSession.isValid())return this.clearCachedUserData(),a(new Error("User is not authenticated"),null);var n=this.getUserDataFromCache();if(n)if(this.isFetchUserDataAndTokenRequired(e))this.fetchUserData().then(function(e){return t.refreshSessionIfPossible().then(function(){return e})}).then(function(e){return a(null,e)}).catch(a);else try{return void a(null,JSON.parse(n))}catch(e){return this.clearCachedUserData(),void a(e,null)}else this.fetchUserData().then(function(e){a(null,e)}).catch(a)},n.getUserDataFromCache=function(){return this.storage.getItem(this.userDataKey)},n.isFetchUserDataAndTokenRequired=function(e){var a=(e||{}).bypassCache;return void 0!==a&&a},n.fetchUserData=function(){var a=this;return this.createGetUserRequest().then(function(e){return a.cacheUserData(e),e})},n.deleteAttributes=function(e,a){if(null==this.signInUserSession||!this.signInUserSession.isValid())return a(new Error("User is not authenticated"),null);this.client.request("DeleteUserAttributes",{UserAttributeNames:e,AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?a(e,null):a(null,"SUCCESS")})},n.resendConfirmationCode=function(t,e){var a={ClientId:this.pool.getClientId(),Username:this.username,ClientMetadata:e};this.client.request("ResendConfirmationCode",a,function(e,a){return e?t(e,null):t(null,a)})},n.getSession=function(e){if(null==this.username)return e(new Error("Username is null. Cannot retrieve a new session"),null);if(null!=this.signInUserSession&&this.signInUserSession.isValid())return e(null,this.signInUserSession);var a="CognitoIdentityServiceProvider."+this.pool.getClientId()+"."+this.username,t=a+".idToken",n=a+".accessToken",i=a+".refreshToken",_=a+".clockDrift";if(this.storage.getItem(t)){var o=new h.a({IdToken:this.storage.getItem(t)}),r=new g.a({AccessToken:this.storage.getItem(n)}),s=new c.a({RefreshToken:this.storage.getItem(i)}),l={IdToken:o,AccessToken:r,RefreshToken:s,ClockDrift:parseInt(this.storage.getItem(_),0)||0},u=new d.a(l);if(u.isValid())return this.signInUserSession=u,e(null,this.signInUserSession);if(!s.getToken())return e(new Error("Cannot retrieve a new session. Please authenticate."),null);this.refreshSession(s,e)}else e(new Error("Local storage is missing an ID Token, Please authenticate"),null)},n.refreshSession=function(n,i,e){var _=this,a={};a.REFRESH_TOKEN=n.getToken();var t,o="CognitoIdentityServiceProvider."+this.pool.getClientId(),r=o+".LastAuthUser";this.storage.getItem(r)&&(this.username=this.storage.getItem(r),t=o+"."+this.username+".deviceKey",this.deviceKey=this.storage.getItem(t),a.DEVICE_KEY=this.deviceKey);var s={ClientId:this.pool.getClientId(),AuthFlow:"REFRESH_TOKEN_AUTH",AuthParameters:a,ClientMetadata:e};this.getUserContextData()&&(s.UserContextData=this.getUserContextData()),this.client.request("InitiateAuth",s,function(e,a){if(e)return"NotAuthorizedException"===e.code&&_.clearCachedUser(),i(e,null);if(a){var t=a.AuthenticationResult;return Object.prototype.hasOwnProperty.call(t,"RefreshToken")||(t.RefreshToken=n.getToken()),_.signInUserSession=_.getCognitoUserSession(t),_.cacheTokens(),i(null,_.signInUserSession)}})},n.cacheTokens=function(){var e="CognitoIdentityServiceProvider."+this.pool.getClientId(),a=e+"."+this.username+".idToken",t=e+"."+this.username+".accessToken",n=e+"."+this.username+".refreshToken",i=e+"."+this.username+".clockDrift",_=e+".LastAuthUser";this.storage.setItem(a,this.signInUserSession.getIdToken().getJwtToken()),this.storage.setItem(t,this.signInUserSession.getAccessToken().getJwtToken()),this.storage.setItem(n,this.signInUserSession.getRefreshToken().getToken()),this.storage.setItem(i,""+this.signInUserSession.getClockDrift()),this.storage.setItem(_,this.username)},n.cacheUserData=function(e){this.storage.setItem(this.userDataKey,JSON.stringify(e))},n.clearCachedUserData=function(){this.storage.removeItem(this.userDataKey)},n.clearCachedUser=function(){this.clearCachedTokens(),this.clearCachedUserData()},n.cacheDeviceKeyAndPassword=function(){var e="CognitoIdentityServiceProvider."+this.pool.getClientId()+"."+this.username,a=e+".deviceKey",t=e+".randomPasswordKey",n=e+".deviceGroupKey";this.storage.setItem(a,this.deviceKey),this.storage.setItem(t,this.randomPassword),this.storage.setItem(n,this.deviceGroupKey)},n.getCachedDeviceKeyAndPassword=function(){var e="CognitoIdentityServiceProvider."+this.pool.getClientId()+"."+this.username,a=e+".deviceKey",t=e+".randomPasswordKey",n=e+".deviceGroupKey";this.storage.getItem(a)&&(this.deviceKey=this.storage.getItem(a),this.randomPassword=this.storage.getItem(t),this.deviceGroupKey=this.storage.getItem(n))},n.clearCachedDeviceKeyAndPassword=function(){var e="CognitoIdentityServiceProvider."+this.pool.getClientId()+"."+this.username,a=e+".deviceKey",t=e+".randomPasswordKey",n=e+".deviceGroupKey";this.storage.removeItem(a),this.storage.removeItem(t),this.storage.removeItem(n)},n.clearCachedTokens=function(){var e="CognitoIdentityServiceProvider."+this.pool.getClientId(),a=e+"."+this.username+".idToken",t=e+"."+this.username+".accessToken",n=e+"."+this.username+".refreshToken",i=e+".LastAuthUser",_=e+"."+this.username+".clockDrift";this.storage.removeItem(a),this.storage.removeItem(t),this.storage.removeItem(n),this.storage.removeItem(i),this.storage.removeItem(_)},n.getCognitoUserSession=function(e){var a={IdToken:new h.a(e),AccessToken:new g.a(e),RefreshToken:new c.a(e)};return new d.a(a)},n.forgotPassword=function(t,e){var a={ClientId:this.pool.getClientId(),Username:this.username,ClientMetadata:e};this.getUserContextData()&&(a.UserContextData=this.getUserContextData()),this.client.request("ForgotPassword",a,function(e,a){return e?t.onFailure(e):"function"==typeof t.inputVerificationCode?t.inputVerificationCode(a):t.onSuccess(a)})},n.confirmPassword=function(e,a,t,n){var i={ClientId:this.pool.getClientId(),Username:this.username,ConfirmationCode:e,Password:a,ClientMetadata:n};this.getUserContextData()&&(i.UserContextData=this.getUserContextData()),this.client.request("ConfirmForgotPassword",i,function(e){return e?t.onFailure(e):t.onSuccess()})},n.getAttributeVerificationCode=function(e,t,a){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t.onFailure(new Error("User is not authenticated"));this.client.request("GetUserAttributeVerificationCode",{AttributeName:e,AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),ClientMetadata:a},function(e,a){return e?t.onFailure(e):"function"==typeof t.inputVerificationCode?t.inputVerificationCode(a):t.onSuccess()})},n.verifyAttribute=function(e,a,t){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t.onFailure(new Error("User is not authenticated"));this.client.request("VerifyUserAttribute",{AttributeName:e,Code:a,AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?t.onFailure(e):t.onSuccess("SUCCESS")})},n.getDevice=function(t){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t.onFailure(new Error("User is not authenticated"));this.client.request("GetDevice",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),DeviceKey:this.deviceKey},function(e,a){return e?t.onFailure(e):t.onSuccess(a)})},n.forgetSpecificDevice=function(e,a){if(null==this.signInUserSession||!this.signInUserSession.isValid())return a.onFailure(new Error("User is not authenticated"));this.client.request("ForgetDevice",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),DeviceKey:e},function(e){return e?a.onFailure(e):a.onSuccess("SUCCESS")})},n.forgetDevice=function(a){var t=this;this.forgetSpecificDevice(this.deviceKey,{onFailure:a.onFailure,onSuccess:function(e){return t.deviceKey=null,t.deviceGroupKey=null,t.randomPassword=null,t.clearCachedDeviceKeyAndPassword(),a.onSuccess(e)}})},n.setDeviceStatusRemembered=function(a){if(null==this.signInUserSession||!this.signInUserSession.isValid())return a.onFailure(new Error("User is not authenticated"));this.client.request("UpdateDeviceStatus",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),DeviceKey:this.deviceKey,DeviceRememberedStatus:"remembered"},function(e){return e?a.onFailure(e):a.onSuccess("SUCCESS")})},n.setDeviceStatusNotRemembered=function(a){if(null==this.signInUserSession||!this.signInUserSession.isValid())return a.onFailure(new Error("User is not authenticated"));this.client.request("UpdateDeviceStatus",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),DeviceKey:this.deviceKey,DeviceRememberedStatus:"not_remembered"},function(e){return e?a.onFailure(e):a.onSuccess("SUCCESS")})},n.listDevices=function(e,a,t){if(null==this.signInUserSession||!this.signInUserSession.isValid())return t.onFailure(new Error("User is not authenticated"));var n={AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),Limit:e};a&&(n.PaginationToken=a),this.client.request("ListDevices",n,function(e,a){return e?t.onFailure(e):t.onSuccess(a)})},n.globalSignOut=function(a){var t=this;if(null==this.signInUserSession||!this.signInUserSession.isValid())return a.onFailure(new Error("User is not authenticated"));this.client.request("GlobalSignOut",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e){return e?a.onFailure(e):(t.clearCachedUser(),a.onSuccess("SUCCESS"))})},n.signOut=function(){this.signInUserSession=null,this.clearCachedUser()},n.sendMFASelectionAnswer=function(t,n){var i=this,e={};e.USERNAME=this.username,e.ANSWER=t;var a={ChallengeName:"SELECT_MFA_TYPE",ChallengeResponses:e,ClientId:this.pool.getClientId(),Session:this.Session};this.getUserContextData()&&(a.UserContextData=this.getUserContextData()),this.client.request("RespondToAuthChallenge",a,function(e,a){return e?n.onFailure(e):(i.Session=a.Session,"SMS_MFA"===t?n.mfaRequired(a.ChallengeName,a.ChallengeParameters):"SOFTWARE_TOKEN_MFA"===t?n.totpRequired(a.ChallengeName,a.ChallengeParameters):void 0)})},n.getUserContextData=function(){return this.pool.getUserContextData(this.username)},n.associateSoftwareToken=function(t){var n=this;null!=this.signInUserSession&&this.signInUserSession.isValid()?this.client.request("AssociateSoftwareToken",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken()},function(e,a){return e?t.onFailure(e):t.associateSecretCode(a.SecretCode)}):this.client.request("AssociateSoftwareToken",{Session:this.Session},function(e,a){return e?t.onFailure(e):(n.Session=a.Session,t.associateSecretCode(a.SecretCode))})},n.verifySoftwareToken=function(e,a,i){var _=this;null!=this.signInUserSession&&this.signInUserSession.isValid()?this.client.request("VerifySoftwareToken",{AccessToken:this.signInUserSession.getAccessToken().getJwtToken(),UserCode:e,FriendlyDeviceName:a},function(e,a){return e?i.onFailure(e):i.onSuccess(a)}):this.client.request("VerifySoftwareToken",{Session:this.Session,UserCode:e,FriendlyDeviceName:a},function(e,a){if(e)return i.onFailure(e);_.Session=a.Session;var t={};t.USERNAME=_.username;var n={ChallengeName:"MFA_SETUP",ClientId:_.pool.getClientId(),ChallengeResponses:t,Session:_.Session};_.getUserContextData()&&(n.UserContextData=_.getUserContextData()),_.client.request("RespondToAuthChallenge",n,function(e,a){return e?i.onFailure(e):(_.signInUserSession=_.getCognitoUserSession(a.AuthenticationResult),_.cacheTokens(),i.onSuccess(_.signInUserSession))})})},p);function p(e){if(null==e||null==e.Username||null==e.Pool)throw new Error("Username and pool information are required.");this.username=e.Username||"",this.pool=e.Pool,this.Session=null,this.client=e.Pool.client,this.signInUserSession=null,this.authenticationFlowType="USER_SRP_AUTH",this.storage=e.Storage||(new T.a).getStorage(),this.keyPrefix="CognitoIdentityServiceProvider."+this.pool.getClientId(),this.userDataKey=this.keyPrefix+"."+this.username+".userData"}},function(e,a,t){"use strict";t.d(a,"a",function(){return i});var n,i=((n=_.prototype).getIdToken=function(){return this.idToken},n.getRefreshToken=function(){return this.refreshToken},n.getAccessToken=function(){return this.accessToken},n.getClockDrift=function(){return this.clockDrift},n.calculateClockDrift=function(){return Math.floor(new Date/1e3)-Math.min(this.accessToken.getIssuedAt(),this.idToken.getIssuedAt())},n.isValid=function(){var e=Math.floor(new Date/1e3)-this.clockDrift;return e<this.accessToken.getExpiration()&&e<this.idToken.getExpiration()},_);function _(e){var a=void 0===e?{}:e,t=a.IdToken,n=a.RefreshToken,i=a.AccessToken,_=a.ClockDrift;if(null==i||null==t)throw new Error("Id token and Access Token must be present.");this.idToken=t,this.refreshToken=n,this.accessToken=i,this.clockDrift=void 0===_?this.calculateClockDrift():_}},function(e,a,t){"use strict";t.d(a,"a",function(){return n});var r=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],s=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],n=(i.prototype.getNowString=function(){var e=new Date,a=s[e.getUTCDay()],t=r[e.getUTCMonth()],n=e.getUTCDate(),i=e.getUTCHours();i<10&&(i="0"+i);var _=e.getUTCMinutes();_<10&&(_="0"+_);var o=e.getUTCSeconds();return o<10&&(o="0"+o),a+" "+t+" "+n+" "+i+":"+_+":"+o+" UTC "+e.getUTCFullYear()},i);function i(){}},function(e,a,t){"use strict";t.d(a,"a",function(){return i});var n,i=((n=_.prototype).getValue=function(){return this.Value},n.setValue=function(e){return this.Value=e,this},n.getName=function(){return this.Name},n.setName=function(e){return this.Name=e,this},n.toString=function(){return JSON.stringify(this)},n.toJSON=function(){return{Name:this.Name,Value:this.Value}},_);function _(e){var a=void 0===e?{}:e,t=a.Name,n=a.Value;this.Name=t||"",this.Value=n||""}},function(e,a,t){"use strict";t.d(a,"a",function(){return _});var n={},i=(r.setItem=function(e,a){return n[e]=a,n[e]},r.getItem=function(e){return Object.prototype.hasOwnProperty.call(n,e)?n[e]:void 0},r.removeItem=function(e){return delete n[e]},r.clear=function(){return n={}},r),_=(o.prototype.getStorage=function(){return this.storageWindow},o);function o(){try{this.storageWindow=window.localStorage,this.storageWindow.setItem("aws.cognito.test-ls",1),this.storageWindow.removeItem("aws.cognito.test-ls")}catch(e){this.storageWindow=i}}function r(){}},function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(s,l){return l=l||{},new Promise(function(e,a){var t=new XMLHttpRequest,n=[],i=[],_={},o=function(){return{ok:2==(t.status/100|0),statusText:t.statusText,status:t.status,url:t.responseURL,text:function(){return Promise.resolve(t.responseText)},json:function(){return Promise.resolve(JSON.parse(t.responseText))},blob:function(){return Promise.resolve(new Blob([t.response]))},clone:o,headers:{keys:function(){return n},entries:function(){return i},get:function(e){return _[e.toLowerCase()]},has:function(e){return e.toLowerCase()in _}}}};for(var r in t.open(l.method||"get",s,!0),t.onload=function(){t.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,function(e,a,t){n.push(a=a.toLowerCase()),i.push([a,t]),_[a]=_[a]?_[a]+","+t:t}),e(o())},t.onerror=a,t.withCredentials="include"==l.credentials,l.headers)t.setRequestHeader(r,l.headers[r]);t.send(l.body||null)})}},function(e,a,t){"use strict";function n(){}t.d(a,"a",function(){return i}),n.prototype.userAgent="aws-amplify/0.1.x js";var i=function(e){e&&(n.prototype.userAgent&&!n.prototype.userAgent.includes(e)&&(n.prototype.userAgent=n.prototype.userAgent.concat(" ",e)),n.prototype.userAgent&&""!==n.prototype.userAgent||(n.prototype.userAgent=e))};a.b=n},function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n=t(19);t.d(a,"AuthenticationDetails",function(){return n.a});var i=t(2);t.d(a,"AuthenticationHelper",function(){return i.a});var _=t(7);t.d(a,"CognitoAccessToken",function(){return _.a});var o=t(9);t.d(a,"CognitoIdToken",function(){return o.a});var r=t(10);t.d(a,"CognitoRefreshToken",function(){return r.a});var s=t(11);t.d(a,"CognitoUser",function(){return s.a});var l=t(14);t.d(a,"CognitoUserAttribute",function(){return l.a});var u=t(26);t.d(a,"CognitoUserPool",function(){return u.a});var g=t(12);t.d(a,"CognitoUserSession",function(){return g.a});var h=t(29);t.d(a,"CookieStorage",function(){return h.a});var c=t(13);t.d(a,"DateHelper",function(){return c.a});var d=t(17);t.d(a,"appendToCognitoUserAgent",function(){return d.a})},function(e,a,t){"use strict";t.d(a,"a",function(){return i});var n,i=((n=_.prototype).getUsername=function(){return this.username},n.getPassword=function(){return this.password},n.getValidationData=function(){return this.validationData},n.getAuthParameters=function(){return this.authParameters},n.getClientMetadata=function(){return this.clientMetadata},_);function _(e){var a=e||{},t=a.ValidationData,n=a.Username,i=a.Password,_=a.AuthParameters,o=a.ClientMetadata;this.validationData=t||{},this.authParameters=_||{},this.clientMetadata=o||{},this.username=n,this.password=i}},function(e,a){var t=function(){return this}();try{t=t||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(t=window)}e.exports=t},function(e,a,t){"use strict";function u(e){var a=e.length;if(0<a%4)throw new Error("Invalid string. Length must be a multiple of 4");var t=e.indexOf("=");return-1===t&&(t=a),[t,t===a?0:4-t%4]}function r(e,a,t){for(var n,i,_=[],o=a;o<t;o+=3)n=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),_.push(s[(i=n)>>18&63]+s[i>>12&63]+s[i>>6&63]+s[63&i]);return _.join("")}a.byteLength=function(e){var a=u(e),t=a[0],n=a[1];return 3*(t+n)/4-n},a.toByteArray=function(e){for(var a,t,n=u(e),i=n[0],_=n[1],o=new h(3*(i+(t=_))/4-t),r=0,s=0<_?i-4:i,l=0;l<s;l+=4)a=g[e.charCodeAt(l)]<<18|g[e.charCodeAt(l+1)]<<12|g[e.charCodeAt(l+2)]<<6|g[e.charCodeAt(l+3)],o[r++]=a>>16&255,o[r++]=a>>8&255,o[r++]=255&a;return 2===_&&(a=g[e.charCodeAt(l)]<<2|g[e.charCodeAt(l+1)]>>4,o[r++]=255&a),1===_&&(a=g[e.charCodeAt(l)]<<10|g[e.charCodeAt(l+1)]<<4|g[e.charCodeAt(l+2)]>>2,o[r++]=a>>8&255,o[r++]=255&a),o},a.fromByteArray=function(e){for(var a,t=e.length,n=t%3,i=[],_=0,o=t-n;_<o;_+=16383)i.push(r(e,_,o<_+16383?o:_+16383));return 1==n?(a=e[t-1],i.push(s[a>>2]+s[a<<4&63]+"==")):2==n&&(a=(e[t-2]<<8)+e[t-1],i.push(s[a>>10]+s[a>>4&63]+s[a<<2&63]+"=")),i.join("")};for(var s=[],g=[],h="undefined"!=typeof Uint8Array?Uint8Array:Array,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,_=n.length;i<_;++i)s[i]=n[i],g[n.charCodeAt(i)]=i;g["-".charCodeAt(0)]=62,g["_".charCodeAt(0)]=63},function(e,a){a.read=function(e,a,t,n,i){var _,o,r=8*i-n-1,s=(1<<r)-1,l=s>>1,u=-7,g=t?i-1:0,h=t?-1:1,c=e[a+g];for(g+=h,_=c&(1<<-u)-1,c>>=-u,u+=r;0<u;_=256*_+e[a+g],g+=h,u-=8);for(o=_&(1<<-u)-1,_>>=-u,u+=n;0<u;o=256*o+e[a+g],g+=h,u-=8);if(0===_)_=1-l;else{if(_===s)return o?NaN:1/0*(c?-1:1);o+=Math.pow(2,n),_-=l}return(c?-1:1)*o*Math.pow(2,_-n)},a.write=function(e,a,t,n,i,_){var o,r,s,l=8*_-i-1,u=(1<<l)-1,g=u>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,c=n?0:_-1,d=n?1:-1,S=a<0||0===a&&1/a<0?1:0;for(a=Math.abs(a),isNaN(a)||a===1/0?(r=isNaN(a)?1:0,o=u):(o=Math.floor(Math.log(a)/Math.LN2),a*(s=Math.pow(2,-o))<1&&(o--,s*=2),2<=(a+=1<=o+g?h/s:h*Math.pow(2,1-g))*s&&(o++,s/=2),u<=o+g?(r=0,o=u):1<=o+g?(r=(a*s-1)*Math.pow(2,i),o+=g):(r=a*Math.pow(2,g-1)*Math.pow(2,i),o=0));8<=i;e[t+c]=255&r,c+=d,r/=256,i-=8);for(o=o<<i|r,l+=i;0<l;e[t+c]=255&o,c+=d,o/=256,l-=8);e[t+c-d]|=128*S}},function(e,a){var t={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==t.call(e)}},function(e,a,t){var n;e.exports=(n=t(0),void function(){var e=n.lib.Base,l=n.enc.Utf8;n.algo.HMAC=e.extend({init:function(e,a){e=this._hasher=new e.init,"string"==typeof a&&(a=l.parse(a));var t=e.blockSize,n=4*t;a.sigBytes>n&&(a=e.finalize(a)),a.clamp();for(var i=this._oKey=a.clone(),_=this._iKey=a.clone(),o=i.words,r=_.words,s=0;s<t;s++)o[s]^=1549556828,r[s]^=909522486;i.sigBytes=_.sigBytes=n,this.reset()},reset:function(){var e=this._hasher;e.reset(),e.update(this._iKey)},update:function(e){return this._hasher.update(e),this},finalize:function(e){var a=this._hasher,t=a.finalize(e);return a.reset(),a.finalize(this._oKey.clone().concat(t))}})}())},function(e,a,t){var n;e.exports=(n=t(0),function(){var s=n.lib.WordArray;n.enc.Base64={stringify:function(e){var a=e.words,t=e.sigBytes,n=this._map;e.clamp();for(var i=[],_=0;_<t;_+=3)for(var o=(a[_>>>2]>>>24-_%4*8&255)<<16|(a[_+1>>>2]>>>24-(_+1)%4*8&255)<<8|a[_+2>>>2]>>>24-(_+2)%4*8&255,r=0;r<4&&_+.75*r<t;r++)i.push(n.charAt(o>>>6*(3-r)&63));var s=n.charAt(64);if(s)for(;i.length%4;)i.push(s);return i.join("")},parse:function(e){var a=e.length,t=this._map,n=this._reverseMap;if(!n){n=this._reverseMap=[];for(var i=0;i<t.length;i++)n[t.charCodeAt(i)]=i}var _,o=t.charAt(64);return!o||-1!==(_=e.indexOf(o))&&(a=_),function(e,a,t){for(var n,i,_=[],o=0,r=0;r<a;r++){r%4&&(n=t[e.charCodeAt(r-1)]<<r%4*2,i=t[e.charCodeAt(r)]>>>6-r%4*2,_[o>>>2]|=(n|i)<<24-o%4*8,o++)}return s.create(_,o)}(e,a,n)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}}(),n.enc.Base64)},function(e,a,t){"use strict";t.d(a,"a",function(){return i});var n,s=t(27),l=t(11),u=t(15),i=((n=_.prototype).getUserPoolId=function(){return this.userPoolId},n.getClientId=function(){return this.clientId},n.signUp=function(i,e,a,t,_,n){var o=this,r={ClientId:this.clientId,Username:i,Password:e,UserAttributes:a,ValidationData:t,ClientMetadata:n};this.getUserContextData(i)&&(r.UserContextData=this.getUserContextData(i)),this.client.request("SignUp",r,function(e,a){if(e)return _(e,null);var t={Username:i,Pool:o,Storage:o.storage},n={user:new l.a(t),userConfirmed:a.UserConfirmed,userSub:a.UserSub,codeDeliveryDetails:a.CodeDeliveryDetails};return _(null,n)})},n.getCurrentUser=function(){var e="CognitoIdentityServiceProvider."+this.clientId+".LastAuthUser",a=this.storage.getItem(e);if(a){var t={Username:a,Pool:this,Storage:this.storage};return new l.a(t)}return null},n.getUserContextData=function(e){if("undefined"!=typeof AmazonCognitoAdvancedSecurityData){var a=AmazonCognitoAdvancedSecurityData;if(this.advancedSecurityDataCollectionFlag){var t=a.getData(e,this.userPoolId,this.clientId);if(t)return{EncodedData:t}}return{}}},_);function _(e){var a=e||{},t=a.UserPoolId,n=a.ClientId,i=a.endpoint,_=a.fetchOptions,o=a.AdvancedSecurityDataCollectionFlag;if(!t||!n)throw new Error("Both UserPoolId and ClientId are required.");if(!/^[\w-]+_.+$/.test(t))throw new Error("Invalid UserPoolId format.");var r=t.split("_")[0];this.userPoolId=t,this.clientId=n,this.client=new s.a(r,i,_),this.advancedSecurityDataCollectionFlag=!1!==o,this.storage=e.Storage||(new u.a).getStorage()}},function(e,a,t){"use strict";function i(e){var n="function"==typeof Map?new Map:void 0;return(i=function(e){function a(){return _(e,arguments,r(this).constructor)}if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,a)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),o(a,e)})(e)}function _(e,a,t){return(_=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?Reflect.construct:function(e,a,t){var n=[null];n.push.apply(n,a);var i=new(Function.bind.apply(e,n));return t&&o(i,t.prototype),i}).apply(null,arguments)}function o(e,a){return(o=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e})(e,a)}function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}t.d(a,"a",function(){return d});var n,s,l,u,g=t(28),h=(t.n(g),t(17)),c=(s=i(Error),u=s,(l=m).prototype=Object.create(u.prototype),(l.prototype.constructor=l).__proto__=u,m),d=((n=S.prototype).promisifyRequest=function(e,a){var i=this;return new Promise(function(t,n){i.request(e,a,function(e,a){e?n(new c(e.message,e.code,e.name,e.statusCode)):t(a)})})},n.request=function(e,a,i){var _,t={"Content-Type":"application/x-amz-json-1.1","X-Amz-Target":"AWSCognitoIdentityProviderService."+e,"X-Amz-User-Agent":h.b.prototype.userAgent},n=Object.assign({},this.fetchOptions,{headers:t,method:"POST",mode:"cors",cache:"no-cache",body:JSON.stringify(a)});fetch(this.endpoint,n).then(function(e){return _=e},function(e){if(e instanceof TypeError)throw new Error("Network error");throw e}).then(function(e){return e.json().catch(function(){return{}})}).then(function(e){if(_.ok)return i(null,e);var a=(e.__type||e.code).split("#").pop(),t={code:a,name:a,message:e.message||e.Message||null};return i(t)}).catch(function(e){if(!(_&&_.headers&&_.headers.get("x-amzn-errortype"))){if(e instanceof Error&&"Network error"===e.message){var a={code:"NetworkError",name:e.name,message:e.message};return i(a)}return i(e)}try{var t=_.headers.get("x-amzn-errortype").split(":")[0],n={code:t,name:t,statusCode:_.status,message:_.status?_.status.toString():null};return i(n)}catch(a){return i(e)}})},S);function S(e,a,t){this.endpoint=a||"https://cognito-idp."+e+".amazonaws.com/";var n=(t||{}).credentials;this.fetchOptions=n?{credentials:n}:{}}function m(e,a,t,n){var i=s.call(this,e)||this;return i.code=a,i.name=t,i.statusCode=n,i}},function(e,a,t){e.exports=window.fetch||(window.fetch=t(16).default||t(16))},function(e,a,t){"use strict";t.d(a,"a",function(){return _});var n,i=t(30),_=(t.n(i),(n=o.prototype).setItem=function(e,a){var t={path:this.path,expires:this.expires,domain:this.domain,secure:this.secure};return this.sameSite&&(t.sameSite=this.sameSite),i.set(e,a,t),i.get(e)},n.getItem=function(e){return i.get(e)},n.removeItem=function(e){var a={path:this.path,expires:this.expires,domain:this.domain,secure:this.secure};return this.sameSite&&(a.sameSite=this.sameSite),i.remove(e,a)},n.clear=function(){for(var e=i.get(),a=0;a<e.length;++a)i.remove(e[a]);return{}},o);function o(e){if(!e.domain)throw new Error("The domain of cookieStorage can not be undefined.");if(this.domain=e.domain,e.path?this.path=e.path:this.path="/",Object.prototype.hasOwnProperty.call(e,"expires")?this.expires=e.expires:this.expires=365,Object.prototype.hasOwnProperty.call(e,"secure")?this.secure=e.secure:this.secure=!0,Object.prototype.hasOwnProperty.call(e,"sameSite")){if(!["strict","lax","none"].includes(e.sameSite))throw new Error('The sameSite value of cookieStorage must be "lax", "strict" or "none".');if("none"===e.sameSite&&!this.secure)throw new Error("sameSite = None requires the Secure attribute in latest browser versions.");this.sameSite=e.sameSite}else this.sameSite=null}},function(e,a,t){var n,i,_;void 0!==(i="function"==typeof(n=_=function(){function r(){for(var e=0,a={};e<arguments.length;e++){var t=arguments[e];for(var n in t)a[n]=t[n]}return a}function l(e){return e.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent)}return function e(s){function o(){}function t(e,a,t){if("undefined"!=typeof document){"number"==typeof(t=r({path:"/"},o.defaults,t)).expires&&(t.expires=new Date(+new Date+864e5*t.expires)),t.expires=t.expires?t.expires.toUTCString():"";try{var n=JSON.stringify(a);/^[\{\[]/.test(n)&&(a=n)}catch(e){}a=s.write?s.write(a,e):encodeURIComponent(String(a)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),e=encodeURIComponent(String(e)).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\(\)]/g,escape);var i="";for(var _ in t)t[_]&&(i+="; "+_,!0!==t[_]&&(i+="="+t[_].split(";")[0]));return document.cookie=e+"="+a+i}}function a(e,a){if("undefined"!=typeof document){for(var t={},n=document.cookie?document.cookie.split("; "):[],i=0;i<n.length;i++){var _=n[i].split("="),o=_.slice(1).join("=");a||'"'!==o.charAt(0)||(o=o.slice(1,-1));try{var r=l(_[0]),o=(s.read||s)(o,r)||l(o);if(a)try{o=JSON.parse(o)}catch(e){}if(t[r]=o,e===r)break}catch(e){}}return e?t[e]:t}}return o.set=t,o.get=function(e){return a(e,!1)},o.getJSON=function(e){return a(e,!0)},o.remove=function(e,a){t(e,"",r(a,{expires:-1}))},o.defaults={},o.withConverter=e,o}(function(){})})?n.call(a,t,a,e):n)&&(e.exports=i),e.exports=_()}],n.c=i,n.d=function(e,a,t){n.o(e,a)||Object.defineProperty(e,a,{configurable:!1,enumerable:!0,get:t})},n.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(a,"a",a),a},n.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},n.p="",n(n.s=18);function n(e){if(i[e])return i[e].exports;var a=i[e]={i:e,l:!1,exports:{}};return t[e].call(a.exports,a,a.exports,n),a.l=!0,a.exports}var t,i}),$(function(){$("[rel='tooltip']").tooltip()}),$(function(){$('[data-toggle="popover"]').popover()}),function(e,a){if("function"==typeof define&&define.amd)define([],a);else if("object"==typeof exports)try{module.exports=a(require())}catch(e){module.exports=a()}else e.gds=a()}(this,function(){"use strict";function e(){for(var r=document.getElementsByClassName("gds-cr"),e=0;e<r.length;e++)a(r[e]);jQuery.widget("custom.iconselectmenu",jQuery.ui.selectmenu,{_renderItem:function(e,a){var t=jQuery("<li>"),n=jQuery("<div>",{text:a.label});return a.disabled&&t.addClass("ui-state-disabled"),jQuery("<span>",{style:a.element.attr("data-style"),class:"ui-icon "+a.element.attr("data-class")}).appendTo(n),t.append(n).appendTo(e)}}),jQuery(".gds-countryflag").iconselectmenu().iconselectmenu("menuWidget").addClass("ui-menu-icons customicons"),jQuery(".gds-countryflag").iconselectmenu({change:function(e){for(var a,t=e.target,n=0;n<r.length;n++){var i=r[n];i===t&&(a=i)}var _=a.getAttribute("country-data-region-id"),o=document.getElementById(_);C(a,o)}})}var c="Please select a country.",s="Please select a region.",Yh=[],a=function(e){if("true"!==e.getAttribute("data-gds-loaded")){switch(e.length=0,e.getAttribute("data-language")){case"ar":c="رجاء قم بإختيار دوله";break;case"cs":c="Vyberte prosím zemi.";break;case"da":c="Vælg venligst et land.";break;case"de":c="Bitte wähle ein Land.";break;case"es":c="Por favor seleccione un país.";break;case"et":c="Palun valige riik.";break;case"fi":c="Valitse maa.";break;case"fr":c="S'il vous plaît sélectionner un pays.";break;case"ga":c="Roghnaigh tír.";break;case"it":c="Per favore seleziona una nazione.";break;case"ja":c="国を選択してください。";break;case"ko":c="국가를 선택하십시오";break;case"ms":c="Sila pilih salah satu negara.";break;case"nl":c="Selecteer alstublieft een land.";break;case"pt":c="Por favor, selecione um País: Brasil.";break;case"ru":c="Пожалуйста, выберите страну.";break;case"sv":c="Var god välj ett land.";break;case"tr":c="Lütfen bir ülke seçin.";break;case"vi":c="Vui lòng chọn một quốc gia.";break;case"zh-cn":c="请选择一个国家。";break;case"zh-tw":c="請選擇一個國家。";break;case"en":default:c="Please select a country."}var a=e.getAttribute("country-data-default-option"),t=a||c,n=e.getAttribute("country-data-default-value"),i=0;e.options[0]=new Option(t,""),d(e),S();for(var _=0;_<Yh.length;_++){var o=Yh[_][1],r=Yh[_][0];(e.options[e.length]=new Option(Yh[_][1],o)).setAttribute("data-class",r.toLowerCase()),null==n||n!==o&&n!==r||(i=_,i++)}e.selectedIndex=i;var s,l,u,g,h=e.getAttribute("country-data-region-id");h?((s=document.getElementById(h))?(m(s),e.onchange=function(){C(e,s)},null!==n&&0<e.selectedIndex&&(C(e,s),null!==(l=s.getAttribute("region-data-default-value"))&&(u=e.selectedIndex-1,g=Yh[u][3],M(s,g,l)))):console.error("Region field with ID "+h+" not found."),e.setAttribute("data-gds-loaded","true")):console.error("Missing data-region-id on country field.")}},d=function(e){for(var a=e.getAttribute("data-language"),t=new Gettext({domain:a}),n=t.gettext("Andorra_AD_C"),i=t.gettext("United Arab Emirates_AE_C"),_=t.gettext("Afghanistan_AF_C"),o=t.gettext("Antigua and Barbuda_AG_C"),r=t.gettext("Anguilla_AI_C"),s=t.gettext("Albania_AL_C"),l=t.gettext("Armenia_AM_C"),u=t.gettext("Angola_AO_C"),g=t.gettext("Antarctica_AQ_C"),h=t.gettext("Argentina_AR_C"),c=t.gettext("American Samoa_AS_C"),d=t.gettext("Austria_AT_C"),S=t.gettext("Australia_AU_C"),m=t.gettext("Aruba_AW_C"),C=t.gettext("Aland Islands_AX_C"),M=t.gettext("Azerbaijian_AZ_C"),A=t.gettext("Bosnia and Herzegovina_BA_C"),T=t.gettext("Barbados_BB_C"),f=t.gettext("Bangladesh_BD_C"),y=t.gettext("Belgium_BE_C"),p=t.gettext("Burkina Faso_BF_C"),v=t.gettext("Bulgaria_BG_C"),k=t.gettext("Bahrain_BH_C"),R=t.gettext("Burundi_BI_C"),b=t.gettext("Benin_BJ_C"),P=t.gettext("Saint Barthelemy_BL_C"),B=t.gettext("Bermuda_BM_C"),I=t.gettext("Brunei Darussalam_BN_C"),N=t.gettext("Bolivia, Plurinational State of_BO_C"),E=t.gettext("Bonaire, Sint Eustatius and Saba_BQ_C"),G=t.gettext("Brazil_BR_C"),x=t.gettext("Bahamas_BS_C"),K=t.gettext("Bhutan_BT_C"),U=t.gettext("Botswana_BW_C"),D=t.gettext("Belarus_BY_C"),L=t.gettext("Belize_BZ_C"),H=t.gettext("Canada_CA_C"),w=t.gettext("Cocos (Keeling) Islands_CC_C"),V=t.gettext("Congo, The Democratic Republic of The_CD_C"),O=t.gettext("Central African Republic_CF_C"),F=t.gettext("Congo_CG_C"),Z=t.gettext("Switzerland_CH_C"),j=t.gettext("Cote D'ivoire_CI_C"),z=t.gettext("Cook Islands_CK_C"),J=t.gettext("Chile_CL_C"),Y=t.gettext("Cameroon_CM_C"),W=t.gettext("China_CN_C"),q=t.gettext("Colombia_CO_C"),Q=t.gettext("Costa Rica_CR_C"),X=t.gettext("Cuba_CU_C"),$=t.gettext("Cabo Verde_CV_C"),ee=t.gettext("Curacao_CW_C"),ae=t.gettext("Christmas Island_CX_C"),te=t.gettext("Cyprus_CY_C"),ne=t.gettext("Czech Republic_CZ_C"),ie=t.gettext("Germany_DE_C"),_e=t.gettext("Djibouti_DJ_C"),oe=t.gettext("Denmark_DK_C"),re=t.gettext("Dominica_DM_C"),se=t.gettext("Dominican Republic_DO_C"),le=t.gettext("Algeria_DZ_C"),ue=t.gettext("Ecuador_EC_C"),ge=t.gettext("Estonia_EE_C"),he=t.gettext("Egypt_EG_C"),ce=t.gettext("Western Sahara_EH_C"),de=t.gettext("Eritrea_ER_C"),Se=t.gettext("Spain_ES_C"),me=t.gettext("Ethiopia_ET_C"),Ce=t.gettext("Finland_FI_C"),Me=t.gettext("Fiji_FJ_C"),Ae=t.gettext("Falkland Islands (Malvinas)_FK_C"),Te=t.gettext("Micronesia, Federated States of_FM_C"),fe=t.gettext("Faroe Islands_FO_C"),ye=t.gettext("France_FR_C"),pe=t.gettext("Gabon_GA_C"),ve=t.gettext("United Kingdom_GB_C"),ke=t.gettext("Grenada_GD_C"),Re=t.gettext("Georgia_GE_C"),be=t.gettext("French Guiana_GF_C"),Pe=t.gettext("Guernsey_GG_C"),Be=t.gettext("Ghana_GH_C"),Ie=t.gettext("Gibraltar_GI_C"),Ne=t.gettext("Greenland_GL_C"),Ee=t.gettext("Gambia_GM_C"),Ge=t.gettext("Guinea_GN_C"),xe=t.gettext("Guadeloupe_GP_C"),Ke=t.gettext("Equatorial Guinea_GQ_C"),Ue=t.gettext("Greece_GR_C"),De=t.gettext("South Georgia and The South Sandwich Islands_GS_C"),Le=t.gettext("Guatemala_GT_C"),He=t.gettext("Guam_GU_C"),we=t.gettext("Guinea-Bissau_GW_C"),Ve=t.gettext("Guyana_GY_C"),Oe=t.gettext("Hong Kong_HK_C"),Fe=t.gettext("Honduras_HN_C"),Ze=t.gettext("Croatia_HR_C"),je=t.gettext("Haiti_HT_C"),ze=t.gettext("Hungary_HU_C"),Je=t.gettext("Indonesia_ID_C"),Ye=t.gettext("Ireland_IE_C"),We=t.gettext("Israel_IL_C"),qe=t.gettext("Isle of Man_IM_C"),Qe=t.gettext("India_IN_C"),Xe=t.gettext("British Indian Ocean Territory_IO_C"),$e=t.gettext("Iraq_IQ_C"),ea=t.gettext("Iran, Islamic Republic of_IR_C"),aa=t.gettext("Iceland_IS_C"),ta=t.gettext("Italy_IT_C"),na=t.gettext("Jersey_JE_C"),ia=t.gettext("Jamaica_JM_C"),_a=t.gettext("Jordan_JO_C"),oa=t.gettext("Japan_JP_C"),ra=t.gettext("Kenya_KE_C"),sa=t.gettext("Kyrgyzstan_KG_C"),la=t.gettext("Cambodia_KH_C"),ua=t.gettext("Kiribati_KI_C"),ga=t.gettext("Comoros_KM_C"),ha=t.gettext("Saint Kitts and Nevis_KN_C"),ca=t.gettext("Korea, Democratic People's Republic of_KP_C"),da=t.gettext("Korea, Republic of_KR_C"),Sa=t.gettext("Kuwait_KW_C"),ma=t.gettext("Cayman Islands_KY_C"),Ca=t.gettext("Kazakhstan_KZ_C"),Ma=t.gettext("Lao People's Democratic Republic_LA_C"),Aa=t.gettext("Lebanon_LB_C"),Ta=t.gettext("Saint Lucia_LC_C"),fa=t.gettext("Liechtenstein_LI_C"),ya=t.gettext("Sri Lanka_LK_C"),pa=t.gettext("Liberia_LR_C"),va=t.gettext("Lesotho_LS_C"),ka=t.gettext("Lithuania_LT_C"),Ra=t.gettext("Luxembourg_LU_C"),ba=t.gettext("Latvia_LV_C"),Pa=t.gettext("Libya_LY_C"),Ba=t.gettext("Morocco_MA_C"),Ia=t.gettext("Monaco_MC_C"),Na=t.gettext("Moldova, Republic of_MD_C"),Ea=t.gettext("Montenegro_ME_C"),Ga=t.gettext("Saint Martin (French Part)_MF_C"),xa=t.gettext("Madagascar_MG_C"),Ka=t.gettext("Marshall Islands_MH_C"),Ua=t.gettext("Macedonia, The Former Yugoslav Republic of_MK_C"),Da=t.gettext("Mali_ML_C"),La=t.gettext("Myanmar_MM_C"),Ha=t.gettext("Mongolia_MN_C"),wa=t.gettext("Macao_MO_C"),Va=t.gettext("Northern Mariana Islands_MP_C"),Oa=t.gettext("Martinique_MQ_C"),Fa=t.gettext("Mauritania_MR_C"),Za=t.gettext("Montserrat_MS_C"),ja=t.gettext("Malta_MT_C"),za=t.gettext("Mauritius_MU_C"),Ja=t.gettext("Maldives_MV_C"),Ya=t.gettext("Malawi_MW_C"),Wa=t.gettext("Mexico_MX_C"),qa=t.gettext("Malaysia_MY_C"),Qa=t.gettext("Mozambique_MZ_C"),Xa=t.gettext("Namibia_NA_C"),$a=t.gettext("New Caledonia_NC_C"),et=t.gettext("Niger_NE_C"),at=t.gettext("Norfolk Island_NF_C"),tt=t.gettext("Nigeria_NG_C"),nt=t.gettext("Nicaragua_NI_C"),it=t.gettext("Netherlands_NL_C"),_t=t.gettext("Norway_NO_C"),ot=t.gettext("Nepal_NP_C"),rt=t.gettext("Nauru_NR_C"),st=t.gettext("Niue_NU_C"),lt=t.gettext("New Zealand_NZ_C"),ut=t.gettext("Oman_OM_C"),gt=t.gettext("Panama_PA_C"),ht=t.gettext("Peru_PE_C"),ct=t.gettext("French Polynesia_PF_C"),dt=t.gettext("Papua New Guinea_PG_C"),St=t.gettext("Philippines_PH_C"),mt=t.gettext("Pakistan_PK_C"),Ct=t.gettext("Poland_PL_C"),Mt=t.gettext("Saint Pierre and Miquelon_PM_C"),At=t.gettext("Pitcairn_PN_C"),Tt=t.gettext("Puerto Rico_PR_C"),ft=t.gettext("Palestine, State of_PS_C"),yt=t.gettext("Portugal_PT_C"),pt=t.gettext("Palau_PW_C"),vt=t.gettext("Paraguay_PY_C"),kt=t.gettext("Qatar_QA_C"),Rt=t.gettext("Reunion_RE_C"),bt=t.gettext("Romania_RO_C"),Pt=t.gettext("Serbia_RS_C"),Bt=t.gettext("Russian Federation_RU_C"),It=t.gettext("Rwanda_RW_C"),Nt=t.gettext("Saudi Arabia_SA_C"),Et=t.gettext("Solomon Islands_SB_C"),Gt=t.gettext("Seychelles_SC_C"),xt=t.gettext("Sudan_SD_C"),Kt=t.gettext("Sweden_SE_C"),Ut=t.gettext("Singapore_SG_C"),Dt=t.gettext("Saint Helena, Ascension and Tristan Da Cunha_SH_C"),Lt=t.gettext("Slovenia_SI_C"),Ht=t.gettext("Svalbard and Jan Mayen_SJ_C"),wt=t.gettext("Slovakia_SK_C"),Vt=t.gettext("Sierra Leone_SL_C"),Ot=t.gettext("San Marino_SM_C"),Ft=t.gettext("Senegal_SN_C"),Zt=t.gettext("Somalia_SO_C"),jt=t.gettext("Suriname_SR_C"),zt=t.gettext("South Sudan_SS_C"),Jt=t.gettext("Sao Tome and Principe_ST_C"),Yt=t.gettext("El Salvador_SV_C"),Wt=t.gettext("Sint Maarten (Dutch Part)_SX_C"),qt=t.gettext("Syrian Arab Republic_SY_C"),Qt=t.gettext("Swaziland_SZ_C"),Xt=t.gettext("Turks and Caicos Islands_TC_C"),$t=t.gettext("Chad_TD_C"),en=t.gettext("French Southern Territories_TF_C"),an=t.gettext("Togo_TG_C"),tn=t.gettext("Thailand_TH_C"),nn=t.gettext("Tajikistan_TJ_C"),_n=t.gettext("Tokelau_TK_C"),on=t.gettext("Timor-Leste_TL_C"),rn=t.gettext("Turkmenistan_TM_C"),sn=t.gettext("Tunisia_TN_C"),ln=t.gettext("Tonga_TO_C"),un=t.gettext("Turkey_TR_C"),gn=t.gettext("Trinidad and Tobago_TT_C"),hn=t.gettext("Tuvalu_TV_C"),cn=t.gettext("Taiwan, Province of China_TW_C"),dn=t.gettext("Tanzania, United Republic of_TZ_C"),Sn=t.gettext("Ukraine_UA_C"),mn=t.gettext("Uganda_UG_C"),Cn=t.gettext("United States Minor Outlying Islands_UM_C"),Mn=t.gettext("United States_US_C"),An=t.gettext("Uruguay_UY_C"),Tn=t.gettext("Uzbekistan_UZ_C"),fn=t.gettext("Holy See_VA_C"),yn=t.gettext("Saint Vincent and The Grenadines_VC_C"),pn=t.gettext("Venezuela, Bolivarian Republic of_VE_C"),vn=t.gettext("Virgin Islands, British_VG_C"),kn=t.gettext("Virgin Islands, U.S._VI_C"),Rn=t.gettext("Viet Nam_VN_C"),bn=t.gettext("Vanuatu_VU_C"),Pn=t.gettext("Wallis and Futuna_WF_C"),Bn=t.gettext("Samoa_WS_C"),In=t.gettext("Yemen_YE_C"),Nn=t.gettext("Mayotte_YT_C"),En=t.gettext("South Africa_ZA_C"),Gn=t.gettext("Zambia_ZM_C"),xn=t.gettext("Zimbabwe_ZW_C"),Kn=["Andorra la Vella_AD","Canillo_AD","Encamp_AD","Escaldes-Engordany_AD","La Massana_AD","Ordino_AD","Sant Julia de Loria_AD"],Un=["'Ajman_AE","Abu Zaby_AE","Al Fujayrah_AE","Ash Shariqah_AE","Dubayy_AE","Ra's al Khaymah_AE","Umm al Qaywayn_AE"],Dn=["Badakhshan_AF","Badghis_AF","Baghlan_AF","Balkh_AF","Bamyan_AF","Daykundi_AF","Farah_AF","Faryab_AF","Ghazni_AF","Ghor_AF","Helmand_AF","Herat_AF","Jowzjan_AF","Kabul_AF","Kandahar_AF","Kapisa_AF","Khost_AF","Kunar_AF","Kunduz_AF","Laghman_AF","Logar_AF","Nangarhar_AF","Nimroz_AF","Nuristan_AF","Paktika_AF","Paktiya_AF","Panjshayr_AF","Parwan_AF","Samangan_AF","Sar-e Pul_AF","Takhar_AF","Uruzgan_AF","Wardak_AF","Zabul_AF"],Ln=["Barbuda_AG","Redonda_AG","Saint George_AG","Saint John_AG","Saint Mary_AG","Saint Paul_AG","Saint Peter_AG","Saint Philip_AG"],Hn=["Anguilla_AI"],wn=["Berat_AL","Diber_AL","Durres_AL","Elbasan_AL","Fier_AL","Gjirokaster_AL","Korce_AL","Kukes_AL","Lezhe_AL","Shkoder_AL","Tirane_AL","Vlore_AL"],Vn=["Aragacotn_AM","Ararat_AM","Armavir_AM","Erevan_AM","Gegark'unik'_AM","Kotayk'_AM","Lori_AM","Sirak_AM","Syunik'_AM","Tavus_AM","Vayoc Jor_AM"],On=["Bengo_AO","Benguela_AO","Bie_AO","Cabinda_AO","Cunene_AO","Huambo_AO","Huila_AO","Kuando Kubango_AO","Kwanza Norte_AO","Kwanza Sul_AO","Luanda_AO","Lunda Norte_AO","Lunda Sul_AO","Malange_AO","Moxico_AO","Namibe_AO","Uige_AO","Zaire_AO"],Fn=["Antarctica_AQ"],Zn=["Buenos Aires_AR","Catamarca_AR","Chaco_AR","Chubut_AR","Ciudad Autonoma de Buenos Aires_AR","Cordoba_AR","Corrientes_AR","Entre Rios_AR","Formosa_AR","Jujuy_AR","La Pampa_AR","La Rioja_AR","Mendoza_AR","Misiones_AR","Neuquen_AR","Rio Negro_AR","Salta_AR","San Juan_AR","San Luis_AR","Santa Cruz_AR","Santa Fe_AR","Santiago del Estero_AR","Tierra del Fuego_AR","Tucuman_AR"],jn=["Eastern District_AS","Western District_AS"],zn=["Burgenland_AT","Karnten_AT","Niederosterreich_AT","Oberosterreich_AT","Salzburg_AT","Steiermark_AT","Tirol_AT","Vorarlberg_AT","Wien_AT"],Jn=["Australian Capital Territory_AU","New South Wales_AU","Northern Territory_AU","Queensland_AU","South Australia_AU","Tasmania_AU","Victoria_AU","Western Australia_AU"],Yn=["Aruba_AW"],Wn=["Eckeroe_AX","Finstroem_AX","Hammarland_AX","Jomala_AX","Lemland_AX","Mariehamn_AX","Saltvik_AX","Sund_AX"],qn=["Abseron_AZ","Agcabadi_AZ","Agdam_AZ","Agdas_AZ","Agstafa_AZ","Agsu_AZ","Astara_AZ","Baki_AZ","Balakan_AZ","Barda_AZ","Beylaqan_AZ","Bilasuvar_AZ","Cabrayil_AZ","Calilabad_AZ","Daskasan_AZ","Fuzuli_AZ","Gadabay_AZ","Ganca_AZ","Goranboy_AZ","Goycay_AZ","Goygol_AZ","Haciqabul_AZ","Imisli_AZ","Ismayilli_AZ","Kalbacar_AZ","Kurdamir_AZ","Lacin_AZ","Lankaran_AZ","Lerik_AZ","Masalli_AZ","Mingacevir_AZ","Naftalan_AZ","Naxcivan_AZ","Neftcala_AZ","Oguz_AZ","Qabala_AZ","Qax_AZ","Qazax_AZ","Qobustan_AZ","Quba_AZ","Qubadli_AZ","Qusar_AZ","Saatli_AZ","Sabirabad_AZ","Saki_AZ","Salyan_AZ","Samaxi_AZ","Samkir_AZ","Samux_AZ","Sirvan_AZ","Siyazan_AZ","Sumqayit_AZ","Susa_AZ","Tartar_AZ","Tovuz_AZ","Ucar_AZ","Xacmaz_AZ","Xankandi_AZ","Xizi_AZ","Xocali_AZ","Xocavand_AZ","Yardimli_AZ","Yevlax_AZ","Zangilan_AZ","Zaqatala_AZ","Zardab_AZ"],Qn=["Brcko distrikt_BA","Federacija Bosne i Hercegovine_BA","Republika Srpska_BA"],Xn=["Christ Church_BB","Saint Andrew_BB","Saint George_BB","Saint James_BB","Saint John_BB","Saint Joseph_BB","Saint Lucy_BB","Saint Michael_BB","Saint Peter_BB","Saint Philip_BB","Saint Thomas_BB"],$n=["Barisal_BD","Chittagong_BD","Dhaka_BD","Khulna_BD","Rajshahi_BD","Rangpur_BD","Sylhet_BD"],ei=["Antwerpen_BE","Brabant wallon_BE","Brussels Hoofdstedelijk Gewest_BE","Hainaut_BE","Liege_BE","Limburg_BE","Luxembourg_BE","Namur_BE","Oost-Vlaanderen_BE","Vlaams-Brabant_BE","West-Vlaanderen_BE"],ai=["Bale_BF","Bam_BF","Banwa_BF","Bazega_BF","Bougouriba_BF","Boulgou_BF","Boulkiemde_BF","Comoe_BF","Ganzourgou_BF","Gnagna_BF","Gourma_BF","Houet_BF","Ioba_BF","Kadiogo_BF","Kenedougou_BF","Komondjari_BF","Kompienga_BF","Kossi_BF","Koulpelogo_BF","Kouritenga_BF","Kourweogo_BF","Leraba_BF","Loroum_BF","Mouhoun_BF","Nahouri_BF","Namentenga_BF","Nayala_BF","Noumbiel_BF","Oubritenga_BF","Oudalan_BF","Passore_BF","Poni_BF","Sanguie_BF","Sanmatenga_BF","Seno_BF","Sissili_BF","Soum_BF","Sourou_BF","Tapoa_BF","Tuy_BF","Yagha_BF","Yatenga_BF","Ziro_BF","Zondoma_BF","Zoundweogo_BF"],ti=["Blagoevgrad_BG","Burgas_BG","Dobrich_BG","Gabrovo_BG","Haskovo_BG","Kardzhali_BG","Kyustendil_BG","Lovech_BG","Montana_BG","Pazardzhik_BG","Pernik_BG","Pleven_BG","Plovdiv_BG","Razgrad_BG","Ruse_BG","Shumen_BG","Silistra_BG","Sliven_BG","Smolyan_BG","Sofia_BG","Sofia (stolitsa)_BG","Stara Zagora_BG","Targovishte_BG","Varna_BG","Veliko Tarnovo_BG","Vidin_BG","Vratsa_BG","Yambol_BG"],ni=["Al 'Asimah_BH","Al Janubiyah_BH","Al Muharraq_BH","Ash Shamaliyah_BH"],ii=["Bubanza_BI","Bujumbura Mairie_BI","Bururi_BI","Cankuzo_BI","Cibitoke_BI","Gitega_BI","Karuzi_BI","Kayanza_BI","Kirundo_BI","Makamba_BI","Muramvya_BI","Muyinga_BI","Mwaro_BI","Ngozi_BI","Rutana_BI","Ruyigi_BI"],_i=["Alibori_BJ","Atacora_BJ","Atlantique_BJ","Borgou_BJ","Collines_BJ","Couffo_BJ","Donga_BJ","Littoral_BJ","Mono_BJ","Oueme_BJ","Plateau_BJ","Zou_BJ"],oi=["Saint Barthelemy_BL"],ri=["Hamilton_BM","Saint George_BM"],si=["Belait_BN","Brunei-Muara_BN","Temburong_BN","Tutong_BN"],li=["Chuquisaca_BO","Cochabamba_BO","El Beni_BO","La Paz_BO","Oruro_BO","Pando_BO","Potosi_BO","Santa Cruz_BO","Tarija_BO"],ui=["Bonaire_BQ","Saba_BQ","Sint Eustatius_BQ"],gi=["Acre_BR","Alagoas_BR","Amapa_BR","Amazonas_BR","Bahia_BR","Ceara_BR","Distrito Federal_BR","Espirito Santo_BR","Goias_BR","Maranhao_BR","Mato Grosso_BR","Mato Grosso do Sul_BR","Minas Gerais_BR","Para_BR","Paraiba_BR","Parana_BR","Pernambuco_BR","Piaui_BR","Rio de Janeiro_BR","Rio Grande do Norte_BR","Rio Grande do Sul_BR","Rondonia_BR","Roraima_BR","Santa Catarina_BR","Sao Paulo_BR","Sergipe_BR","Tocantins_BR"],hi=["Central Andros_BS","City of Freeport_BS","East Grand Bahama_BS","Harbour Island_BS","Hope Town_BS","Long Island_BS","New Providence_BS","South Eleuthera_BS"],ci=["Bumthang_BT","Chhukha_BT","Dagana_BT","Gasa_BT","Haa_BT","Lhuentse_BT","Monggar_BT","Paro_BT","Pemagatshel_BT","Punakha_BT","Samdrup Jongkhar_BT","Samtse_BT","Thimphu_BT","Trashi Yangtse_BT","Trashigang_BT","Trongsa_BT","Tsirang_BT","Wangdue Phodrang_BT","Zhemgang_BT"],di=["Central_BW","Ghanzi_BW","Kgalagadi_BW","Kgatleng_BW","Kweneng_BW","North East_BW","North West_BW","South East_BW","Southern_BW"],Si=["Brestskaya voblasts'_BY","Homyel'skaya voblasts'_BY","Horad Minsk_BY","Hrodzenskaya voblasts'_BY","Mahilyowskaya voblasts'_BY","Minskaya voblasts'_BY","Vitsyebskaya voblasts'_BY"],mi=["Belize_BZ","Cayo_BZ","Corozal_BZ","Orange Walk_BZ","Stann Creek_BZ","Toledo_BZ"],Ci=["Alberta_CA","British Columbia_CA","Manitoba_CA","New Brunswick_CA","Newfoundland and Labrador_CA","Northwest Territories_CA","Nova Scotia_CA","Nunavut_CA","Ontario_CA","Prince Edward Island_CA","Quebec_CA","Saskatchewan_CA","Yukon_CA"],Mi=["Cocos (Keeling) Islands_CC"],Ai=["Bas-Uele_CD","Equateur_CD","Haut-Katanga_CD","Haut-Lomami_CD","Haut-Uele_CD","Ituri_CD","Kasai_CD","Kasai Central_CD","Kasai Oriental_CD","Kinshasa_CD","Kongo Central_CD","Kwango_CD","Kwilu_CD","Lomami_CD","Lualaba_CD","Mai-Ndombe_CD","Maniema_CD","Mongala_CD","Nord-Kivu_CD","Nord-Ubangi_CD","Sankuru_CD","Sud-Kivu_CD","Sud-Ubangi_CD","Tanganyika_CD","Tshopo_CD","Tshuapa_CD"],Ti=["Bamingui-Bangoran_CF","Bangui_CF","Basse-Kotto_CF","Gribingui_CF","Haut-Mbomou_CF","Haute-Kotto_CF","Kemo-Gribingui_CF","Lobaye_CF","Mambere-Kadei_CF","Mbomou_CF","Nana-Mambere_CF","Ombella-Mpoko_CF","Ouaka_CF","Ouham_CF","Ouham-Pende_CF","Sangha_CF","Vakaga_CF"],fi=["Bouenza_CG","Brazzaville_CG","Cuvette_CG","Cuvette-Ouest_CG","Lekoumou_CG","Likouala_CG","Niari_CG","Plateaux_CG","Pointe-Noire_CG","Pool_CG","Sangha_CG"],yi=["Aargau_CH","Appenzell Ausserrhoden_CH","Appenzell Innerrhoden_CH","Basel-Landschaft_CH","Basel-Stadt_CH","Bern_CH","Fribourg_CH","Geneve_CH","Glarus_CH","Graubunden_CH","Jura_CH","Luzern_CH","Neuchatel_CH","Nidwalden_CH","Obwalden_CH","Sankt Gallen_CH","Schaffhausen_CH","Schwyz_CH","Solothurn_CH","Thurgau_CH","Ticino_CH","Uri_CH","Valais_CH","Vaud_CH","Zug_CH","Zurich_CH"],pi=["Abidjan_CI","Bas-Sassandra_CI","Comoe_CI","Denguele_CI","Goh-Djiboua_CI","Lacs_CI","Lagunes_CI","Montagnes_CI","Sassandra-Marahoue_CI","Savanes_CI","Vallee du Bandama_CI","Woroba_CI","Yamoussoukro_CI","Zanzan_CI"],vi=["Cook Islands_CK"],ki=["Aisen del General Carlos Ibanez del Campo_CL","Antofagasta_CL","Arica y Parinacota_CL","Atacama_CL","Biobio_CL","Coquimbo_CL","La Araucania_CL","Libertador General Bernardo O'Higgins_CL","Los Lagos_CL","Los Rios_CL","Magallanes_CL","Maule_CL","Region Metropolitana de Santiago_CL","Tarapaca_CL","Valparaiso_CL"],Ri=["Adamaoua_CM","Centre_CM","Est_CM","Extreme-Nord_CM","Littoral_CM","Nord_CM","Nord-Ouest_CM","Ouest_CM","Sud_CM","Sud-Ouest_CM"],bi=["Anhui_CN","Beijing_CN","Chongqing_CN","Fujian_CN","Gansu_CN","Guangdong_CN","Guangxi_CN","Guizhou_CN","Hainan_CN","Hebei_CN","Heilongjiang_CN","Henan_CN","Hubei_CN","Hunan_CN","Jiangsu_CN","Jiangxi_CN","Jilin_CN","Liaoning_CN","Nei Mongol_CN","Ningxia_CN","Qinghai_CN","Shaanxi_CN","Shandong_CN","Shanghai_CN","Shanxi_CN","Sichuan_CN","Tianjin_CN","Xinjiang_CN","Xizang_CN","Yunnan_CN","Zhejiang_CN"],Pi=["Amazonas_CO","Antioquia_CO","Arauca_CO","Atlantico_CO","Bolivar_CO","Boyaca_CO","Caldas_CO","Caqueta_CO","Casanare_CO","Cauca_CO","Cesar_CO","Choco_CO","Cordoba_CO","Cundinamarca_CO","Distrito Capital de Bogota_CO","Guainia_CO","Guaviare_CO","Huila_CO","La Guajira_CO","Magdalena_CO","Meta_CO","Narino_CO","Norte de Santander_CO","Putumayo_CO","Quindio_CO","Risaralda_CO","San Andres, Providencia y Santa Catalina_CO","Santander_CO","Sucre_CO","Tolima_CO","Valle del Cauca_CO","Vaupes_CO","Vichada_CO"],Bi=["Alajuela_CR","Cartago_CR","Guanacaste_CR","Heredia_CR","Limon_CR","Puntarenas_CR","San Jose_CR"],Ii=["Artemisa_CU","Camaguey_CU","Ciego de Avila_CU","Cienfuegos_CU","Granma_CU","Guantanamo_CU","Holguin_CU","Isla de la Juventud_CU","La Habana_CU","Las Tunas_CU","Matanzas_CU","Mayabeque_CU","Pinar del Rio_CU","Sancti Spiritus_CU","Santiago de Cuba_CU","Villa Clara_CU"],Ni=["Boa Vista_CV","Brava_CV","Maio_CV","Mosteiros_CV","Paul_CV","Porto Novo_CV","Praia_CV","Ribeira Brava_CV","Ribeira Grande_CV","Ribeira Grande de Santiago_CV","Sal_CV","Santa Catarina_CV","Santa Catarina do Fogo_CV","Santa Cruz_CV","Sao Domingos_CV","Sao Filipe_CV","Sao Lourenco dos Orgaos_CV","Sao Miguel_CV","Sao Salvador do Mundo_CV","Sao Vicente_CV","Tarrafal_CV","Tarrafal de Sao Nicolau_CV"],Ei=["Curacao_CW"],Gi=["Christmas Island_CX"],xi=["Ammochostos_CY","Keryneia_CY","Larnaka_CY","Lefkosia_CY","Lemesos_CY","Pafos_CY"],Ki=["Jihocesky kraj_CZ","Jihomoravsky kraj_CZ","Karlovarsky kraj_CZ","Kraj Vysocina_CZ","Kralovehradecky kraj_CZ","Liberecky kraj_CZ","Moravskoslezsky kraj_CZ","Olomoucky kraj_CZ","Pardubicky kraj_CZ","Plzensky kraj_CZ","Praha, Hlavni mesto_CZ","Stredocesky kraj_CZ","Ustecky kraj_CZ","Zlinsky kraj_CZ"],Ui=["Baden-Wurttemberg_DE","Bayern_DE","Berlin_DE","Brandenburg_DE","Bremen_DE","Hamburg_DE","Hessen_DE","Mecklenburg-Vorpommern_DE","Niedersachsen_DE","Nordrhein-Westfalen_DE","Rheinland-Pfalz_DE","Saarland_DE","Sachsen_DE","Sachsen-Anhalt_DE","Schleswig-Holstein_DE","Thuringen_DE"],Di=["Ali Sabieh_DJ","Arta_DJ","Dikhil_DJ","Djibouti_DJ","Obock_DJ","Tadjourah_DJ"],Li=["Hovedstaden_DK","Midtjylland_DK","Nordjylland_DK","Sjaelland_DK","Syddanmark_DK"],Hi=["Saint Andrew_DM","Saint David_DM","Saint George_DM","Saint John_DM","Saint Joseph_DM","Saint Luke_DM","Saint Mark_DM","Saint Patrick_DM","Saint Paul_DM","Saint Peter_DM"],wi=["Azua_DO","Baoruco_DO","Barahona_DO","Dajabon_DO","Distrito Nacional (Santo Domingo)_DO","Duarte_DO","El Seibo_DO","Elias Pina_DO","Espaillat_DO","Hato Mayor_DO","Hermanas Mirabal_DO","Independencia_DO","La Altagracia_DO","La Romana_DO","La Vega_DO","Maria Trinidad Sanchez_DO","Monsenor Nouel_DO","Monte Cristi_DO","Monte Plata_DO","Pedernales_DO","Peravia_DO","Puerto Plata_DO","Samana_DO","San Cristobal_DO","San Jose de Ocoa_DO","San Juan_DO","San Pedro de Macoris_DO","Sanchez Ramirez_DO","Santiago_DO","Santiago Rodriguez_DO","Valverde_DO"],Vi=["Adrar_DZ","Ain Defla_DZ","Ain Temouchent_DZ","Alger_DZ","Annaba_DZ","Batna_DZ","Bechar_DZ","Bejaia_DZ","Biskra_DZ","Blida_DZ","Bordj Bou Arreridj_DZ","Bouira_DZ","Boumerdes_DZ","Chlef_DZ","Constantine_DZ","Djelfa_DZ","El Bayadh_DZ","El Oued_DZ","El Tarf_DZ","Ghardaia_DZ","Guelma_DZ","Illizi_DZ","Jijel_DZ","Khenchela_DZ","Laghouat_DZ","M'sila_DZ","Mascara_DZ","Medea_DZ","Mila_DZ","Mostaganem_DZ","Naama_DZ","Oran_DZ","Ouargla_DZ","Oum el Bouaghi_DZ","Relizane_DZ","Saida_DZ","Setif_DZ","Sidi Bel Abbes_DZ","Skikda_DZ","Souk Ahras_DZ","Tamanrasset_DZ","Tebessa_DZ","Tiaret_DZ","Tindouf_DZ","Tipaza_DZ","Tissemsilt_DZ","Tizi Ouzou_DZ","Tlemcen_DZ"],Oi=["Azuay_EC","Bolivar_EC","Canar_EC","Carchi_EC","Chimborazo_EC","Cotopaxi_EC","El Oro_EC","Esmeraldas_EC","Galapagos_EC","Guayas_EC","Imbabura_EC","Loja_EC","Los Rios_EC","Manabi_EC","Morona Santiago_EC","Napo_EC","Orellana_EC","Pastaza_EC","Pichincha_EC","Santa Elena_EC","Santo Domingo de los Tsachilas_EC","Sucumbios_EC","Tungurahua_EC","Zamora Chinchipe_EC"],Fi=["Harjumaa_EE","Hiiumaa_EE","Ida-Virumaa_EE","Jarvamaa_EE","Jogevamaa_EE","Laane-Virumaa_EE","Laanemaa_EE","Parnumaa_EE","Polvamaa_EE","Raplamaa_EE","Saaremaa_EE","Tartumaa_EE","Valgamaa_EE","Viljandimaa_EE","Vorumaa_EE"],Zi=["Ad Daqahliyah_EG","Al Bahr al Ahmar_EG","Al Buhayrah_EG","Al Fayyum_EG","Al Gharbiyah_EG","Al Iskandariyah_EG","Al Isma'iliyah_EG","Al Jizah_EG","Al Minufiyah_EG","Al Minya_EG","Al Qahirah_EG","Al Qalyubiyah_EG","Al Uqsur_EG","Al Wadi al Jadid_EG","As Suways_EG","Ash Sharqiyah_EG","Aswan_EG","Asyut_EG","Bani Suwayf_EG","Bur Sa'id_EG","Dumyat_EG","Janub Sina'_EG","Kafr ash Shaykh_EG","Matruh_EG","Qina_EG","Shamal Sina'_EG","Suhaj_EG"],ji=["Western Sahara_EH"],zi=["Al Awsat_ER","Al Janubi_ER","Ansaba_ER","Janubi al Bahri al Ahmar_ER","Qash-Barkah_ER","Shimali al Bahri al Ahmar_ER"],Ji=["Andalucia_ES","Aragon_ES","Asturias, Principado de_ES","Canarias_ES","Cantabria_ES","Castilla y Leon_ES","Castilla-La Mancha_ES","Catalunya_ES","Ceuta_ES","Extremadura_ES","Galicia_ES","Illes Balears_ES","La Rioja_ES","Madrid, Comunidad de_ES","Melilla_ES","Murcia, Region de_ES","Navarra, Comunidad Foral de_ES","Pais Vasco_ES","Valenciana, Comunidad_ES"],Yi=["Adis Abeba_ET","Afar_ET","Amara_ET","Binshangul Gumuz_ET","Dire Dawa_ET","Gambela Hizboch_ET","Hareri Hizb_ET","Oromiya_ET","Sumale_ET","Tigray_ET","YeDebub Biheroch Bihereseboch na Hizboch_ET"],Wi=["Etela-Karjala_FI","Etela-Pohjanmaa_FI","Etela-Savo_FI","Kainuu_FI","Kanta-Hame_FI","Keski-Pohjanmaa_FI","Keski-Suomi_FI","Kymenlaakso_FI","Lappi_FI","Paijat-Hame_FI","Pirkanmaa_FI","Pohjanmaa_FI","Pohjois-Karjala_FI","Pohjois-Pohjanmaa_FI","Pohjois-Savo_FI","Satakunta_FI","Uusimaa_FI","Varsinais-Suomi_FI"],qi=["Central_FJ","Eastern_FJ","Northern_FJ","Rotuma_FJ","Western_FJ"],Qi=["Falkland Islands (Malvinas)_FK"],Xi=["Chuuk_FM","Kosrae_FM","Pohnpei_FM","Yap_FM"],$i=["Eysturoy_FO","Nordoyar_FO","Sandoy_FO","Streymoy_FO","Suduroy_FO","Vagar_FO"],e_=["Auvergne-Rhone-Alpes_FR","Bourgogne-Franche-Comte_FR","Bretagne_FR","Centre-Val de Loire_FR","Corse_FR","Grand-Est_FR","Hauts-de-France_FR","Ile-de-France_FR","Normandie_FR","Nouvelle-Aquitaine_FR","Occitanie_FR","Pays-de-la-Loire_FR","Provence-Alpes-Cote-d'Azur_FR"],a_=["Estuaire_GA","Haut-Ogooue_GA","Moyen-Ogooue_GA","Ngounie_GA","Nyanga_GA","Ogooue-Ivindo_GA","Ogooue-Lolo_GA","Ogooue-Maritime_GA","Woleu-Ntem_GA"],t_=["England_GB","Northern Ireland_GB","Scotland_GB","Wales_GB"],n_=["Saint Andrew_GD","Saint David_GD","Saint George_GD","Saint John_GD","Saint Mark_GD","Saint Patrick_GD","Southern Grenadine Islands_GD"],i_=["Abkhazia_GE","Ajaria_GE","Guria_GE","Imereti_GE","K'akheti_GE","Kvemo Kartli_GE","Mtskheta-Mtianeti_GE","Rach'a-Lechkhumi-Kvemo Svaneti_GE","Samegrelo-Zemo Svaneti_GE","Samtskhe-Javakheti_GE","Shida Kartli_GE","Tbilisi_GE"],__=["Guyane_GF"],o_=["Guernsey_GG"],r_=["Ashanti_GH","Brong-Ahafo_GH","Central_GH","Eastern_GH","Greater Accra_GH","Northern_GH","Upper East_GH","Upper West_GH","Volta_GH","Western_GH"],s_=["Gibraltar_GI"],l_=["Avannaata Kommunia_GL","Kommune Kujalleq_GL","Kommune Qeqertalik_GL","Kommuneqarfik Sermersooq_GL","Qeqqata Kommunia_GL"],u_=["Banjul_GM","Central River_GM","Lower River_GM","North Bank_GM","Upper River_GM","Western_GM"],g_=["Beyla_GN","Boffa_GN","Boke_GN","Conakry_GN","Coyah_GN","Dabola_GN","Dalaba_GN","Dinguiraye_GN","Dubreka_GN","Faranah_GN","Forecariah_GN","Fria_GN","Gaoual_GN","Guekedou_GN","Kankan_GN","Kerouane_GN","Kindia_GN","Kissidougou_GN","Koubia_GN","Koundara_GN","Kouroussa_GN","Labe_GN","Lelouma_GN","Lola_GN","Macenta_GN","Mali_GN","Mamou_GN","Mandiana_GN","Nzerekore_GN","Pita_GN","Siguiri_GN","Telimele_GN","Tougue_GN","Yomou_GN"],h_=["Guadeloupe_GP"],c_=["Annobon_GQ","Bioko Norte_GQ","Bioko Sur_GQ","Centro Sur_GQ","Kie-Ntem_GQ","Litoral_GQ","Wele-Nzas_GQ"],d_=["Agion Oros_GR","Anatoliki Makedonia kai Thraki_GR","Attiki_GR","Dytiki Ellada_GR","Dytiki Makedonia_GR","Ionia Nisia_GR","Ipeiros_GR","Kentriki Makedonia_GR","Kriti_GR","Notio Aigaio_GR","Peloponnisos_GR","Sterea Ellada_GR","Thessalia_GR","Voreio Aigaio_GR"],S_=["South Georgia and the South Sandwich Islands_GS"],m_=["Alta Verapaz_GT","Baja Verapaz_GT","Chimaltenango_GT","Chiquimula_GT","El Progreso_GT","Escuintla_GT","Guatemala_GT","Huehuetenango_GT","Izabal_GT","Jalapa_GT","Jutiapa_GT","Peten_GT","Quetzaltenango_GT","Quiche_GT","Retalhuleu_GT","Sacatepequez_GT","San Marcos_GT","Santa Rosa_GT","Solola_GT","Suchitepequez_GT","Totonicapan_GT","Zacapa_GT"],C_=["Agana Heights_GU","Agat_GU","Asan-Maina_GU","Barrigada_GU","Chalan Pago-Ordot_GU","Dededo_GU","Hagatna_GU","Inarajan_GU","Mangilao_GU","Merizo_GU","Mongmong-Toto-Maite_GU","Piti_GU","Santa Rita_GU","Sinajana_GU","Talofofo_GU","Tamuning-Tumon-Harmon_GU","Umatac_GU","Yigo_GU","Yona_GU"],M_=["Bafata_GW","Biombo_GW","Bissau_GW","Bolama_GW","Cacheu_GW","Gabu_GW","Oio_GW","Quinara_GW","Tombali_GW"],A_=["Barima-Waini_GY","Cuyuni-Mazaruni_GY","Demerara-Mahaica_GY","East Berbice-Corentyne_GY","Essequibo Islands-West Demerara_GY","Mahaica-Berbice_GY","Pomeroon-Supenaam_GY","Potaro-Siparuni_GY","Upper Demerara-Berbice_GY","Upper Takutu-Upper Essequibo_GY"],T_=["Hong Kong_HK"],f_=["Atlantida_HN","Choluteca_HN","Colon_HN","Comayagua_HN","Copan_HN","Cortes_HN","El Paraiso_HN","Francisco Morazan_HN","Gracias a Dios_HN","Intibuca_HN","Islas de la Bahia_HN","La Paz_HN","Lempira_HN","Ocotepeque_HN","Olancho_HN","Santa Barbara_HN","Valle_HN","Yoro_HN"],y_=["Bjelovarsko-bilogorska zupanija_HR","Brodsko-posavska zupanija_HR","Dubrovacko-neretvanska zupanija_HR","Grad Zagreb_HR","Istarska zupanija_HR","Karlovacka zupanija_HR","Koprivnicko-krizevacka zupanija_HR","Krapinsko-zagorska zupanija_HR","Licko-senjska zupanija_HR","Medimurska zupanija_HR","Osjecko-baranjska zupanija_HR","Pozesko-slavonska zupanija_HR","Primorsko-goranska zupanija_HR","Sibensko-kninska zupanija_HR","Sisacko-moslavacka zupanija_HR","Splitsko-dalmatinska zupanija_HR","Varazdinska zupanija_HR","Viroviticko-podravska zupanija_HR","Vukovarsko-srijemska zupanija_HR","Zadarska zupanija_HR","Zagrebacka zupanija_HR"],p_=["Artibonite_HT","Centre_HT","Grande'Anse_HT","Nippes_HT","Nord_HT","Nord-Est_HT","Nord-Ouest_HT","Ouest_HT","Sud_HT","Sud-Est_HT"],v_=["Bacs-Kiskun_HU","Baranya_HU","Bekes_HU","Borsod-Abauj-Zemplen_HU","Budapest_HU","Csongrad_HU","Fejer_HU","Gyor-Moson-Sopron_HU","Hajdu-Bihar_HU","Heves_HU","Jasz-Nagykun-Szolnok_HU","Komarom-Esztergom_HU","Nograd_HU","Pest_HU","Somogy_HU","Szabolcs-Szatmar-Bereg_HU","Tolna_HU","Vas_HU","Veszprem_HU","Zala_HU"],k_=["Aceh_ID","Bali_ID","Banten_ID","Bengkulu_ID","Gorontalo_ID","Jakarta Raya_ID","Jambi_ID","Jawa Barat_ID","Jawa Tengah_ID","Jawa Timur_ID","Kalimantan Barat_ID","Kalimantan Selatan_ID","Kalimantan Tengah_ID","Kalimantan Timur_ID","Kalimantan Utara_ID","Kepulauan Bangka Belitung_ID","Kepulauan Riau_ID","Lampung_ID","Maluku_ID","Maluku Utara_ID","Nusa Tenggara Barat_ID","Nusa Tenggara Timur_ID","Papua_ID","Papua Barat_ID","Riau_ID","Sulawesi Barat_ID","Sulawesi Selatan_ID","Sulawesi Tengah_ID","Sulawesi Tenggara_ID","Sulawesi Utara_ID","Sumatera Barat_ID","Sumatera Selatan_ID","Sumatera Utara_ID","Yogyakarta_ID"],R_=["Carlow_IE","Cavan_IE","Clare_IE","Cork_IE","Donegal_IE","Dublin_IE","Galway_IE","Kerry_IE","Kildare_IE","Kilkenny_IE","Laois_IE","Leitrim_IE","Limerick_IE","Longford_IE","Louth_IE","Mayo_IE","Meath_IE","Monaghan_IE","Offaly_IE","Roscommon_IE","Sligo_IE","Tipperary_IE","Waterford_IE","Westmeath_IE","Wexford_IE","Wicklow_IE"],b_=["HaDarom_IL","HaMerkaz_IL","HaTsafon_IL","Hefa_IL","Tel Aviv_IL","Yerushalayim_IL"],P_=["Isle of Man_IM"],B_=["Andaman and Nicobar Islands_IN","Andhra Pradesh_IN","Arunachal Pradesh_IN","Assam_IN","Bihar_IN","Chandigarh_IN","Chhattisgarh_IN","Dadra and Nagar Haveli_IN","Daman and Diu_IN","Delhi_IN","Goa_IN","Gujarat_IN","Haryana_IN","Himachal Pradesh_IN","Jammu and Kashmir_IN","Jharkhand_IN","Karnataka_IN","Kerala_IN","Lakshadweep_IN","Madhya Pradesh_IN","Maharashtra_IN","Manipur_IN","Meghalaya_IN","Mizoram_IN","Nagaland_IN","Odisha_IN","Puducherry_IN","Punjab_IN","Rajasthan_IN","Sikkim_IN","Tamil Nadu_IN","Telangana_IN","Tripura_IN","Uttar Pradesh_IN","Uttarakhand_IN","West Bengal_IN"],I_=["British Indian Ocean Territory_IO"],N_=["Al Anbar_IQ","Al Basrah_IQ","Al Muthanna_IQ","Al Qadisiyah_IQ","An Najaf_IQ","Arbil_IQ","As Sulaymaniyah_IQ","Babil_IQ","Baghdad_IQ","Dahuk_IQ","Dhi Qar_IQ","Diyala_IQ","Karbala'_IQ","Kirkuk_IQ","Maysan_IQ","Ninawa_IQ","Salah ad Din_IQ","Wasit_IQ"],E_=["Alborz_IR","Ardabil_IR","Azarbayjan-e Gharbi_IR","Azarbayjan-e Sharqi_IR","Bushehr_IR","Chahar Mahal va Bakhtiari_IR","Esfahan_IR","Fars_IR","Gilan_IR","Golestan_IR","Hamadan_IR","Hormozgan_IR","Ilam_IR","Kerman_IR","Kermanshah_IR","Khorasan-e Jonubi_IR","Khorasan-e Razavi_IR","Khorasan-e Shomali_IR","Khuzestan_IR","Kohgiluyeh va Bowyer Ahmad_IR","Kordestan_IR","Lorestan_IR","Markazi_IR","Mazandaran_IR","Qazvin_IR","Qom_IR","Semnan_IR","Sistan va Baluchestan_IR","Tehran_IR","Yazd_IR","Zanjan_IR"],G_=["Austurland_IS","Hofudborgarsvaedi_IS","Nordurland eystra_IS","Nordurland vestra_IS","Sudurland_IS","Sudurnes_IS","Vestfirdir_IS","Vesturland_IS"],x_=["Abruzzo_IT","Basilicata_IT","Calabria_IT","Campania_IT","Emilia-Romagna_IT","Friuli-Venezia Giulia_IT","Lazio_IT","Liguria_IT","Lombardia_IT","Marche_IT","Molise_IT","Piemonte_IT","Puglia_IT","Sardegna_IT","Sicilia_IT","Toscana_IT","Trentino-Alto Adige_IT","Umbria_IT","Valle d'Aosta_IT","Veneto_IT"],K_=["Jersey_JE"],U_=["Clarendon_JM","Hanover_JM","Kingston_JM","Manchester_JM","Portland_JM","Saint Andrew_JM","Saint Ann_JM","Saint Catherine_JM","Saint Elizabeth_JM","Saint James_JM","Saint Mary_JM","Saint Thomas_JM","Trelawny_JM","Westmoreland_JM"],D_=["'Ajlun_JO","Al 'Aqabah_JO","Al 'Asimah_JO","Al Balqa'_JO","Al Karak_JO","Al Mafraq_JO","At Tafilah_JO","Az Zarqa'_JO","Irbid_JO","Jarash_JO","Ma'an_JO","Madaba_JO"],L_=["Aichi_JP","Akita_JP","Aomori_JP","Chiba_JP","Ehime_JP","Fukui_JP","Fukuoka_JP","Fukushima_JP","Gifu_JP","Gunma_JP","Hiroshima_JP","Hokkaido_JP","Hyogo_JP","Ibaraki_JP","Ishikawa_JP","Iwate_JP","Kagawa_JP","Kagoshima_JP","Kanagawa_JP","Kochi_JP","Kumamoto_JP","Kyoto_JP","Mie_JP","Miyagi_JP","Miyazaki_JP","Nagano_JP","Nagasaki_JP","Nara_JP","Niigata_JP","Oita_JP","Okayama_JP","Okinawa_JP","Osaka_JP","Saga_JP","Saitama_JP","Shiga_JP","Shimane_JP","Shizuoka_JP","Tochigi_JP","Tokushima_JP","Tokyo_JP","Tottori_JP","Toyama_JP","Wakayama_JP","Yamagata_JP","Yamaguchi_JP","Yamanashi_JP"],H_=["Baringo_KE","Bomet_KE","Bungoma_KE","Busia_KE","Elgeyo/Marakwet_KE","Embu_KE","Garissa_KE","Homa Bay_KE","Isiolo_KE","Kajiado_KE","Kakamega_KE","Kericho_KE","Kiambu_KE","Kilifi_KE","Kirinyaga_KE","Kisii_KE","Kisumu_KE","Kitui_KE","Kwale_KE","Laikipia_KE","Lamu_KE","Machakos_KE","Makueni_KE","Mandera_KE","Marsabit_KE","Meru_KE","Migori_KE","Mombasa_KE","Murang'a_KE","Nairobi City_KE","Nakuru_KE","Nandi_KE","Narok_KE","Nyamira_KE","Nyandarua_KE","Nyeri_KE","Samburu_KE","Siaya_KE","Taita/Taveta_KE","Tana River_KE","Tharaka-Nithi_KE","Trans Nzoia_KE","Turkana_KE","Uasin Gishu_KE","Vihiga_KE","Wajir_KE","West Pokot_KE"],w_=["Batken_KG","Bishkek_KG","Chuy_KG","Jalal-Abad_KG","Naryn_KG","Osh_KG","Talas_KG","Ysyk-Kol_KG"],V_=["Baat Dambang_KH","Banteay Mean Chey_KH","Kampong Chaam_KH","Kampong Chhnang_KH","Kampong Spueu_KH","Kampong Thum_KH","Kampot_KH","Kandaal_KH","Kaoh Kong_KH","Kracheh_KH","Krong Kaeb_KH","Krong Pailin_KH","Krong Preah Sihanouk_KH","Mondol Kiri_KH","Otdar Mean Chey_KH","Phnom Penh_KH","Pousaat_KH","Preah Vihear_KH","Prey Veaeng_KH","Rotanak Kiri_KH","Siem Reab_KH","Stueng Traeng_KH","Svaay Rieng_KH","Taakaev_KH"],O_=["Gilbert Islands_KI","Line Islands_KI"],F_=["Anjouan_KM","Grande Comore_KM","Moheli_KM"],Z_=["Christ Church Nichola Town_KN","Saint Anne Sandy Point_KN","Saint George Basseterre_KN","Saint George Gingerland_KN","Saint James Windward_KN","Saint John Capisterre_KN","Saint John Figtree_KN","Saint Mary Cayon_KN","Saint Paul Capisterre_KN","Saint Paul Charlestown_KN","Saint Peter Basseterre_KN","Saint Thomas Lowland_KN","Saint Thomas Middle Island_KN","Trinity Palmetto Point_KN"],j_=["Chagang-do_KP","Hamgyong-bukto_KP","Hamgyong-namdo_KP","Hwanghae-bukto_KP","Hwanghae-namdo_KP","Kangwon-do_KP","P'yongan-bukto_KP","P'yongan-namdo_KP","P'yongyang_KP","Rason_KP","Ryanggang-do_KP"],z_=["Busan-gwangyeoksi_KR","Chungcheongbuk-do_KR","Chungcheongnam-do_KR","Daegu-gwangyeoksi_KR","Daejeon-gwangyeoksi_KR","Gangwon-do_KR","Gwangju-gwangyeoksi_KR","Gyeonggi-do_KR","Gyeongsangbuk-do_KR","Gyeongsangnam-do_KR","Incheon-gwangyeoksi_KR","Jeju-teukbyeoljachido_KR","Jeollabuk-do_KR","Jeollanam-do_KR","Seoul-teukbyeolsi_KR","Ulsan-gwangyeoksi_KR"],J_=["Al 'Asimah_KW","Al Ahmadi_KW","Al Farwaniyah_KW","Al Jahra'_KW","Hawalli_KW","Mubarak al Kabir_KW"],Y_=["Cayman Islands_KY"],W_=["Almaty_KZ","Almaty oblysy_KZ","Aqmola oblysy_KZ","Aqtobe oblysy_KZ","Astana_KZ","Atyrau oblysy_KZ","Batys Qazaqstan oblysy_KZ","Bayqongyr_KZ","Mangghystau oblysy_KZ","Ongtustik Qazaqstan oblysy_KZ","Pavlodar oblysy_KZ","Qaraghandy oblysy_KZ","Qostanay oblysy_KZ","Qyzylorda oblysy_KZ","Shyghys Qazaqstan oblysy_KZ","Soltustik Qazaqstan oblysy_KZ","Zhambyl oblysy_KZ"],q_=["Attapu_LA","Bokeo_LA","Bolikhamxai_LA","Champasak_LA","Houaphan_LA","Khammouan_LA","Louang Namtha_LA","Louangphabang_LA","Oudomxai_LA","Phongsali_LA","Salavan_LA","Savannakhet_LA","Viangchan_LA","Xaignabouli_LA","Xekong_LA","Xiangkhouang_LA"],Q_=["Aakkar_LB","Baalbek-Hermel_LB","Beqaa_LB","Beyrouth_LB","Liban-Nord_LB","Liban-Sud_LB","Mont-Liban_LB","Nabatiye_LB"],X_=["Anse la Raye_LC","Castries_LC","Choiseul_LC","Dennery_LC","Gros Islet_LC","Laborie_LC","Micoud_LC","Soufriere_LC","Vieux Fort_LC"],$_=["Balzers_LI","Eschen_LI","Gamprin_LI","Mauren_LI","Planken_LI","Ruggell_LI","Schaan_LI","Schellenberg_LI","Triesen_LI","Triesenberg_LI","Vaduz_LI"],eo=["Central Province_LK","Eastern Province_LK","North Central Province_LK","North Western Province_LK","Northern Province_LK","Sabaragamuwa Province_LK","Southern Province_LK","Uva Province_LK","Western Province_LK"],ao=["Bomi_LR","Bong_LR","Gbarpolu_LR","Grand Bassa_LR","Grand Cape Mount_LR","Grand Gedeh_LR","Grand Kru_LR","Lofa_LR","Margibi_LR","Maryland_LR","Montserrado_LR","Nimba_LR","River Cess_LR","River Gee_LR","Sinoe_LR"],to=["Berea_LS","Butha-Buthe_LS","Leribe_LS","Mafeteng_LS","Maseru_LS","Mohale's Hoek_LS","Mokhotlong_LS","Qacha's Nek_LS","Quthing_LS","Thaba-Tseka_LS"],no=["Alytaus apskritis_LT","Kauno apskritis_LT","Klaipedos apskritis_LT","Marijampoles apskritis_LT","Panevezio apskritis_LT","Siauliu apskritis_LT","Taurages apskritis_LT","Telsiu apskritis_LT","Utenos apskritis_LT","Vilniaus apskritis_LT"],io=["Diekirch_LU","Grevenmacher_LU","Luxembourg_LU"],_o=["Adazu novads_LV","Aglonas novads_LV","Aizkraukles novads_LV","Aizputes novads_LV","Alojas novads_LV","Aluksnes novads_LV","Babites novads_LV","Baldones novads_LV","Baltinavas novads_LV","Balvu novads_LV","Bauskas novads_LV","Beverinas novads_LV","Brocenu novads_LV","Carnikavas novads_LV","Cesu novads_LV","Cesvaines novads_LV","Ciblas novads_LV","Daugavpils novads_LV","Dobeles novads_LV","Dundagas novads_LV","Erglu novads_LV","Gulbenes novads_LV","Iecavas novads_LV","Ikskiles novads_LV","Incukalna novads_LV","Jaunjelgavas novads_LV","Jaunpiebalgas novads_LV","Jaunpils novads_LV","Jekabpils novads_LV","Jelgava_LV","Jelgavas novads_LV","Jurmala_LV","Kekavas novads_LV","Kokneses novads_LV","Kraslavas novads_LV","Kuldigas novads_LV","Lielvardes novads_LV","Liepaja_LV","Limbazu novads_LV","Livanu novads_LV","Lubanas novads_LV","Ludzas novads_LV","Madonas novads_LV","Malpils novads_LV","Nauksenu novads_LV","Ogres novads_LV","Olaines novads_LV","Ozolnieku novads_LV","Preilu novads_LV","Rezeknes novads_LV","Riebinu novads_LV","Riga_LV","Rojas novads_LV","Ropazu novads_LV","Rugaju novads_LV","Rundales novads_LV","Salacgrivas novads_LV","Salaspils novads_LV","Saldus novads_LV","Saulkrastu novads_LV","Sejas novads_LV","Siguldas novads_LV","Skrundas novads_LV","Stopinu novads_LV","Strencu novads_LV","Talsu novads_LV","Tukuma novads_LV","Vainodes novads_LV","Valkas novads_LV","Valmiera_LV","Varkavas novads_LV","Vecumnieku novads_LV","Ventspils novads_LV"],oo=["Al Butnan_LY","Al Jabal al Akhdar_LY","Al Jabal al Gharbi_LY","Al Jafarah_LY","Al Jufrah_LY","Al Kufrah_LY","Al Marj_LY","Al Marqab_LY","Al Wahat_LY","An Nuqat al Khams_LY","Az Zawiyah_LY","Banghazi_LY","Darnah_LY","Ghat_LY","Misratah_LY","Murzuq_LY","Nalut_LY","Sabha_LY","Surt_LY","Tarabulus_LY","Wadi al Hayat_LY","Wadi ash Shati'_LY"],ro=["Beni-Mellal-Khenifra_MA","Casablanca-Settat_MA","Draa-Tafilalet_MA","Fes- Meknes_MA","Guelmim-Oued Noun (EH-partial)_MA","L'Oriental_MA","Laayoune-Sakia El Hamra (EH-partial)_MA","Marrakech-Safi_MA","Rabat-Sale-Kenitra_MA","Souss-Massa_MA","Tanger-Tetouan-Al Hoceima_MA"],so=["Fontvieille_MC","La Condamine_MC","Monaco-Ville_MC","Moneghetti_MC","Monte-Carlo_MC","Saint-Roman_MC"],lo=["Anenii Noi_MD","Balti_MD","Basarabeasca_MD","Bender_MD","Briceni_MD","Cahul_MD","Calarasi_MD","Cantemir_MD","Causeni_MD","Chisinau_MD","Cimislia_MD","Criuleni_MD","Donduseni_MD","Drochia_MD","Dubasari_MD","Edinet_MD","Falesti_MD","Floresti_MD","Gagauzia, Unitatea teritoriala autonoma_MD","Glodeni_MD","Hincesti_MD","Ialoveni_MD","Leova_MD","Nisporeni_MD","Ocnita_MD","Orhei_MD","Rezina_MD","Riscani_MD","Singerei_MD","Soldanesti_MD","Soroca_MD","Stefan Voda_MD","Stinga Nistrului, unitatea teritoriala din_MD","Straseni_MD","Taraclia_MD","Telenesti_MD","Ungheni_MD"],uo=["Andrijevica_ME","Bar_ME","Berane_ME","Bijelo Polje_ME","Budva_ME","Cetinje_ME","Danilovgrad_ME","Herceg-Novi_ME","Kolasin_ME","Kotor_ME","Mojkovac_ME","Niksic_ME","Plav_ME","Pljevlja_ME","Pluzine_ME","Podgorica_ME","Rozaje_ME","Savnik_ME","Tivat_ME","Ulcinj_ME","Zabljak_ME"],go=["Saint Martin (French Part)_MF"],ho=["Antananarivo_MG","Antsiranana_MG","Fianarantsoa_MG","Mahajanga_MG","Toamasina_MG","Toliara_MG"],co=["Ailinglaplap_MH","Ailuk_MH","Arno_MH","Aur_MH","Bikini & Kili_MH","Ebon_MH","Enewetak & Ujelang_MH","Jabat_MH","Jaluit_MH","Kwajalein_MH","Lae_MH","Lib_MH","Likiep_MH","Majuro_MH","Maloelap_MH","Mejit_MH","Mili_MH","Namdrik_MH","Namu_MH","Rongelap_MH","Ujae_MH","Utrik_MH","Wotho_MH","Wotje_MH"],So=["Aracinovo_MK","Berovo_MK","Bitola_MK","Bogdanci_MK","Bogovinje_MK","Bosilovo_MK","Brvenica_MK","Caska_MK","Centar Zupa_MK","Cesinovo-Oblesevo_MK","Cucer Sandevo_MK","Debar_MK","Debarca_MK","Delcevo_MK","Demir Hisar_MK","Demir Kapija_MK","Dojran_MK","Dolneni_MK","Gevgelija_MK","Gostivar_MK","Gradsko_MK","Ilinden_MK","Jegunovce_MK","Karbinci_MK","Kavadarci_MK","Kicevo_MK","Kocani_MK","Konce_MK","Kratovo_MK","Kriva Palanka_MK","Krivogastani_MK","Krusevo_MK","Kumanovo_MK","Lipkovo_MK","Lozovo_MK","Makedonska Kamenica_MK","Makedonski Brod_MK","Mavrovo i Rostusa_MK","Mogila_MK","Negotino_MK","Novaci_MK","Novo Selo_MK","Ohrid_MK","Pehcevo_MK","Petrovec_MK","Plasnica_MK","Prilep_MK","Probistip_MK","Radovis_MK","Rankovce_MK","Resen_MK","Rosoman_MK","Skopje_MK","Sopiste_MK","Staro Nagoricane_MK","Stip_MK","Struga_MK","Strumica_MK","Studenicani_MK","Sveti Nikole_MK","Tearce_MK","Tetovo_MK","Valandovo_MK","Vasilevo_MK","Veles_MK","Vevcani_MK","Vinica_MK","Vrapciste_MK","Zelenikovo_MK","Zelino_MK","Zrnovci_MK"],mo=["Bamako_ML","Gao_ML","Kayes_ML","Kidal_ML","Koulikoro_ML","Mopti_ML","Segou_ML","Sikasso_ML","Tombouctou_ML"],Co=["Ayeyarwady_MM","Bago_MM","Chin_MM","Kachin_MM","Kayah_MM","Kayin_MM","Magway_MM","Mandalay_MM","Mon_MM","Nay Pyi Taw_MM","Rakhine_MM","Sagaing_MM","Shan_MM","Tanintharyi_MM","Yangon_MM"],Mo=["Arhangay_MN","Bayan-Olgiy_MN","Bayanhongor_MN","Bulgan_MN","Darhan uul_MN","Dornod_MN","Dornogovi_MN","Dundgovi_MN","Dzavhan_MN","Govi-Altay_MN","Govi-Sumber_MN","Hentiy_MN","Hovd_MN","Hovsgol_MN","Omnogovi_MN","Orhon_MN","Ovorhangay_MN","Selenge_MN","Suhbaatar_MN","Tov_MN","Ulaanbaatar_MN","Uvs_MN"],Ao=["Macao_MO"],To=["Northern Mariana Islands_MP"],fo=["Martinique_MQ"],yo=["Adrar_MR","Assaba_MR","Brakna_MR","Dakhlet Nouadhibou_MR","Gorgol_MR","Guidimaka_MR","Hodh ech Chargui_MR","Hodh el Gharbi_MR","Inchiri_MR","Nouakchott Nord_MR","Tagant_MR","Tiris Zemmour_MR","Trarza_MR"],po=["Saint Anthony_MS","Saint Peter_MS"],vo=["Attard_MT","Balzan_MT","Birgu_MT","Birkirkara_MT","Birzebbuga_MT","Bormla_MT","Dingli_MT","Fgura_MT","Floriana_MT","Fontana_MT","Ghajnsielem_MT","Gharb_MT","Gharghur_MT","Ghasri_MT","Ghaxaq_MT","Gudja_MT","Gzira_MT","Hamrun_MT","Iklin_MT","Isla_MT","Kalkara_MT","Kercem_MT","Kirkop_MT","Lija_MT","Luqa_MT","Marsa_MT","Marsaskala_MT","Marsaxlokk_MT","Mdina_MT","Mellieha_MT","Mgarr_MT","Mosta_MT","Mqabba_MT","Msida_MT","Mtarfa_MT","Munxar_MT","Nadur_MT","Naxxar_MT","Paola_MT","Pembroke_MT","Pieta_MT","Qala_MT","Qormi_MT","Qrendi_MT","Rabat Gozo_MT","Rabat Malta_MT","Safi_MT","Saint John_MT","Saint Julian's_MT","Saint Lucia's_MT","Saint Paul's Bay_MT","Sannat_MT","Santa Venera_MT","Siggiewi_MT","Sliema_MT","Swieqi_MT","Ta' Xbiex_MT","Tarxien_MT","Valletta_MT","Xaghra_MT","Xewkija_MT","Xghajra_MT","Zabbar_MT","Zebbug Gozo_MT","Zejtun_MT","Zurrieq_MT"],ko=["Agalega Islands_MU","Black River_MU","Flacq_MU","Grand Port_MU","Moka_MU","Pamplemousses_MU","Plaines Wilhems_MU","Port Louis_MU","Riviere du Rempart_MU","Rodrigues Islands_MU","Savanne_MU"],Ro=["Alifu Alifu_MV","Baa_MV","Dhaalu_MV","Gaafu Dhaalu_MV","Gnaviyani_MV","Haa Alifu_MV","Haa Dhaalu_MV","Kaafu_MV","Laamu_MV","Maale_MV","Meemu_MV","Noonu_MV","Raa_MV","Seenu_MV","Shaviyani_MV","Thaa_MV","Vaavu_MV"],bo=["Balaka_MW","Blantyre_MW","Chikwawa_MW","Chiradzulu_MW","Chitipa_MW","Dedza_MW","Dowa_MW","Karonga_MW","Kasungu_MW","Likoma_MW","Lilongwe_MW","Machinga_MW","Mangochi_MW","Mchinji_MW","Mulanje_MW","Mwanza_MW","Mzimba_MW","Neno_MW","Nkhata Bay_MW","Nkhotakota_MW","Nsanje_MW","Ntcheu_MW","Ntchisi_MW","Phalombe_MW","Rumphi_MW","Salima_MW","Thyolo_MW","Zomba_MW"],Po=["Aguascalientes_MX","Baja California_MX","Baja California Sur_MX","Campeche_MX","Chiapas_MX","Chihuahua_MX","Ciudad de Mexico_MX","Coahuila de Zaragoza_MX","Colima_MX","Durango_MX","Guanajuato_MX","Guerrero_MX","Hidalgo_MX","Jalisco_MX","Mexico_MX","Michoacan de Ocampo_MX","Morelos_MX","Nayarit_MX","Nuevo Leon_MX","Oaxaca_MX","Puebla_MX","Queretaro_MX","Quintana Roo_MX","San Luis Potosi_MX","Sinaloa_MX","Sonora_MX","Tabasco_MX","Tamaulipas_MX","Tlaxcala_MX","Veracruz de Ignacio de la Llave_MX","Yucatan_MX","Zacatecas_MX"],Bo=["Johor_MY","Kedah_MY","Kelantan_MY","Melaka_MY","Negeri Sembilan_MY","Pahang_MY","Perak_MY","Perlis_MY","Pulau Pinang_MY","Sabah_MY","Sarawak_MY","Selangor_MY","Terengganu_MY","Wilayah Persekutuan Kuala Lumpur_MY","Wilayah Persekutuan Labuan_MY","Wilayah Persekutuan Putrajaya_MY"],Io=["Cabo Delgado_MZ","Gaza_MZ","Inhambane_MZ","Manica_MZ","Maputo_MZ","Nampula_MZ","Niassa_MZ","Sofala_MZ","Tete_MZ","Zambezia_MZ"],No=["Erongo_NA","Hardap_NA","Karas_NA","Kavango East_NA","Khomas_NA","Kunene_NA","Ohangwena_NA","Omaheke_NA","Omusati_NA","Oshana_NA","Oshikoto_NA","Otjozondjupa_NA","Zambezi_NA"],Eo=["Province des iles Loyaute_NC","Province Nord_NC","Province Sud_NC"],Go=["Agadez_NE","Diffa_NE","Dosso_NE","Maradi_NE","Niamey_NE","Tahoua_NE","Tillaberi_NE","Zinder_NE"],xo=["Norfolk Island_NF"],Ko=["Abia_NG","Abuja Federal Capital Territory_NG","Adamawa_NG","Akwa Ibom_NG","Anambra_NG","Bauchi_NG","Bayelsa_NG","Benue_NG","Borno_NG","Cross River_NG","Delta_NG","Ebonyi_NG","Edo_NG","Ekiti_NG","Enugu_NG","Gombe_NG","Imo_NG","Jigawa_NG","Kaduna_NG","Kano_NG","Katsina_NG","Kebbi_NG","Kogi_NG","Kwara_NG","Lagos_NG","Nasarawa_NG","Niger_NG","Ogun_NG","Ondo_NG","Osun_NG","Oyo_NG","Plateau_NG","Rivers_NG","Sokoto_NG","Taraba_NG","Yobe_NG","Zamfara_NG"],Uo=["Boaco_NI","Carazo_NI","Chinandega_NI","Chontales_NI","Costa Caribe Norte_NI","Costa Caribe Sur_NI","Esteli_NI","Granada_NI","Jinotega_NI","Leon_NI","Madriz_NI","Managua_NI","Masaya_NI","Matagalpa_NI","Nueva Segovia_NI","Rio San Juan_NI","Rivas_NI"],Do=["Drenthe_NL","Flevoland_NL","Fryslan_NL","Gelderland_NL","Groningen_NL","Limburg_NL","Noord-Brabant_NL","Noord-Holland_NL","Overijssel_NL","Utrecht_NL","Zeeland_NL","Zuid-Holland_NL"],Lo=["Akershus_NO","Aust-Agder_NO","Buskerud_NO","Finnmark_NO","Hedmark_NO","Hordaland_NO","More og Romsdal_NO","Nord-Trondelag_NO","Nordland_NO","Oppland_NO","Oslo_NO","Ostfold_NO","Rogaland_NO","Sogn og Fjordane_NO","Sor-Trondelag_NO","Telemark_NO","Troms_NO","Vest-Agder_NO","Vestfold_NO"],Ho=["Bagmati_NP","Bheri_NP","Dhawalagiri_NP","Gandaki_NP","Janakpur_NP","Karnali_NP","Kosi_NP","Lumbini_NP","Mahakali_NP","Mechi_NP","Narayani_NP","Rapti_NP","Sagarmatha_NP","Seti_NP"],wo=["Aiwo_NR","Anabar_NR","Anetan_NR","Anibare_NR","Baitsi_NR","Buada_NR","Ewa_NR","Ijuw_NR","Uaboe_NR","Yaren_NR"],Vo=["Niue_NU"],Oo=["Auckland_NZ","Bay of Plenty_NZ","Canterbury_NZ","Chatham Islands Territory_NZ","Gisborne_NZ","Hawke's Bay_NZ","Manawatu-Wanganui_NZ","Marlborough_NZ","Nelson_NZ","Northland_NZ","Otago_NZ","Southland_NZ","Taranaki_NZ","Tasman_NZ","Waikato_NZ","Wellington_NZ","West Coast_NZ"],Fo=["Ad Dakhiliyah_OM","Al Buraymi_OM","Al Wusta_OM","Az Zahirah_OM","Janub al Batinah_OM","Janub ash Sharqiyah_OM","Masqat_OM","Musandam_OM","Shamal al Batinah_OM","Shamal ash Sharqiyah_OM","Zufar_OM"],Zo=["Bocas del Toro_PA","Chiriqui_PA","Cocle_PA","Colon_PA","Darien_PA","Embera_PA","Guna Yala_PA","Herrera_PA","Los Santos_PA","Ngobe-Bugle_PA","Panama_PA","Veraguas_PA"],jo=["Amazonas_PE","Ancash_PE","Apurimac_PE","Arequipa_PE","Ayacucho_PE","Cajamarca_PE","Cusco_PE","El Callao_PE","Huancavelica_PE","Huanuco_PE","Ica_PE","Junin_PE","La Libertad_PE","Lambayeque_PE","Lima_PE","Loreto_PE","Madre de Dios_PE","Moquegua_PE","Pasco_PE","Piura_PE","Puno_PE","San Martin_PE","Tacna_PE","Tumbes_PE","Ucayali_PE"],zo=["Iles Australes_PF","Iles du Vent_PF","Iles Marquises_PF","Iles Sous-le-Vent_PF","Iles Tuamotu-Gambier_PF"],Jo=["Bougainville_PG","Central_PG","Chimbu_PG","East New Britain_PG","East Sepik_PG","Eastern Highlands_PG","Enga_PG","Gulf_PG","Madang_PG","Manus_PG","Milne Bay_PG","Morobe_PG","National Capital District (Port Moresby)_PG","New Ireland_PG","Northern_PG","Southern Highlands_PG","West New Britain_PG","West Sepik_PG","Western_PG","Western Highlands_PG"],Yo=["Abra_PH","Agusan del Norte_PH","Agusan del Sur_PH","Aklan_PH","Albay_PH","Antique_PH","Apayao_PH","Aurora_PH","Basilan_PH","Bataan_PH","Batanes_PH","Batangas_PH","Benguet_PH","Biliran_PH","Bohol_PH","Bukidnon_PH","Bulacan_PH","Cagayan_PH","Camarines Norte_PH","Camarines Sur_PH","Camiguin_PH","Capiz_PH","Catanduanes_PH","Cavite_PH","Cebu_PH","Compostela Valley_PH","Cotabato_PH","Davao del Norte_PH","Davao del Sur_PH","Davao Oriental_PH","Dinagat Islands_PH","Eastern Samar_PH","Guimaras_PH","Ifugao_PH","Ilocos Norte_PH","Ilocos Sur_PH","Iloilo_PH","Isabela_PH","Kalinga_PH","La Union_PH","Laguna_PH","Lanao del Norte_PH","Lanao del Sur_PH","Leyte_PH","Maguindanao_PH","Marinduque_PH","Masbate_PH","Mindoro Occidental_PH","Mindoro Oriental_PH","Misamis Occidental_PH","Misamis Oriental_PH","Mountain Province_PH","National Capital Region_PH","Negros Occidental_PH","Negros Oriental_PH","Northern Samar_PH","Nueva Ecija_PH","Nueva Vizcaya_PH","Palawan_PH","Pampanga_PH","Pangasinan_PH","Quezon_PH","Quirino_PH","Rizal_PH","Romblon_PH","Samar_PH","Sarangani_PH","Siquijor_PH","Sorsogon_PH","South Cotabato_PH","Southern Leyte_PH","Sultan Kudarat_PH","Sulu_PH","Surigao del Norte_PH","Surigao del Sur_PH","Tarlac_PH","Tawi-Tawi_PH","Zambales_PH","Zamboanga del Norte_PH","Zamboanga del Sur_PH","Zamboanga Sibugay_PH"],Wo=["Azad Jammu and Kashmir_PK","Balochistan_PK","Federally Administered Tribal Areas_PK","Gilgit-Baltistan_PK","Islamabad_PK","Khyber Pakhtunkhwa_PK","Punjab_PK","Sindh_PK"],qo=["Dolnoslaskie_PL","Kujawsko-pomorskie_PL","Lodzkie_PL","Lubelskie_PL","Lubuskie_PL","Malopolskie_PL","Mazowieckie_PL","Opolskie_PL","Podkarpackie_PL","Podlaskie_PL","Pomorskie_PL","Slaskie_PL","Swietokrzyskie_PL","Warminsko-mazurskie_PL","Wielkopolskie_PL","Zachodniopomorskie_PL"],Qo=["Saint Pierre and Miquelon_PM"],Xo=["Pitcairn_PN"],$o=["Adjuntas_PR","Aguada_PR","Aguadilla_PR","Aguas Buenas_PR","Aibonito_PR","Anasco_PR","Arecibo_PR","Arroyo_PR","Barceloneta_PR","Barranquitas_PR","Bayamon_PR","Cabo Rojo_PR","Caguas_PR","Camuy_PR","Canovanas_PR","Carolina_PR","Catano_PR","Cayey_PR","Ceiba_PR","Ciales_PR","Cidra_PR","Coamo_PR","Comerio_PR","Corozal_PR","Culebra_PR","Dorado_PR","Fajardo_PR","Florida_PR","Guanica_PR","Guayama_PR","Guayanilla_PR","Guaynabo_PR","Gurabo_PR","Hatillo_PR","Hormigueros_PR","Humacao_PR","Isabela_PR","Juana Diaz_PR","Lajas_PR","Lares_PR","Las Marias_PR","Las Piedras_PR","Loiza_PR","Luquillo_PR","Manati_PR","Maricao_PR","Maunabo_PR","Mayaguez_PR","Moca_PR","Morovis_PR","Municipio de Jayuya_PR","Municipio de Juncos_PR","Naguabo_PR","Naranjito_PR","Patillas_PR","Penuelas_PR","Ponce_PR","Quebradillas_PR","Rincon_PR","Rio Grande_PR","Sabana Grande_PR","Salinas_PR","San German_PR","San Juan_PR","San Lorenzo_PR","San Sebastian_PR","Santa Isabel Municipio_PR","Toa Alta_PR","Toa Baja_PR","Trujillo Alto_PR","Utuado_PR","Vega Alta_PR","Vega Baja_PR","Vieques_PR","Villalba_PR","Yabucoa_PR","Yauco_PR"],er=["Bethlehem_PS","Gaza_PS","Hebron_PS","Jenin_PS","Jericho and Al Aghwar_PS","Jerusalem_PS","Nablus_PS","Qalqilya_PS","Ramallah_PS","Salfit_PS","Tubas_PS","Tulkarm_PS"],ar=["Aveiro_PT","Beja_PT","Braga_PT","Braganca_PT","Castelo Branco_PT","Coimbra_PT","Evora_PT","Faro_PT","Guarda_PT","Leiria_PT","Lisboa_PT","Portalegre_PT","Porto_PT","Regiao Autonoma da Madeira_PT","Regiao Autonoma dos Acores_PT","Santarem_PT","Setubal_PT","Viana do Castelo_PT","Vila Real_PT","Viseu_PT"],tr=["Aimeliik_PW","Airai_PW","Angaur_PW","Hatohobei_PW","Kayangel_PW","Koror_PW","Melekeok_PW","Ngaraard_PW","Ngarchelong_PW","Ngardmau_PW","Ngatpang_PW","Ngchesar_PW","Ngeremlengui_PW","Ngiwal_PW","Peleliu_PW","Sonsorol_PW"],nr=["Alto Paraguay_PY","Alto Parana_PY","Amambay_PY","Asuncion_PY","Boqueron_PY","Caaguazu_PY","Caazapa_PY","Canindeyu_PY","Central_PY","Concepcion_PY","Cordillera_PY","Guaira_PY","Itapua_PY","Misiones_PY","Neembucu_PY","Paraguari_PY","Presidente Hayes_PY","San Pedro_PY"],ir=["Ad Dawhah_QA","Al Khawr wa adh Dhakhirah_QA","Al Wakrah_QA","Ar Rayyan_QA","Ash Shamal_QA","Az Za'ayin_QA","Umm Salal_QA"],_r=["Reunion_RE"],or=["Alba_RO","Arad_RO","Arges_RO","Bacau_RO","Bihor_RO","Bistrita-Nasaud_RO","Botosani_RO","Braila_RO","Brasov_RO","Bucuresti_RO","Buzau_RO","Calarasi_RO","Caras-Severin_RO","Cluj_RO","Constanta_RO","Covasna_RO","Dambovita_RO","Dolj_RO","Galati_RO","Giurgiu_RO","Gorj_RO","Harghita_RO","Hunedoara_RO","Ialomita_RO","Iasi_RO","Ilfov_RO","Maramures_RO","Mehedinti_RO","Mures_RO","Neamt_RO","Olt_RO","Prahova_RO","Salaj_RO","Satu Mare_RO","Sibiu_RO","Suceava_RO","Teleorman_RO","Timis_RO","Tulcea_RO","Valcea_RO","Vaslui_RO","Vrancea_RO"],rr=["Beograd_RS","Borski okrug_RS","Branicevski okrug_RS","Jablanicki okrug_RS","Juznobacki okrug_RS","Juznobanatski okrug_RS","Kolubarski okrug_RS","Kosovsko-Mitrovacki okrug_RS","Macvanski okrug_RS","Moravicki okrug_RS","Nisavski okrug_RS","Pcinjski okrug_RS","Pecki okrug_RS","Pirotski okrug_RS","Podunavski okrug_RS","Pomoravski okrug_RS","Prizrenski okrug_RS","Rasinski okrug_RS","Raski okrug_RS","Severnobacki okrug_RS","Severnobanatski okrug_RS","Srednjebanatski okrug_RS","Sremski okrug_RS","Sumadijski okrug_RS","Toplicki okrug_RS","Zajecarski okrug_RS","Zapadnobacki okrug_RS","Zlatiborski okrug_RS"],sr=["Adygeya, Respublika_RU","Altay, Respublika_RU","Altayskiy kray_RU","Amurskaya oblast'_RU","Arkhangel'skaya oblast'_RU","Astrakhanskaya oblast'_RU","Bashkortostan, Respublika_RU","Belgorodskaya oblast'_RU","Bryanskaya oblast'_RU","Buryatiya, Respublika_RU","Chechenskaya Respublika_RU","Chelyabinskaya oblast'_RU","Chukotskiy avtonomnyy okrug_RU","Chuvashskaya Respublika_RU","Dagestan, Respublika_RU","Ingushetiya, Respublika_RU","Irkutskaya oblast'_RU","Ivanovskaya oblast'_RU","Kabardino-Balkarskaya Respublika_RU","Kaliningradskaya oblast'_RU","Kalmykiya, Respublika_RU","Kaluzhskaya oblast'_RU","Kamchatskiy kray_RU","Karachayevo-Cherkesskaya Respublika_RU","Kareliya, Respublika_RU","Kemerovskaya oblast'_RU","Khabarovskiy kray_RU","Khakasiya, Respublika_RU","Khanty-Mansiyskiy avtonomnyy okrug_RU","Kirovskaya oblast'_RU","Komi, Respublika_RU","Kostromskaya oblast'_RU","Krasnodarskiy kray_RU","Krasnoyarskiy kray_RU","Kurganskaya oblast'_RU","Kurskaya oblast'_RU","Leningradskaya oblast'_RU","Lipetskaya oblast'_RU","Magadanskaya oblast'_RU","Mariy El, Respublika_RU","Mordoviya, Respublika_RU","Moskovskaya oblast'_RU","Moskva_RU","Murmanskaya oblast'_RU","Nenetskiy avtonomnyy okrug_RU","Nizhegorodskaya oblast'_RU","Novgorodskaya oblast'_RU","Novosibirskaya oblast'_RU","Omskaya oblast'_RU","Orenburgskaya oblast'_RU","Orlovskaya oblast'_RU","Penzenskaya oblast'_RU","Permskiy kray_RU","Primorskiy kray_RU","Pskovskaya oblast'_RU","Rostovskaya oblast'_RU","Ryazanskaya oblast'_RU","Saha, Respublika_RU","Sakhalinskaya oblast'_RU","Samarskaya oblast'_RU","Sankt-Peterburg_RU","Saratovskaya oblast'_RU","Severnaya Osetiya, Respublika_RU","Smolenskaya oblast'_RU","Stavropol'skiy kray_RU","Sverdlovskaya oblast'_RU","Tambovskaya oblast'_RU","Tatarstan, Respublika_RU","Tomskaya oblast'_RU","Tul'skaya oblast'_RU","Tverskaya oblast'_RU","Tyumenskaya oblast'_RU","Tyva, Respublika_RU","Udmurtskaya Respublika_RU","Ul'yanovskaya oblast'_RU","Vladimirskaya oblast'_RU","Volgogradskaya oblast'_RU","Vologodskaya oblast'_RU","Voronezhskaya oblast'_RU","Yamalo-Nenetskiy avtonomnyy okrug_RU","Yaroslavskaya oblast'_RU","Yevreyskaya avtonomnaya oblast'_RU","Zabaykal'skiy kray_RU"],lr=["Est_RW","Nord_RW","Ouest_RW","Sud_RW","Ville de Kigali_RW"],ur=["'Asir_SA","Al Bahah_SA","Al Hudud ash Shamaliyah_SA","Al Jawf_SA","Al Madinah al Munawwarah_SA","Al Qasim_SA","Ar Riyad_SA","Ash Sharqiyah_SA","Ha'il_SA","Jazan_SA","Makkah al Mukarramah_SA","Najran_SA","Tabuk_SA"],gr=["Central_SB","Choiseul_SB","Guadalcanal_SB","Isabel_SB","Makira-Ulawa_SB","Malaita_SB","Rennell and Bellona_SB","Temotu_SB","Western_SB"],hr=["Anse aux Pins_SC","Anse Boileau_SC","Anse Royale_SC","Baie Lazare_SC","Beau Vallon_SC","Bel Ombre_SC","Cascade_SC","English River_SC","Grand Anse Mahe_SC","La Digue_SC","Pointe Larue_SC","Port Glaud_SC","Takamaka_SC"],cr=["Blue Nile_SD","Gedaref_SD","Gezira_SD","Kassala_SD","Khartoum_SD","North Darfur_SD","North Kordofan_SD","Northern_SD","Red Sea_SD","River Nile_SD","Sennar_SD","South Darfur_SD","South Kordofan_SD","West Darfur_SD","White Nile_SD"],dr=["Blekinge lan_SE","Dalarnas lan_SE","Gavleborgs lan_SE","Gotlands lan_SE","Hallands lan_SE","Jamtlands lan_SE","Jonkopings lan_SE","Kalmar lan_SE","Kronobergs lan_SE","Norrbottens lan_SE","Orebro lan_SE","Ostergotlands lan_SE","Skane lan_SE","Sodermanlands lan_SE","Stockholms lan_SE","Uppsala lan_SE","Varmlands lan_SE","Vasterbottens lan_SE","Vasternorrlands lan_SE","Vastmanlands lan_SE","Vastra Gotalands lan_SE"],Sr=["Singapore_SG"],mr=["Ascension_SH","Saint Helena_SH","Tristan da Cunha_SH"],Cr=["Ajdovscina_SI","Apace_SI","Beltinci_SI","Benedikt_SI","Bistrica ob Sotli_SI","Bled_SI","Bloke_SI","Bohinj_SI","Borovnica_SI","Bovec_SI","Braslovce_SI","Brda_SI","Brezice_SI","Brezovica_SI","Cankova_SI","Celje_SI","Cerklje na Gorenjskem_SI","Cerknica_SI","Cerkno_SI","Cirkulane_SI","Crensovci_SI","Crnomelj_SI","Destrnik_SI","Divaca_SI","Dobje_SI","Dobrepolje_SI","Dobrna_SI","Dobrova-Polhov Gradec_SI","Dobrovnik_SI","Domzale_SI","Dornava_SI","Dravograd_SI","Duplek_SI","Gorje_SI","Gornja Radgona_SI","Gornji Petrovci_SI","Grad_SI","Grosuplje_SI","Hajdina_SI","Hoce-Slivnica_SI","Hodos_SI","Horjul_SI","Hrastnik_SI","Hrpelje-Kozina_SI","Idrija_SI","Ig_SI","Ilirska Bistrica_SI","Ivancna Gorica_SI","Izola_SI","Jesenice_SI","Jursinci_SI","Kamnik_SI","Kanal_SI","Kidricevo_SI","Kobarid_SI","Kobilje_SI","Kocevje_SI","Komen_SI","Komenda_SI","Koper_SI","Kosanjevica na Krki_SI","Kostel_SI","Kranj_SI","Kranjska Gora_SI","Krizevci_SI","Krsko_SI","Kungota_SI","Kuzma_SI","Lasko_SI","Lenart_SI","Lendava_SI","Litija_SI","Ljubljana_SI","Ljutomer_SI","Log-Dragomer_SI","Logatec_SI","Loska Dolina_SI","Loski Potok_SI","Lovrenc na Pohorju_SI","Luce_SI","Lukovica_SI","Majsperk_SI","Makole_SI","Maribor_SI","Markovci_SI","Medvode_SI","Menges_SI","Metlika_SI","Mezica_SI","Miklavz na Dravskem Polju_SI","Miren-Kostanjevica_SI","Mirna Pec_SI","Mislinja_SI","Mokronog-Trebelno_SI","Moravce_SI","Mozirje_SI","Murska Sobota_SI","Muta_SI","Naklo_SI","Nazarje_SI","Nova Gorica_SI","Novo Mesto_SI","Odranci_SI","Oplotnica_SI","Ormoz_SI","Piran_SI","Pivka_SI","Podcetrtek_SI","Podlehnik_SI","Poljcane_SI","Polzela_SI","Postojna_SI","Prebold_SI","Preddvor_SI","Prevalje_SI","Ptuj_SI","Puconci_SI","Race-Fram_SI","Radece_SI","Radenci_SI","Radlje ob Dravi_SI","Radovljica_SI","Ravne na Koroskem_SI","Razkrizje_SI","Recica ob Savinji_SI","Rence-Vogrsko_SI","Ribnica_SI","Rogaska Slatina_SI","Rogasovci_SI","Ruse_SI","Salovci_SI","Semic_SI","Sempeter-Vrtojba_SI","Sencur_SI","Sentilj_SI","Sentjernej_SI","Sentjur_SI","Sentrupert_SI","Sevnica_SI","Sezana_SI","Skocjan_SI","Skofja Loka_SI","Skofljica_SI","Slovenj Gradec_SI","Slovenska Bistrica_SI","Slovenske Konjice_SI","Smarje pri Jelsah_SI","Smarjeske Toplice_SI","Smartno ob Paki_SI","Smartno pri Litiji_SI","Sodrazica_SI","Solcava_SI","Sostanj_SI","Starse_SI","Store_SI","Straza_SI","Sveta Trojica v Slovenskih Goricah_SI","Sveti Andraz v Slovenskih Goricah_SI","Sveti Jurij_SI","Sveti Jurij v Slovenskih Goricah_SI","Sveti Tomaz_SI","Tabor_SI","Tisina_SI","Tolmin_SI","Trbovlje_SI","Trebnje_SI","Trnovska Vas_SI","Trzic_SI","Trzin_SI","Turnisce_SI","Velenje_SI","Velika Polana_SI","Velike Lasce_SI","Verzej_SI","Videm_SI","Vipava_SI","Vitanje_SI","Vodice_SI","Vojnik_SI","Vransko_SI","Vrhnika_SI","Vuzenica_SI","Zagorje ob Savi_SI","Zalec_SI","Zavrc_SI","Zelezniki_SI","Zetale_SI","Ziri_SI","Zrece_SI","Zuzemberk_SI"],Mr=["Svalbard and Jan Mayen_SJ"],Ar=["Banskobystricky kraj_SK","Bratislavsky kraj_SK","Kosicky kraj_SK","Nitriansky kraj_SK","Presovsky kraj_SK","Trenciansky kraj_SK","Trnavsky kraj_SK","Zilinsky kraj_SK"],Tr=["Eastern_SL","Northern_SL","Southern_SL","Western Area_SL"],fr=["Acquaviva_SM","Borgo Maggiore_SM","Chiesanuova_SM","Domagnano_SM","Faetano_SM","Fiorentino_SM","Montegiardino_SM","San Marino_SM","Serravalle_SM"],yr=["Dakar_SN","Diourbel_SN","Fatick_SN","Kaffrine_SN","Kaolack_SN","Kedougou_SN","Kolda_SN","Louga_SN","Matam_SN","Saint-Louis_SN","Sedhiou_SN","Tambacounda_SN","Thies_SN","Ziguinchor_SN"],pr=["Awdal_SO","Bakool_SO","Banaadir_SO","Bari_SO","Bay_SO","Galguduud_SO","Gedo_SO","Hiiraan_SO","Jubbada Dhexe_SO","Jubbada Hoose_SO","Mudug_SO","Nugaal_SO","Sanaag_SO","Shabeellaha Dhexe_SO","Shabeellaha Hoose_SO","Sool_SO","Togdheer_SO","Woqooyi Galbeed_SO"],vr=["Brokopondo_SR","Commewijne_SR","Coronie_SR","Marowijne_SR","Nickerie_SR","Para_SR","Paramaribo_SR","Saramacca_SR","Sipaliwini_SR","Wanica_SR"],kr=["Central Equatoria_SS","Eastern Equatoria_SS","Jonglei_SS","Lakes_SS","Northern Bahr el Ghazal_SS","Unity_SS","Upper Nile_SS","Warrap_SS","Western Bahr el Ghazal_SS","Western Equatoria_SS"],Rr=["Principe_ST","Sao Tome_ST"],br=["Ahuachapan_SV","Cabanas_SV","Chalatenango_SV","Cuscatlan_SV","La Libertad_SV","La Paz_SV","La Union_SV","Morazan_SV","San Miguel_SV","San Salvador_SV","San Vicente_SV","Santa Ana_SV","Sonsonate_SV","Usulutan_SV"],Pr=["Sint Maarten (Dutch Part)_SX"],Br=["Al Hasakah_SY","Al Ladhiqiyah_SY","Al Qunaytirah_SY","Ar Raqqah_SY","As Suwayda'_SY","Dar'a_SY","Dayr az Zawr_SY","Dimashq_SY","Halab_SY","Hamah_SY","Hims_SY","Idlib_SY","Rif Dimashq_SY","Tartus_SY"],Ir=["Hhohho_SZ","Lubombo_SZ","Manzini_SZ","Shiselweni_SZ"],Nr=["Turks and Caicos Islands_TC"],Er=["Bahr el Gazel_TD","Batha_TD","Borkou_TD","Chari-Baguirmi_TD","Guera_TD","Hadjer Lamis_TD","Kanem_TD","Lac_TD","Logone-Occidental_TD","Logone-Oriental_TD","Mandoul_TD","Mayo-Kebbi-Est_TD","Mayo-Kebbi-Ouest_TD","Moyen-Chari_TD","Ouaddai_TD","Salamat_TD","Sila_TD","Tandjile_TD","Tibesti_TD","Ville de Ndjamena_TD","Wadi Fira_TD"],Gr=["French Southern Territories_TF"],xr=["Centrale_TG","Kara_TG","Maritime_TG","Plateaux_TG","Savanes_TG"],Kr=["Amnat Charoen_TH","Ang Thong_TH","Bueng Kan_TH","Buri Ram_TH","Chachoengsao_TH","Chai Nat_TH","Chaiyaphum_TH","Chanthaburi_TH","Chiang Mai_TH","Chiang Rai_TH","Chon Buri_TH","Chumphon_TH","Kalasin_TH","Kamphaeng Phet_TH","Kanchanaburi_TH","Khon Kaen_TH","Krabi_TH","Krung Thep Maha Nakhon_TH","Lampang_TH","Lamphun_TH","Loei_TH","Lop Buri_TH","Mae Hong Son_TH","Maha Sarakham_TH","Mukdahan_TH","Nakhon Nayok_TH","Nakhon Pathom_TH","Nakhon Phanom_TH","Nakhon Ratchasima_TH","Nakhon Sawan_TH","Nakhon Si Thammarat_TH","Nan_TH","Narathiwat_TH","Nong Bua Lam Phu_TH","Nong Khai_TH","Nonthaburi_TH","Pathum Thani_TH","Pattani_TH","Phangnga_TH","Phatthalung_TH","Phayao_TH","Phetchabun_TH","Phetchaburi_TH","Phichit_TH","Phitsanulok_TH","Phra Nakhon Si Ayutthaya_TH","Phrae_TH","Phuket_TH","Prachin Buri_TH","Prachuap Khiri Khan_TH","Ranong_TH","Ratchaburi_TH","Rayong_TH","Roi Et_TH","Sa Kaeo_TH","Sakon Nakhon_TH","Samut Prakan_TH","Samut Sakhon_TH","Samut Songkhram_TH","Saraburi_TH","Satun_TH","Si Sa Ket_TH","Sing Buri_TH","Songkhla_TH","Sukhothai_TH","Suphan Buri_TH","Surat Thani_TH","Surin_TH","Tak_TH","Trang_TH","Trat_TH","Ubon Ratchathani_TH","Udon Thani_TH","Uthai Thani_TH","Uttaradit_TH","Yala_TH","Yasothon_TH"],Ur=["Dushanbe_TJ","Khatlon_TJ","Kuhistoni Badakhshon_TJ","Nohiyahoi Tobei Jumhuri_TJ","Sughd_TJ"],Dr=["Tokelau_TK"],Lr=["Aileu_TL","Ainaro_TL","Baucau_TL","Bobonaro_TL","Cova Lima_TL","Dili_TL","Ermera_TL","Lautem_TL","Liquica_TL","Manatuto_TL","Manufahi_TL","Oecussi_TL","Viqueque_TL"],Hr=["Ahal_TM","Balkan_TM","Dasoguz_TM","Lebap_TM","Mary_TM"],wr=["Beja_TN","Ben Arous_TN","Bizerte_TN","Gabes_TN","Gafsa_TN","Jendouba_TN","Kairouan_TN","Kasserine_TN","Kebili_TN","L'Ariana_TN","La Manouba_TN","Le Kef_TN","Mahdia_TN","Medenine_TN","Monastir_TN","Nabeul_TN","Sfax_TN","Sidi Bouzid_TN","Siliana_TN","Sousse_TN","Tataouine_TN","Tozeur_TN","Tunis_TN","Zaghouan_TN"],Vr=["'Eua_TO","Ha'apai_TO","Niuas_TO","Tongatapu_TO","Vava'u_TO"],Or=["Adana_TR","Adiyaman_TR","Afyonkarahisar_TR","Agri_TR","Aksaray_TR","Amasya_TR","Ankara_TR","Antalya_TR","Ardahan_TR","Artvin_TR","Aydin_TR","Balikesir_TR","Bartin_TR","Batman_TR","Bayburt_TR","Bilecik_TR","Bingol_TR","Bitlis_TR","Bolu_TR","Burdur_TR","Bursa_TR","Canakkale_TR","Cankiri_TR","Corum_TR","Denizli_TR","Diyarbakir_TR","Duzce_TR","Edirne_TR","Elazig_TR","Erzincan_TR","Erzurum_TR","Eskisehir_TR","Gaziantep_TR","Giresun_TR","Gumushane_TR","Hakkari_TR","Hatay_TR","Igdir_TR","Isparta_TR","Istanbul_TR","Izmir_TR","Kahramanmaras_TR","Karabuk_TR","Karaman_TR","Kars_TR","Kastamonu_TR","Kayseri_TR","Kilis_TR","Kirikkale_TR","Kirklareli_TR","Kirsehir_TR","Kocaeli_TR","Konya_TR","Kutahya_TR","Malatya_TR","Manisa_TR","Mardin_TR","Mersin_TR","Mugla_TR","Mus_TR","Nevsehir_TR","Nigde_TR","Ordu_TR","Osmaniye_TR","Rize_TR","Sakarya_TR","Samsun_TR","Sanliurfa_TR","Siirt_TR","Sinop_TR","Sirnak_TR","Sivas_TR","Tekirdag_TR","Tokat_TR","Trabzon_TR","Tunceli_TR","Usak_TR","Van_TR","Yalova_TR","Yozgat_TR","Zonguldak_TR"],Fr=["Arima_TT","Chaguanas_TT","Couva-Tabaquite-Talparo_TT","Diego Martin_TT","Mayaro-Rio Claro_TT","Penal-Debe_TT","Point Fortin_TT","Port of Spain_TT","Princes Town_TT","San Fernando_TT","San Juan-Laventille_TT","Sangre Grande_TT","Siparia_TT","Tobago_TT","Tunapuna-Piarco_TT"],Zr=["Funafuti_TV","Nanumaga_TV","Nanumea_TV","Niutao_TV","Nui_TV","Nukufetau_TV","Nukulaelae_TV","Vaitupu_TV"],jr=["Changhua_TW","Chiayi_TW","Hsinchu_TW","Hualien_TW","Kaohsiung_TW","Keelung_TW","Kinmen_TW","Lienchiang_TW","Miaoli_TW","Nantou_TW","New Taipei_TW","Penghu_TW","Pingtung_TW","Taichung_TW","Tainan_TW","Taipei_TW","Taitung_TW","Taoyuan_TW","Yilan_TW","Yunlin_TW"],zr=["Arusha_TZ","Dar es Salaam_TZ","Dodoma_TZ","Geita_TZ","Iringa_TZ","Kagera_TZ","Kaskazini Pemba_TZ","Kaskazini Unguja_TZ","Katavi_TZ","Kigoma_TZ","Kilimanjaro_TZ","Kusini Pemba_TZ","Kusini Unguja_TZ","Lindi_TZ","Manyara_TZ","Mara_TZ","Mbeya_TZ","Mjini Magharibi_TZ","Morogoro_TZ","Mtwara_TZ","Mwanza_TZ","Njombe_TZ","Pwani_TZ","Rukwa_TZ","Ruvuma_TZ","Shinyanga_TZ","Simiyu_TZ","Singida_TZ","Tabora_TZ","Tanga_TZ"],Jr=["Avtonomna Respublika Krym_UA","Cherkaska oblast_UA","Chernihivska oblast_UA","Chernivetska oblast_UA","Dnipropetrovska oblast_UA","Donetska oblast_UA","Ivano-Frankivska oblast_UA","Kharkivska oblast_UA","Khersonska oblast_UA","Khmelnytska oblast_UA","Kirovohradska oblast_UA","Kyiv_UA","Kyivska oblast_UA","Luhanska oblast_UA","Lvivska oblast_UA","Mykolaivska oblast_UA","Odeska oblast_UA","Poltavska oblast_UA","Rivnenska oblast_UA","Sevastopol_UA","Sumska oblast_UA","Ternopilska oblast_UA","Vinnytska oblast_UA","Volynska oblast_UA","Zakarpatska oblast_UA","Zaporizka oblast_UA","Zhytomyrska oblast_UA"],Yr=["Abim_UG","Adjumani_UG","Agago_UG","Alebtong_UG","Amolatar_UG","Amudat_UG","Amuria_UG","Amuru_UG","Apac_UG","Arua_UG","Budaka_UG","Bududa_UG","Bugiri_UG","Buhweju_UG","Buikwe_UG","Bukedea_UG","Bukomansibi_UG","Bukwa_UG","Bulambuli_UG","Buliisa_UG","Bundibugyo_UG","Bushenyi_UG","Busia_UG","Butaleja_UG","Buvuma_UG","Buyende_UG","Dokolo_UG","Gomba_UG","Gulu_UG","Hoima_UG","Ibanda_UG","Iganga_UG","Isingiro_UG","Jinja_UG","Kaabong_UG","Kabale_UG","Kabarole_UG","Kaberamaido_UG","Kalangala_UG","Kaliro_UG","Kalungu_UG","Kampala_UG","Kamuli_UG","Kamwenge_UG","Kanungu_UG","Kapchorwa_UG","Kasese_UG","Katakwi_UG","Kayunga_UG","Kibaale_UG","Kiboga_UG","Kibuku_UG","Kiruhura_UG","Kiryandongo_UG","Kisoro_UG","Kitgum_UG","Koboko_UG","Kole_UG","Kotido_UG","Kumi_UG","Kween_UG","Kyankwanzi_UG","Kyegegwa_UG","Kyenjojo_UG","Lamwo_UG","Lira_UG","Luuka_UG","Luwero_UG","Lwengo_UG","Lyantonde_UG","Manafwa_UG","Maracha_UG","Masaka_UG","Masindi_UG","Mayuge_UG","Mbale_UG","Mbarara_UG","Mitooma_UG","Mityana_UG","Moroto_UG","Moyo_UG","Mpigi_UG","Mubende_UG","Mukono_UG","Nakapiripirit_UG","Nakaseke_UG","Nakasongola_UG","Namayingo_UG","Namutumba_UG","Napak_UG","Nebbi_UG","Ngora_UG","Ntoroko_UG","Ntungamo_UG","Nwoya_UG","Otuke_UG","Oyam_UG","Pader_UG","Pallisa_UG","Rakai_UG","Rubirizi_UG","Rukungiri_UG","Sembabule_UG","Serere_UG","Sheema_UG","Sironko_UG","Soroti_UG","Tororo_UG","Wakiso_UG","Yumbe_UG","Zombo_UG"],Wr=["Baker Island_UM","Howland Island_UM","Jarvis Island_UM","Palmyra Atoll_UM"],qr=["Alabama_US","Alaska_US","Arizona_US","Arkansas_US","California_US","Colorado_US","Connecticut_US","Delaware_US","District of Columbia_US","Florida_US","Georgia_US","Hawaii_US","Idaho_US","Illinois_US","Indiana_US","Iowa_US","Kansas_US","Kentucky_US","Louisiana_US","Maine_US","Maryland_US","Massachusetts_US","Michigan_US","Minnesota_US","Mississippi_US","Missouri_US","Montana_US","Nebraska_US","Nevada_US","New Hampshire_US","New Jersey_US","New Mexico_US","New York_US","North Carolina_US","North Dakota_US","Ohio_US","Oklahoma_US","Oregon_US","Pennsylvania_US","Rhode Island_US","South Carolina_US","South Dakota_US","Tennessee_US","Texas_US","Utah_US","Vermont_US","Virginia_US","Washington_US","West Virginia_US","Wisconsin_US","Wyoming_US"],Qr=["Artigas_UY","Canelones_UY","Cerro Largo_UY","Colonia_UY","Durazno_UY","Flores_UY","Florida_UY","Lavalleja_UY","Maldonado_UY","Montevideo_UY","Paysandu_UY","Rio Negro_UY","Rivera_UY","Rocha_UY","Salto_UY","San Jose_UY","Soriano_UY","Tacuarembo_UY","Treinta y Tres_UY"],Xr=["Andijon_UZ","Buxoro_UZ","Farg'ona_UZ","Jizzax_UZ","Namangan_UZ","Navoiy_UZ","Qashqadaryo_UZ","Qoraqalpog'iston Respublikasi_UZ","Samarqand_UZ","Sirdaryo_UZ","Surxondaryo_UZ","Toshkent_UZ","Xorazm_UZ"],$r=["Vatican City_VA"],es=["Charlotte_VC","Grenadines_VC","Saint David_VC","Saint George_VC","Saint Patrick_VC"],as=["Amazonas_VE","Anzoategui_VE","Apure_VE","Aragua_VE","Barinas_VE","Bolivar_VE","Carabobo_VE","Cojedes_VE","Delta Amacuro_VE","Dependencias Federales_VE","Distrito Capital_VE","Falcon_VE","Guarico_VE","Lara_VE","Merida_VE","Miranda_VE","Monagas_VE","Nueva Esparta_VE","Portuguesa_VE","Sucre_VE","Tachira_VE","Trujillo_VE","Vargas_VE","Yaracuy_VE","Zulia_VE"],ts=["Virgin Islands, British_VG"],ns=["Virgin Islands, U.S._VI"],is=["An Giang_VN","Ba Ria - Vung Tau_VN","Bac Giang_VN","Bac Kan_VN","Bac Lieu_VN","Bac Ninh_VN","Ben Tre_VN","Binh Dinh_VN","Binh Duong_VN","Binh Phuoc_VN","Binh Thuan_VN","Ca Mau_VN","Can Tho_VN","Cao Bang_VN","Da Nang_VN","Dak Lak_VN","Dak Nong_VN","Dien Bien_VN","Dong Nai_VN","Dong Thap_VN","Gia Lai_VN","Ha Giang_VN","Ha Nam_VN","Ha Noi_VN","Ha Tinh_VN","Hai Duong_VN","Hai Phong_VN","Ho Chi Minh_VN","Hoa Binh_VN","Hung Yen_VN","Khanh Hoa_VN","Kien Giang_VN","Kon Tum_VN","Lai Chau_VN","Lam Dong_VN","Lang Son_VN","Lao Cai_VN","Long An_VN","Nam Dinh_VN","Nghe An_VN","Ninh Binh_VN","Ninh Thuan_VN","Phu Tho_VN","Phu Yen_VN","Quang Binh_VN","Quang Nam_VN","Quang Ngai_VN","Quang Ninh_VN","Quang Tri_VN","Soc Trang_VN","Son La_VN","Tay Ninh_VN","Thai Binh_VN","Thai Nguyen_VN","Thanh Hoa_VN","Thua Thien-Hue_VN","Tien Giang_VN","Tra Vinh_VN","Tuyen Quang_VN","Vinh Long_VN","Vinh Phuc_VN","Yen Bai_VN"],_s=["Malampa_VU","Penama_VU","Sanma_VU","Shefa_VU","Tafea_VU","Torba_VU"],os=["Alo_WF","Sigave_WF","Uvea_WF"],rs=["A'ana_WS","Aiga-i-le-Tai_WS","Atua_WS","Fa'asaleleaga_WS","Gagaifomauga_WS","Palauli_WS","Satupa'itea_WS","Tuamasaga_WS","Va'a-o-Fonoti_WS","Vaisigano_WS"],ss=["'Adan_YE","'Amran_YE","Abyan_YE","Ad Dali'_YE","Al Bayda'_YE","Al Hudaydah_YE","Al Jawf_YE","Al Mahrah_YE","Al Mahwit_YE","Amanat al 'Asimah_YE","Dhamar_YE","Hadramawt_YE","Hajjah_YE","Ibb_YE","Lahij_YE","Ma'rib_YE","Raymah_YE","Sa'dah_YE","San'a'_YE","Shabwah_YE","Ta'izz_YE"],ls=["Acoua_YT","Bandraboua_YT","Bandrele_YT","Boueni_YT","Chiconi_YT","Chirongui_YT","Dzaoudzi_YT","Kani-Keli_YT","Koungou_YT","Mamoudzou_YT","Mtsamboro_YT","Ouangani_YT","Pamandzi_YT","Sada_YT","Tsingoni_YT"],us=["Eastern Cape_ZA","Free State_ZA","Gauteng_ZA","Kwazulu-Natal_ZA","Limpopo_ZA","Mpumalanga_ZA","North-West_ZA","Northern Cape_ZA","Western Cape_ZA"],gs=["Central_ZM","Copperbelt_ZM","Eastern_ZM","Luapula_ZM","Lusaka_ZM","North-Western_ZM","Northern_ZM","Southern_ZM","Western_ZM"],hs=["Bulawayo_ZW","Harare_ZW","Manicaland_ZW","Mashonaland Central_ZW","Mashonaland East_ZW","Mashonaland West_ZW","Masvingo_ZW","Matabeleland North_ZW","Matabeleland South_ZW","Midlands_ZW"],cs=[Kn.length,Un.length,Dn.length,Ln.length,Hn.length,wn.length,Vn.length,On.length,Fn.length,Zn.length,jn.length,zn.length,Jn.length,Yn.length,Wn.length,qn.length,Qn.length,Xn.length,$n.length,ei.length,ai.length,ti.length,ni.length,ii.length,_i.length,oi.length,ri.length,si.length,li.length,ui.length,gi.length,hi.length,ci.length,di.length,Si.length,mi.length,Ci.length,Mi.length,Ai.length,Ti.length,fi.length,yi.length,pi.length,vi.length,ki.length,Ri.length,bi.length,Pi.length,Bi.length,Ii.length,Ni.length,Ei.length,Gi.length,xi.length,Ki.length,Ui.length,Di.length,Li.length,Hi.length,wi.length,Vi.length,Oi.length,Fi.length,Zi.length,ji.length,zi.length,Ji.length,Yi.length,Wi.length,qi.length,Qi.length,Xi.length,$i.length,e_.length,a_.length,t_.length,n_.length,i_.length,__.length,o_.length,r_.length,s_.length,l_.length,u_.length,g_.length,h_.length,c_.length,d_.length,S_.length,m_.length,C_.length,M_.length,A_.length,T_.length,f_.length,y_.length,p_.length,v_.length,k_.length,R_.length,b_.length,P_.length,B_.length,I_.length,N_.length,E_.length,G_.length,x_.length,K_.length,U_.length,D_.length,L_.length,H_.length,w_.length,V_.length,O_.length,F_.length,Z_.length,j_.length,z_.length,J_.length,Y_.length,W_.length,q_.length,Q_.length,X_.length,$_.length,eo.length,ao.length,to.length,no.length,io.length,_o.length,oo.length,ro.length,so.length,lo.length,uo.length,go.length,ho.length,co.length,So.length,mo.length,Co.length,Mo.length,Ao.length,To.length,fo.length,yo.length,po.length,vo.length,ko.length,Ro.length,bo.length,Po.length,Bo.length,Io.length,No.length,Eo.length,Go.length,xo.length,Ko.length,Uo.length,Do.length,Lo.length,Ho.length,wo.length,Vo.length,Oo.length,Fo.length,Zo.length,jo.length,zo.length,Jo.length,Yo.length,Wo.length,qo.length,Qo.length,Xo.length,$o.length,er.length,ar.length,tr.length,nr.length,ir.length,_r.length,or.length,rr.length,sr.length,lr.length,ur.length,gr.length,hr.length,cr.length,dr.length,Sr.length,mr.length,Cr.length,Mr.length,Ar.length,Tr.length,fr.length,yr.length,pr.length,vr.length,kr.length,Rr.length,br.length,Pr.length,Br.length,Ir.length,Nr.length,Er.length,Gr.length,xr.length,Kr.length,Ur.length,Dr.length,Lr.length,Hr.length,wr.length,Vr.length,Or.length,Fr.length,Zr.length,jr.length,zr.length,Jr.length,Yr.length,Wr.length,qr.length,Qr.length,Xr.length,$r.length,es.length,as.length,ts.length,ns.length,is.length,_s.length,os.length,rs.length,ss.length,ls.length,us.length,gs.length,hs.length],ds=Math.max.apply(Math,cs),Ss=[],ms=[],Cs=[],Ms=[],As=[],Ts=[],fs=[],ys=[],ps=[],vs=[],ks=[],Rs=[],bs=[],Ps=[],Bs=[],Is=[],Ns=[],Es=[],Gs=[],xs=[],Ks=[],Us=[],Ds=[],Ls=[],Hs=[],ws=[],Vs=[],Os=[],Fs=[],Zs=[],js=[],zs=[],Js=[],Ys=[],Ws=[],qs=[],Qs=[],Xs=[],$s=[],el=[],al=[],tl=[],nl=[],il=[],_l=[],ol=[],rl=[],sl=[],ll=[],ul=[],gl=[],hl=[],cl=[],dl=[],Sl=[],ml=[],Cl=[],Ml=[],Al=[],Tl=[],fl=[],yl=[],pl=[],vl=[],kl=[],Rl=[],bl=[],Pl=[],Bl=[],Il=[],Nl=[],El=[],Gl=[],xl=[],Kl=[],Ul=[],Dl=[],Ll=[],Hl=[],wl=[],Vl=[],Ol=[],Fl=[],Zl=[],jl=[],zl=[],Jl=[],Yl=[],Wl=[],ql=[],Ql=[],Xl=[],$l=[],eu=[],au=[],tu=[],nu=[],iu=[],_u=[],ou=[],ru=[],su=[],lu=[],uu=[],gu=[],hu=[],cu=[],du=[],Su=[],mu=[],Cu=[],Mu=[],Au=[],Tu=[],fu=[],yu=[],pu=[],vu=[],ku=[],Ru=[],bu=[],Pu=[],Bu=[],Iu=[],Nu=[],Eu=[],Gu=[],xu=[],Ku=[],Uu=[],Du=[],Lu=[],Hu=[],wu=[],Vu=[],Ou=[],Fu=[],Zu=[],ju=[],zu=[],Ju=[],Yu=[],Wu=[],qu=[],Qu=[],Xu=[],$u=[],eg=[],ag=[],tg=[],ng=[],ig=[],_g=[],og=[],rg=[],sg=[],lg=[],ug=[],gg=[],hg=[],cg=[],dg=[],Sg=[],mg=[],Cg=[],Mg=[],Ag=[],Tg=[],fg=[],yg=[],pg=[],vg=[],kg=[],Rg=[],bg=[],Pg=[],Bg=[],Ig=[],Ng=[],Eg=[],Gg=[],xg=[],Kg=[],Ug=[],Dg=[],Lg=[],Hg=[],wg=[],Vg=[],Og=[],Fg=[],Zg=[],jg=[],zg=[],Jg=[],Yg=[],Wg=[],qg=[],Qg=[],Xg=[],$g=[],eh=[],ah=[],th=[],nh=[],ih=[],_h=[],oh=[],rh=[],sh=[],lh=[],uh=[],gh=[],hh=[],ch=[],dh=[],Sh=[],mh=[],Ch=[],Mh=[],Ah=[],Th=[],fh=[],yh=[],ph=[],vh=[],kh=[],Rh=[],bh=[],Ph=[],Bh=[],Ih=[],Nh=[],Eh=[],Gh=[],xh=[],Kh=[],Uh=[],Dh=[],Lh=[],Hh=[],wh=[],Vh=[],Oh=[],Fh=[],Zh=[],jh=[],zh=0;zh<ds;zh++)Ss+=t.gettext(Kn[zh])+"|",ms+=t.gettext(Un[zh])+"|",Cs+=t.gettext(Dn[zh])+"|",Ms+=t.gettext(Ln[zh])+"|",As+=t.gettext(Hn[zh])+"|",Ts+=t.gettext(wn[zh])+"|",fs+=t.gettext(Vn[zh])+"|",ys+=t.gettext(On[zh])+"|",ps+=t.gettext(Fn[zh])+"|",vs+=t.gettext(Zn[zh])+"|",ks+=t.gettext(jn[zh])+"|",Rs+=t.gettext(zn[zh])+"|",bs+=t.gettext(Jn[zh])+"|",Ps+=t.gettext(Yn[zh])+"|",Bs+=t.gettext(Wn[zh])+"|",Is+=t.gettext(qn[zh])+"|",Ns+=t.gettext(Qn[zh])+"|",Es+=t.gettext(Xn[zh])+"|",Gs+=t.gettext($n[zh])+"|",xs+=t.gettext(ei[zh])+"|",Ks+=t.gettext(ai[zh])+"|",Us+=t.gettext(ti[zh])+"|",Ds+=t.gettext(ni[zh])+"|",Ls+=t.gettext(ii[zh])+"|",Hs+=t.gettext(_i[zh])+"|",ws+=t.gettext(oi[zh])+"|",Vs+=t.gettext(ri[zh])+"|",Os+=t.gettext(si[zh])+"|",Fs+=t.gettext(li[zh])+"|",Zs+=t.gettext(ui[zh])+"|",js+=t.gettext(gi[zh])+"|",zs+=t.gettext(hi[zh])+"|",Js+=t.gettext(ci[zh])+"|",Ys+=t.gettext(di[zh])+"|",Ws+=t.gettext(Si[zh])+"|",qs+=t.gettext(mi[zh])+"|",Qs+=t.gettext(Ci[zh])+"|",Xs+=t.gettext(Mi[zh])+"|",$s+=t.gettext(Ai[zh])+"|",el+=t.gettext(Ti[zh])+"|",al+=t.gettext(fi[zh])+"|",tl+=t.gettext(yi[zh])+"|",nl+=t.gettext(pi[zh])+"|",il+=t.gettext(vi[zh])+"|",_l+=t.gettext(ki[zh])+"|",ol+=t.gettext(Ri[zh])+"|",rl+=t.gettext(bi[zh])+"|",sl+=t.gettext(Pi[zh])+"|",ll+=t.gettext(Bi[zh])+"|",ul+=t.gettext(Ii[zh])+"|",gl+=t.gettext(Ni[zh])+"|",hl+=t.gettext(Ei[zh])+"|",cl+=t.gettext(Gi[zh])+"|",dl+=t.gettext(xi[zh])+"|",Sl+=t.gettext(Ki[zh])+"|",ml+=t.gettext(Ui[zh])+"|",Cl+=t.gettext(Di[zh])+"|",Ml+=t.gettext(Li[zh])+"|",Al+=t.gettext(Hi[zh])+"|",Tl+=t.gettext(wi[zh])+"|",fl+=t.gettext(Vi[zh])+"|",yl+=t.gettext(Oi[zh])+"|",pl+=t.gettext(Fi[zh])+"|",vl+=t.gettext(Zi[zh])+"|",kl+=t.gettext(ji[zh])+"|",Rl+=t.gettext(zi[zh])+"|",bl+=t.gettext(Ji[zh])+"|",Pl+=t.gettext(Yi[zh])+"|",Bl+=t.gettext(Wi[zh])+"|",Il+=t.gettext(qi[zh])+"|",Nl+=t.gettext(Qi[zh])+"|",El+=t.gettext(Xi[zh])+"|",Gl+=t.gettext($i[zh])+"|",xl+=t.gettext(e_[zh])+"|",Kl+=t.gettext(a_[zh])+"|",Ul+=t.gettext(t_[zh])+"|",Dl+=t.gettext(n_[zh])+"|",Ll+=t.gettext(i_[zh])+"|",Hl+=t.gettext(__[zh])+"|",wl+=t.gettext(o_[zh])+"|",Vl+=t.gettext(r_[zh])+"|",Ol+=t.gettext(s_[zh])+"|",Fl+=t.gettext(l_[zh])+"|",Zl+=t.gettext(u_[zh])+"|",jl+=t.gettext(g_[zh])+"|",zl+=t.gettext(h_[zh])+"|",Jl+=t.gettext(c_[zh])+"|",Yl+=t.gettext(d_[zh])+"|",Wl+=t.gettext(S_[zh])+"|",ql+=t.gettext(m_[zh])+"|",Ql+=t.gettext(C_[zh])+"|",Xl+=t.gettext(M_[zh])+"|",$l+=t.gettext(A_[zh])+"|",eu+=t.gettext(T_[zh])+"|",au+=t.gettext(f_[zh])+"|",tu+=t.gettext(y_[zh])+"|",nu+=t.gettext(p_[zh])+"|",iu+=t.gettext(v_[zh])+"|",_u+=t.gettext(k_[zh])+"|",ou+=t.gettext(R_[zh])+"|",ru+=t.gettext(b_[zh])+"|",su+=t.gettext(P_[zh])+"|",lu+=t.gettext(B_[zh])+"|",uu+=t.gettext(I_[zh])+"|",gu+=t.gettext(N_[zh])+"|",hu+=t.gettext(E_[zh])+"|",cu+=t.gettext(G_[zh])+"|",du+=t.gettext(x_[zh])+"|",Su+=t.gettext(K_[zh])+"|",mu+=t.gettext(U_[zh])+"|",Cu+=t.gettext(D_[zh])+"|",Mu+=t.gettext(L_[zh])+"|",Au+=t.gettext(H_[zh])+"|",Tu+=t.gettext(w_[zh])+"|",fu+=t.gettext(V_[zh])+"|",yu+=t.gettext(O_[zh])+"|",pu+=t.gettext(F_[zh])+"|",vu+=t.gettext(Z_[zh])+"|",ku+=t.gettext(j_[zh])+"|",Ru+=t.gettext(z_[zh])+"|",bu+=t.gettext(J_[zh])+"|",Pu+=t.gettext(Y_[zh])+"|",Bu+=t.gettext(W_[zh])+"|",Iu+=t.gettext(q_[zh])+"|",Nu+=t.gettext(Q_[zh])+"|",Eu+=t.gettext(X_[zh])+"|",Gu+=t.gettext($_[zh])+"|",xu+=t.gettext(eo[zh])+"|",Ku+=t.gettext(ao[zh])+"|",Uu+=t.gettext(to[zh])+"|",Du+=t.gettext(no[zh])+"|",Lu+=t.gettext(io[zh])+"|",Hu+=t.gettext(_o[zh])+"|",wu+=t.gettext(oo[zh])+"|",Vu+=t.gettext(ro[zh])+"|",Ou+=t.gettext(so[zh])+"|",Fu+=t.gettext(lo[zh])+"|",Zu+=t.gettext(uo[zh])+"|",ju+=t.gettext(go[zh])+"|",zu+=t.gettext(ho[zh])+"|",Ju+=t.gettext(co[zh])+"|",Yu+=t.gettext(So[zh])+"|",Wu+=t.gettext(mo[zh])+"|",qu+=t.gettext(Co[zh])+"|",Qu+=t.gettext(Mo[zh])+"|",Xu+=t.gettext(Ao[zh])+"|",$u+=t.gettext(To[zh])+"|",eg+=t.gettext(fo[zh])+"|",ag+=t.gettext(yo[zh])+"|",tg+=t.gettext(po[zh])+"|",ng+=t.gettext(vo[zh])+"|",ig+=t.gettext(ko[zh])+"|",_g+=t.gettext(Ro[zh])+"|",og+=t.gettext(bo[zh])+"|",rg+=t.gettext(Po[zh])+"|",sg+=t.gettext(Bo[zh])+"|",lg+=t.gettext(Io[zh])+"|",ug+=t.gettext(No[zh])+"|",gg+=t.gettext(Eo[zh])+"|",hg+=t.gettext(Go[zh])+"|",cg+=t.gettext(xo[zh])+"|",dg+=t.gettext(Ko[zh])+"|",Sg+=t.gettext(Uo[zh])+"|",mg+=t.gettext(Do[zh])+"|",Cg+=t.gettext(Lo[zh])+"|",Mg+=t.gettext(Ho[zh])+"|",Ag+=t.gettext(wo[zh])+"|",Tg+=t.gettext(Vo[zh])+"|",fg+=t.gettext(Oo[zh])+"|",yg+=t.gettext(Fo[zh])+"|",pg+=t.gettext(Zo[zh])+"|",vg+=t.gettext(jo[zh])+"|",kg+=t.gettext(zo[zh])+"|",Rg+=t.gettext(Jo[zh])+"|",bg+=t.gettext(Yo[zh])+"|",Pg+=t.gettext(Wo[zh])+"|",Bg+=t.gettext(qo[zh])+"|",Ig+=t.gettext(Qo[zh])+"|",Ng+=t.gettext(Xo[zh])+"|",Eg+=t.gettext($o[zh])+"|",Gg+=t.gettext(er[zh])+"|",xg+=t.gettext(ar[zh])+"|",Kg+=t.gettext(tr[zh])+"|",Ug+=t.gettext(nr[zh])+"|",Dg+=t.gettext(ir[zh])+"|",Lg+=t.gettext(_r[zh])+"|",Hg+=t.gettext(or[zh])+"|",wg+=t.gettext(rr[zh])+"|",Vg+=t.gettext(sr[zh])+"|",Og+=t.gettext(lr[zh])+"|",Fg+=t.gettext(ur[zh])+"|",Zg+=t.gettext(gr[zh])+"|",jg+=t.gettext(hr[zh])+"|",zg+=t.gettext(cr[zh])+"|",Jg+=t.gettext(dr[zh])+"|",Yg+=t.gettext(Sr[zh])+"|",Wg+=t.gettext(mr[zh])+"|",qg+=t.gettext(Cr[zh])+"|",Qg+=t.gettext(Mr[zh])+"|",Xg+=t.gettext(Ar[zh])+"|",$g+=t.gettext(Tr[zh])+"|",eh+=t.gettext(fr[zh])+"|",ah+=t.gettext(yr[zh])+"|",th+=t.gettext(pr[zh])+"|",nh+=t.gettext(vr[zh])+"|",ih+=t.gettext(kr[zh])+"|",_h+=t.gettext(Rr[zh])+"|",oh+=t.gettext(br[zh])+"|",rh+=t.gettext(Pr[zh])+"|",sh+=t.gettext(Br[zh])+"|",lh+=t.gettext(Ir[zh])+"|",uh+=t.gettext(Nr[zh])+"|",gh+=t.gettext(Er[zh])+"|",hh+=t.gettext(Gr[zh])+"|",ch+=t.gettext(xr[zh])+"|",dh+=t.gettext(Kr[zh])+"|",Sh+=t.gettext(Ur[zh])+"|",mh+=t.gettext(Dr[zh])+"|",Ch+=t.gettext(Lr[zh])+"|",Mh+=t.gettext(Hr[zh])+"|",Ah+=t.gettext(wr[zh])+"|",Th+=t.gettext(Vr[zh])+"|",fh+=t.gettext(Or[zh])+"|",yh+=t.gettext(Fr[zh])+"|",ph+=t.gettext(Zr[zh])+"|",vh+=t.gettext(jr[zh])+"|",kh+=t.gettext(zr[zh])+"|",Rh+=t.gettext(Jr[zh])+"|",bh+=t.gettext(Yr[zh])+"|",Ph+=t.gettext(Wr[zh])+"|",Bh+=t.gettext(qr[zh])+"|",Ih+=t.gettext(Qr[zh])+"|",Nh+=t.gettext(Xr[zh])+"|",Eh+=t.gettext($r[zh])+"|",Gh+=t.gettext(es[zh])+"|",xh+=t.gettext(as[zh])+"|",Kh+=t.gettext(ts[zh])+"|",Uh+=t.gettext(ns[zh])+"|",Dh+=t.gettext(is[zh])+"|",Lh+=t.gettext(_s[zh])+"|",Hh+=t.gettext(os[zh])+"|",wh+=t.gettext(rs[zh])+"|",Vh+=t.gettext(ss[zh])+"|",Oh+=t.gettext(ls[zh])+"|",Fh+=t.gettext(us[zh])+"|",Zh+=t.gettext(gs[zh])+"|",jh+=t.gettext(hs[zh])+"|";var Jh=[["AF",_,Cs.slice(0,-(ds-Dn.length+1))],["AX",C,Bs.slice(0,-(ds-Wn.length+1))],["AL",s,Ts.slice(0,-(ds-wn.length+1))],["DZ",le,fl.slice(0,-(ds-Vi.length+1))],["AS",c,ks.slice(0,-(ds-jn.length+1))],["AD",n,Ss.slice(0,-(ds-Kn.length+1))],["AO",u,ys.slice(0,-(ds-On.length+1))],["AI",r,As.slice(0,-(ds-Hn.length+1))],["AQ",g,ps.slice(0,-(ds-Fn.length+1))],["AG",o,Ms.slice(0,-(ds-Ln.length+1))],["AR",h,vs.slice(0,-(ds-Zn.length+1))],["AM",l,fs.slice(0,-(ds-Vn.length+1))],["AW",m,Ps.slice(0,-(ds-Yn.length+1))],["AU",S,bs.slice(0,-(ds-Jn.length+1))],["AT",d,Rs.slice(0,-(ds-zn.length+1))],["AZ",M,Is.slice(0,-(ds-qn.length+1))],["BS",x,zs.slice(0,-(ds-hi.length+1))],["BH",k,Ds.slice(0,-(ds-ni.length+1))],["BD",f,Gs.slice(0,-(ds-$n.length+1))],["BB",T,Es.slice(0,-(ds-Xn.length+1))],["BY",D,Ws.slice(0,-(ds-Si.length+1))],["BE",y,xs.slice(0,-(ds-ei.length+1))],["BZ",L,qs.slice(0,-(ds-mi.length+1))],["BJ",b,Hs.slice(0,-(ds-_i.length+1))],["BM",B,Vs.slice(0,-(ds-ri.length+1))],["BT",K,Js.slice(0,-(ds-ci.length+1))],["BO",N,Fs.slice(0,-(ds-li.length+1))],["BQ",E,Zs.slice(0,-(ds-ui.length+1))],["BA",A,Ns.slice(0,-(ds-Qn.length+1))],["BW",U,Ys.slice(0,-(ds-di.length+1))],["BR",G,js.slice(0,-(ds-gi.length+1))],["IO",Xe,uu.slice(0,-(ds-I_.length+1))],["BN",I,Os.slice(0,-(ds-si.length+1))],["BG",v,Us.slice(0,-(ds-ti.length+1))],["BF",p,Ks.slice(0,-(ds-ai.length+1))],["BI",R,Ls.slice(0,-(ds-ii.length+1))],["CV",$,gl.slice(0,-(ds-Ni.length+1))],["KH",la,fu.slice(0,-(ds-V_.length+1))],["CM",Y,ol.slice(0,-(ds-Ri.length+1))],["CA",H,Qs.slice(0,-(ds-Ci.length+1))],["KY",ma,Pu.slice(0,-(ds-Y_.length+1))],["CF",O,el.slice(0,-(ds-Ti.length+1))],["TD",$t,gh.slice(0,-(ds-Er.length+1))],["CL",J,_l.slice(0,-(ds-ki.length+1))],["CN",W,rl.slice(0,-(ds-bi.length+1))],["CX",ae,cl.slice(0,-(ds-Gi.length+1))],["CC",w,Xs.slice(0,-(ds-Mi.length+1))],["CO",q,sl.slice(0,-(ds-Pi.length+1))],["KM",ga,pu.slice(0,-(ds-F_.length+1))],["CG",F,al.slice(0,-(ds-fi.length+1))],["CD",V,$s.slice(0,-(ds-Ai.length+1))],["CK",z,il.slice(0,-(ds-vi.length+1))],["CR",Q,ll.slice(0,-(ds-Bi.length+1))],["CI",j,nl.slice(0,-(ds-pi.length+1))],["HR",Ze,tu.slice(0,-(ds-y_.length+1))],["CU",X,ul.slice(0,-(ds-Ii.length+1))],["CW",ee,hl.slice(0,-(ds-Ei.length+1))],["CY",te,dl.slice(0,-(ds-xi.length+1))],["CZ",ne,Sl.slice(0,-(ds-Ki.length+1))],["DK",oe,Ml.slice(0,-(ds-Li.length+1))],["DJ",_e,Cl.slice(0,-(ds-Di.length+1))],["DM",re,Al.slice(0,-(ds-Hi.length+1))],["DO",se,Tl.slice(0,-(ds-wi.length+1))],["EC",ue,yl.slice(0,-(ds-Oi.length+1))],["EG",he,vl.slice(0,-(ds-Zi.length+1))],["SV",Yt,oh.slice(0,-(ds-br.length+1))],["GQ",Ke,Jl.slice(0,-(ds-c_.length+1))],["ER",de,Rl.slice(0,-(ds-zi.length+1))],["EE",ge,pl.slice(0,-(ds-Fi.length+1))],["ET",me,Pl.slice(0,-(ds-Yi.length+1))],["FK",Ae,Nl.slice(0,-(ds-Qi.length+1))],["FO",fe,Gl.slice(0,-(ds-$i.length+1))],["FJ",Me,Il.slice(0,-(ds-qi.length+1))],["FI",Ce,Bl.slice(0,-(ds-Wi.length+1))],["FR",ye,xl.slice(0,-(ds-e_.length+1))],["GF",be,Hl.slice(0,-(ds-__.length+1))],["PF",ct,kg.slice(0,-(ds-zo.length+1))],["TF",en,hh.slice(0,-(ds-Gr.length+1))],["GA",pe,Kl.slice(0,-(ds-a_.length+1))],["GM",Ee,Zl.slice(0,-(ds-u_.length+1))],["GE",Re,Ll.slice(0,-(ds-i_.length+1))],["DE",ie,ml.slice(0,-(ds-Ui.length+1))],["GH",Be,Vl.slice(0,-(ds-r_.length+1))],["GI",Ie,Ol.slice(0,-(ds-s_.length+1))],["GR",Ue,Yl.slice(0,-(ds-d_.length+1))],["GL",Ne,Fl.slice(0,-(ds-l_.length+1))],["GD",ke,Dl.slice(0,-(ds-n_.length+1))],["GP",xe,zl.slice(0,-(ds-h_.length+1))],["GU",He,Ql.slice(0,-(ds-C_.length+1))],["GT",Le,ql.slice(0,-(ds-m_.length+1))],["GG",Pe,wl.slice(0,-(ds-o_.length+1))],["GN",Ge,jl.slice(0,-(ds-g_.length+1))],["GW",we,Xl.slice(0,-(ds-M_.length+1))],["GY",Ve,$l.slice(0,-(ds-A_.length+1))],["HT",je,nu.slice(0,-(ds-p_.length+1))],["VA",fn,Eh.slice(0,-(ds-$r.length+1))],["HN",Fe,au.slice(0,-(ds-f_.length+1))],["HK",Oe,eu.slice(0,-(ds-T_.length+1))],["HU",ze,iu.slice(0,-(ds-v_.length+1))],["IS",aa,cu.slice(0,-(ds-G_.length+1))],["IN",Qe,lu.slice(0,-(ds-B_.length+1))],["ID",Je,_u.slice(0,-(ds-k_.length+1))],["IR",ea,hu.slice(0,-(ds-E_.length+1))],["IQ",$e,gu.slice(0,-(ds-N_.length+1))],["IE",Ye,ou.slice(0,-(ds-R_.length+1))],["IM",qe,su.slice(0,-(ds-P_.length+1))],["IL",We,ru.slice(0,-(ds-b_.length+1))],["IT",ta,du.slice(0,-(ds-x_.length+1))],["JM",ia,mu.slice(0,-(ds-U_.length+1))],["JP",oa,Mu.slice(0,-(ds-L_.length+1))],["JE",na,Su.slice(0,-(ds-K_.length+1))],["JO",_a,Cu.slice(0,-(ds-D_.length+1))],["KZ",Ca,Bu.slice(0,-(ds-W_.length+1))],["KE",ra,Au.slice(0,-(ds-H_.length+1))],["KI",ua,yu.slice(0,-(ds-O_.length+1))],["KP",ca,ku.slice(0,-(ds-j_.length+1))],["KR",da,Ru.slice(0,-(ds-z_.length+1))],["KW",Sa,bu.slice(0,-(ds-J_.length+1))],["KG",sa,Tu.slice(0,-(ds-w_.length+1))],["LA",Ma,Iu.slice(0,-(ds-q_.length+1))],["LV",ba,Hu.slice(0,-(ds-_o.length+1))],["LB",Aa,Nu.slice(0,-(ds-Q_.length+1))],["LS",va,Uu.slice(0,-(ds-to.length+1))],["LR",pa,Ku.slice(0,-(ds-ao.length+1))],["LY",Pa,wu.slice(0,-(ds-oo.length+1))],["LI",fa,Gu.slice(0,-(ds-$_.length+1))],["LT",ka,Du.slice(0,-(ds-no.length+1))],["LU",Ra,Lu.slice(0,-(ds-io.length+1))],["MO",wa,Xu.slice(0,-(ds-Ao.length+1))],["MK",Ua,Yu.slice(0,-(ds-So.length+1))],["MG",xa,zu.slice(0,-(ds-ho.length+1))],["MW",Ya,og.slice(0,-(ds-bo.length+1))],["MY",qa,sg.slice(0,-(ds-Bo.length+1))],["MV",Ja,_g.slice(0,-(ds-Ro.length+1))],["ML",Da,Wu.slice(0,-(ds-mo.length+1))],["MT",ja,ng.slice(0,-(ds-vo.length+1))],["MH",Ka,Ju.slice(0,-(ds-co.length+1))],["MQ",Oa,eg.slice(0,-(ds-fo.length+1))],["MR",Fa,ag.slice(0,-(ds-yo.length+1))],["MU",za,ig.slice(0,-(ds-ko.length+1))],["YT",Nn,Oh.slice(0,-(ds-ls.length+1))],["MX",Wa,rg.slice(0,-(ds-Po.length+1))],["FM",Te,El.slice(0,-(ds-Xi.length+1))],["MD",Na,Fu.slice(0,-(ds-lo.length+1))],["MC",Ia,Ou.slice(0,-(ds-so.length+1))],["MN",Ha,Qu.slice(0,-(ds-Mo.length+1))],["ME",Ea,Zu.slice(0,-(ds-uo.length+1))],["MS",Za,tg.slice(0,-(ds-po.length+1))],["MA",Ba,Vu.slice(0,-(ds-ro.length+1))],["MZ",Qa,lg.slice(0,-(ds-Io.length+1))],["MM",La,qu.slice(0,-(ds-Co.length+1))],["NA",Xa,ug.slice(0,-(ds-No.length+1))],["NR",rt,Ag.slice(0,-(ds-wo.length+1))],["NP",ot,Mg.slice(0,-(ds-Ho.length+1))],["NL",it,mg.slice(0,-(ds-Do.length+1))],["NC",$a,gg.slice(0,-(ds-Eo.length+1))],["NZ",lt,fg.slice(0,-(ds-Oo.length+1))],["NI",nt,Sg.slice(0,-(ds-Uo.length+1))],["NE",et,hg.slice(0,-(ds-Go.length+1))],["NG",tt,dg.slice(0,-(ds-Ko.length+1))],["NU",st,Tg.slice(0,-(ds-Vo.length+1))],["NF",at,cg.slice(0,-(ds-xo.length+1))],["MP",Va,$u.slice(0,-(ds-To.length+1))],["NO",_t,Cg.slice(0,-(ds-Lo.length+1))],["OM",ut,yg.slice(0,-(ds-Fo.length+1))],["PK",mt,Pg.slice(0,-(ds-Wo.length+1))],["PW",pt,Kg.slice(0,-(ds-tr.length+1))],["PS",ft,Gg.slice(0,-(ds-er.length+1))],["PA",gt,pg.slice(0,-(ds-Zo.length+1))],["PG",dt,Rg.slice(0,-(ds-Jo.length+1))],["PY",vt,Ug.slice(0,-(ds-nr.length+1))],["PE",ht,vg.slice(0,-(ds-jo.length+1))],["PH",St,bg.slice(0,-(ds-Yo.length+1))],["PN",At,Ng.slice(0,-(ds-Xo.length+1))],["PL",Ct,Bg.slice(0,-(ds-qo.length+1))],["PT",yt,xg.slice(0,-(ds-ar.length+1))],["PR",Tt,Eg.slice(0,-(ds-$o.length+1))],["QA",kt,Dg.slice(0,-(ds-ir.length+1))],["RE",Rt,Lg.slice(0,-(ds-_r.length+1))],["RO",bt,Hg.slice(0,-(ds-or.length+1))],["RU",Bt,Vg.slice(0,-(ds-sr.length+1))],["RW",It,Og.slice(0,-(ds-lr.length+1))],["BL",P,ws.slice(0,-(ds-oi.length+1))],["SH",Dt,Wg.slice(0,-(ds-mr.length+1))],["KN",ha,vu.slice(0,-(ds-Z_.length+1))],["LC",Ta,Eu.slice(0,-(ds-X_.length+1))],["MF",Ga,ju.slice(0,-(ds-go.length+1))],["PM",Mt,Ig.slice(0,-(ds-Qo.length+1))],["VC",yn,Gh.slice(0,-(ds-es.length+1))],["WS",Bn,wh.slice(0,-(ds-rs.length+1))],["SM",Ot,eh.slice(0,-(ds-fr.length+1))],["ST",Jt,_h.slice(0,-(ds-Rr.length+1))],["SA",Nt,Fg.slice(0,-(ds-ur.length+1))],["SN",Ft,ah.slice(0,-(ds-yr.length+1))],["RS",Pt,wg.slice(0,-(ds-rr.length+1))],["SC",Gt,jg.slice(0,-(ds-hr.length+1))],["SL",Vt,$g.slice(0,-(ds-Tr.length+1))],["SG",Ut,Yg.slice(0,-(ds-Sr.length+1))],["SX",Wt,rh.slice(0,-(ds-Pr.length+1))],["SK",wt,Xg.slice(0,-(ds-Ar.length+1))],["SI",Lt,qg.slice(0,-(ds-Cr.length+1))],["SB",Et,Zg.slice(0,-(ds-gr.length+1))],["SO",Zt,th.slice(0,-(ds-pr.length+1))],["ZA",En,Fh.slice(0,-(ds-us.length+1))],["GS",De,Wl.slice(0,-(ds-S_.length+1))],["SS",zt,ih.slice(0,-(ds-kr.length+1))],["ES",Se,bl.slice(0,-(ds-Ji.length+1))],["LK",ya,xu.slice(0,-(ds-eo.length+1))],["SD",xt,zg.slice(0,-(ds-cr.length+1))],["SR",jt,nh.slice(0,-(ds-vr.length+1))],["SJ",Ht,Qg.slice(0,-(ds-Mr.length+1))],["SZ",Qt,lh.slice(0,-(ds-Ir.length+1))],["SE",Kt,Jg.slice(0,-(ds-dr.length+1))],["CH",Z,tl.slice(0,-(ds-yi.length+1))],["SY",qt,sh.slice(0,-(ds-Br.length+1))],["TW",cn,vh.slice(0,-(ds-jr.length+1))],["TJ",nn,Sh.slice(0,-(ds-Ur.length+1))],["TZ",dn,kh.slice(0,-(ds-zr.length+1))],["TH",tn,dh.slice(0,-(ds-Kr.length+1))],["TL",on,Ch.slice(0,-(ds-Lr.length+1))],["TG",an,ch.slice(0,-(ds-xr.length+1))],["TK",_n,mh.slice(0,-(ds-Dr.length+1))],["TO",ln,Th.slice(0,-(ds-Vr.length+1))],["TT",gn,yh.slice(0,-(ds-Fr.length+1))],["TN",sn,Ah.slice(0,-(ds-wr.length+1))],["TR",un,fh.slice(0,-(ds-Or.length+1))],["TM",rn,Mh.slice(0,-(ds-Hr.length+1))],["TC",Xt,uh.slice(0,-(ds-Nr.length+1))],["TV",hn,ph.slice(0,-(ds-Zr.length+1))],["UG",mn,bh.slice(0,-(ds-Yr.length+1))],["UA",Sn,Rh.slice(0,-(ds-Jr.length+1))],["AE",i,ms.slice(0,-(ds-Un.length+1))],["GB",ve,Ul.slice(0,-(ds-t_.length+1))],["US",Mn,Bh.slice(0,-(ds-qr.length+1))],["UM",Cn,Ph.slice(0,-(ds-Wr.length+1))],["UY",An,Ih.slice(0,-(ds-Qr.length+1))],["UZ",Tn,Nh.slice(0,-(ds-Xr.length+1))],["VU",bn,Lh.slice(0,-(ds-_s.length+1))],["VE",pn,xh.slice(0,-(ds-as.length+1))],["VN",Rn,Dh.slice(0,-(ds-is.length+1))],["VG",vn,Kh.slice(0,-(ds-ts.length+1))],["VI",kn,Uh.slice(0,-(ds-ns.length+1))],["WF",Pn,Hh.slice(0,-(ds-os.length+1))],["EH",ce,kl.slice(0,-(ds-ji.length+1))],["YE",In,Vh.slice(0,-(ds-ss.length+1))],["ZM",Gn,Zh.slice(0,-(ds-gs.length+1))],["ZW",xn,jh.slice(0,-(ds-hs.length+1))]];Yh=Jh},S=function(){for(var e=0;e<Yh.length;e++){for(var a={regions:[]},t=Yh[e][2].split("|"),n=0;n<t.length;n++){var i=[];i.push(t[n]),a.regions.push(i)}Yh[e][3]=a}},m=function(e){var a=e.getAttribute("region-data-blank-option"),t=a||"-";e.length=0,e.options[0]=new Option(t,""),e.selectedIndex=0},C=function(e,a){switch(e.getAttribute("data-language")){case"ar":s="يرجى اختيار المنطقة";break;case"cs":s="Vyberte oblast.";break;case"da":s="Vælg venligst en område.";break;case"de":s="Bitte wählen Sie eine Region aus.";break;case"es":s="Por favor seleccione una región.";break;case"et":s="Valige piirkond.";break;case"fi":s="Valitse alue.";break;case"fr":s="Veuillez sélectionner une région.";break;case"ga":s="Roghnaigh réigiún.";break;case"it":s="Si prega di selezionare una regione.";break;case"ja":s="地域を選択してください。";break;case"ko":s="지역을 선택하십시오";break;case"ms":s="Sila pilih salah satu wilayah.";break;case"nl":s="Selecteer een regio.";break;case"pt":s="Por favor, selecione uma região.";break;case"ru":s="Пожалуйста, выберите регион.";break;case"sv":s="Var god välj en område.";break;case"tr":s="Lütfen bir bölge seçiniz.";break;case"vi":s="Vui lòng chọn một khu vực.";break;case"zh-cn":s="请选择一个地区。";break;case"zh-tw":s="請選擇一個地區。";break;case"en":default:s="Please select a region."}var t=e.selectedIndex-1,n=a.getAttribute("region-data-default-option"),i=n||s;if(""===e.value)m(a);else{a.length=0,a.options[0]=new Option(i,"");for(var _=Yh[t][3],o=0;o<_.regions.length;o++){var r=_.regions[o];a.options[a.length]=new Option(_.regions[o],r)}a.selectedIndex=0}},M=function(e,a,t){for(var n=0;n<a.regions.length;n++){if(a.regions[n][0]===t){e.selectedIndex=n+1;break}}};return function(a,t){var n=!1,e=!0,i=a.document,_=i.documentElement,o=i.addEventListener?"addEventListener":"attachEvent",r=i.addEventListener?"removeEventListener":"detachEvent",s=i.addEventListener?"":"on",l=function(e){"readystatechange"==e.type&&"complete"!=i.readyState||(("load"==e.type?a:i)[r](s+e.type,l,!1),!n&&(n=!0)&&t.call(a,e.type||e))},u=function(){try{_.doScroll("left")}catch(e){return void setTimeout(u,50)}l("poll")};if("complete"==i.readyState)t.call(a,"lazy");else{if(i.createEventObject&&_.doScroll){try{e=!a.frameElement}catch(e){}e&&u()}i[o](s+"DOMContentLoaded",l,!1),i[o](s+"readystatechange",l,!1),a[o](s+"load",l,!1)}}(window,e),{init:e}}),function(e,a){if("function"==typeof define&&define.amd)define([],a);else if("object"==typeof exports)try{module.exports=a(require())}catch(e){module.exports=a()}else e.gds=a()}(this,function(){"use strict";function e(){for(var r=document.getElementsByClassName("gds-cr"),e=0;e<r.length;e++)a(r[e]);jQuery.widget("custom.iconselectmenu",jQuery.ui.selectmenu,{_renderItem:function(e,a){var t=jQuery("<li>"),n=jQuery("<div>",{text:a.label});return a.disabled&&t.addClass("ui-state-disabled"),jQuery("<span>",{style:a.element.attr("data-style"),class:"ui-icon "+a.element.attr("data-class")}).appendTo(n),t.append(n).appendTo(e)}}),jQuery(".gds-countryflag").iconselectmenu().iconselectmenu("menuWidget").addClass("ui-menu-icons customicons"),jQuery(".gds-countryflag").iconselectmenu({change:function(e){for(var a,t=e.target,n=0;n<r.length;n++){var i=r[n];i===t&&(a=i)}var _=a.getAttribute("country-data-region-id"),o=document.getElementById(_);sc(a,o)}})}var _c=[],a=function(e){if("true"!==e.getAttribute("data-gds-loaded")){e.length=0;var a=e.getAttribute("country-data-default-option"),t=a||"Please select a country.",n=e.getAttribute("country-data-default-value"),i=0;e.options[0]=new Option(t,""),c(e),oc();for(var _=0;_<_c.length;_++){var o=_c[_][1],r=_c[_][0];(e.options[e.length]=new Option(_c[_][1],o)).setAttribute("data-class",r.toLowerCase()),null==n||n!==o&&n!==r||(i=_,i++)}e.selectedIndex=i;var s,l,u,g,h=e.getAttribute("country-data-region-id");h?((s=document.getElementById(h))?(rc(s),e.onchange=function(){sc(e,s)},null!==n&&0<e.selectedIndex&&(sc(e,s),null!==(l=s.getAttribute("region-data-default-value"))&&(u=e.selectedIndex-1,g=_c[u][3],lc(s,g,l)))):console.error("Region field with ID "+h+" not found."),e.setAttribute("data-gds-loaded","true")):console.error("Missing data-region-id on country field.")}},c=function(e){for(var a=e.getAttribute("data-language"),t=new Gettext({domain:a}),n=t.gettext("Andorra_AD_C"),i=t.gettext("United Arab Emirates_AE_C"),_=t.gettext("Afghanistan_AF_C"),o=t.gettext("Antigua and Barbuda_AG_C"),r=t.gettext("Anguilla_AI_C"),s=t.gettext("Albania_AL_C"),l=t.gettext("Armenia_AM_C"),u=t.gettext("Angola_AO_C"),g=t.gettext("Antarctica_AQ_C"),h=t.gettext("Argentina_AR_C"),c=t.gettext("American Samoa_AS_C"),d=t.gettext("Austria_AT_C"),S=t.gettext("Australia_AU_C"),m=t.gettext("Aruba_AW_C"),C=t.gettext("Aland Islands_AX_C"),M=t.gettext("Azerbaijian_AZ_C"),A=t.gettext("Bosnia and Herzegovina_BA_C"),T=t.gettext("Barbados_BB_C"),f=t.gettext("Bangladesh_BD_C"),y=t.gettext("Belgium_BE_C"),p=t.gettext("Burkina Faso_BF_C"),v=t.gettext("Bulgaria_BG_C"),k=t.gettext("Bahrain_BH_C"),R=t.gettext("Burundi_BI_C"),b=t.gettext("Benin_BJ_C"),P=t.gettext("Saint Barthelemy_BL_C"),B=t.gettext("Bermuda_BM_C"),I=t.gettext("Brunei Darussalam_BN_C"),N=t.gettext("Bolivia, Plurinational State of_BO_C"),E=t.gettext("Bonaire, Sint Eustatius and Saba_BQ_C"),G=t.gettext("Brazil_BR_C"),x=t.gettext("Bahamas_BS_C"),K=t.gettext("Bhutan_BT_C"),U=t.gettext("Botswana_BW_C"),D=t.gettext("Belarus_BY_C"),L=t.gettext("Belize_BZ_C"),H=t.gettext("Canada_CA_C"),w=t.gettext("Cocos (Keeling) Islands_CC_C"),V=t.gettext("Congo, The Democratic Republic of The_CD_C"),O=t.gettext("Central African Republic_CF_C"),F=t.gettext("Congo_CG_C"),Z=t.gettext("Switzerland_CH_C"),j=t.gettext("Cote D'ivoire_CI_C"),z=t.gettext("Cook Islands_CK_C"),J=t.gettext("Chile_CL_C"),Y=t.gettext("Cameroon_CM_C"),W=t.gettext("China_CN_C"),q=t.gettext("Colombia_CO_C"),Q=t.gettext("Costa Rica_CR_C"),X=t.gettext("Cuba_CU_C"),$=t.gettext("Cabo Verde_CV_C"),ee=t.gettext("Curacao_CW_C"),ae=t.gettext("Christmas Island_CX_C"),te=t.gettext("Cyprus_CY_C"),ne=t.gettext("Czech Republic_CZ_C"),ie=t.gettext("Germany_DE_C"),_e=t.gettext("Djibouti_DJ_C"),oe=t.gettext("Denmark_DK_C"),re=t.gettext("Dominica_DM_C"),se=t.gettext("Dominican Republic_DO_C"),le=t.gettext("Algeria_DZ_C"),ue=t.gettext("Ecuador_EC_C"),ge=t.gettext("Estonia_EE_C"),he=t.gettext("Egypt_EG_C"),ce=t.gettext("Western Sahara_EH_C"),de=t.gettext("Eritrea_ER_C"),Se=t.gettext("Spain_ES_C"),me=t.gettext("Ethiopia_ET_C"),Ce=t.gettext("Finland_FI_C"),Me=t.gettext("Fiji_FJ_C"),Ae=t.gettext("Falkland Islands (Malvinas)_FK_C"),Te=t.gettext("Micronesia, Federated States of_FM_C"),fe=t.gettext("Faroe Islands_FO_C"),ye=t.gettext("France_FR_C"),pe=t.gettext("Gabon_GA_C"),ve=t.gettext("United Kingdom_GB_C"),ke=t.gettext("Grenada_GD_C"),Re=t.gettext("Georgia_GE_C"),be=t.gettext("French Guiana_GF_C"),Pe=t.gettext("Guernsey_GG_C"),Be=t.gettext("Ghana_GH_C"),Ie=t.gettext("Gibraltar_GI_C"),Ne=t.gettext("Greenland_GL_C"),Ee=t.gettext("Gambia_GM_C"),Ge=t.gettext("Guinea_GN_C"),xe=t.gettext("Guadeloupe_GP_C"),Ke=t.gettext("Equatorial Guinea_GQ_C"),Ue=t.gettext("Greece_GR_C"),De=t.gettext("South Georgia and The South Sandwich Islands_GS_C"),Le=t.gettext("Guatemala_GT_C"),He=t.gettext("Guam_GU_C"),we=t.gettext("Guinea-Bissau_GW_C"),Ve=t.gettext("Guyana_GY_C"),Oe=t.gettext("Hong Kong_HK_C"),Fe=t.gettext("Honduras_HN_C"),Ze=t.gettext("Croatia_HR_C"),je=t.gettext("Haiti_HT_C"),ze=t.gettext("Hungary_HU_C"),Je=t.gettext("Indonesia_ID_C"),Ye=t.gettext("Ireland_IE_C"),We=t.gettext("Israel_IL_C"),qe=t.gettext("Isle of Man_IM_C"),Qe=t.gettext("India_IN_C"),Xe=t.gettext("British Indian Ocean Territory_IO_C"),$e=t.gettext("Iraq_IQ_C"),ea=t.gettext("Iran, Islamic Republic of_IR_C"),aa=t.gettext("Iceland_IS_C"),ta=t.gettext("Italy_IT_C"),na=t.gettext("Jersey_JE_C"),ia=t.gettext("Jamaica_JM_C"),_a=t.gettext("Jordan_JO_C"),oa=t.gettext("Japan_JP_C"),ra=t.gettext("Kenya_KE_C"),sa=t.gettext("Kyrgyzstan_KG_C"),la=t.gettext("Cambodia_KH_C"),ua=t.gettext("Kiribati_KI_C"),ga=t.gettext("Comoros_KM_C"),ha=t.gettext("Saint Kitts and Nevis_KN_C"),ca=t.gettext("Korea, Democratic People's Republic of_KP_C"),da=t.gettext("Korea, Republic of_KR_C"),Sa=t.gettext("Kuwait_KW_C"),ma=t.gettext("Cayman Islands_KY_C"),Ca=t.gettext("Kazakhstan_KZ_C"),Ma=t.gettext("Lao People's Democratic Republic_LA_C"),Aa=t.gettext("Lebanon_LB_C"),Ta=t.gettext("Saint Lucia_LC_C"),fa=t.gettext("Liechtenstein_LI_C"),ya=t.gettext("Sri Lanka_LK_C"),pa=t.gettext("Liberia_LR_C"),va=t.gettext("Lesotho_LS_C"),ka=t.gettext("Lithuania_LT_C"),Ra=t.gettext("Luxembourg_LU_C"),ba=t.gettext("Latvia_LV_C"),Pa=t.gettext("Libya_LY_C"),Ba=t.gettext("Morocco_MA_C"),Ia=t.gettext("Monaco_MC_C"),Na=t.gettext("Moldova, Republic of_MD_C"),Ea=t.gettext("Montenegro_ME_C"),Ga=t.gettext("Saint Martin (French Part)_MF_C"),xa=t.gettext("Madagascar_MG_C"),Ka=t.gettext("Marshall Islands_MH_C"),Ua=t.gettext("Macedonia, The Former Yugoslav Republic of_MK_C"),Da=t.gettext("Mali_ML_C"),La=t.gettext("Myanmar_MM_C"),Ha=t.gettext("Mongolia_MN_C"),wa=t.gettext("Macao_MO_C"),Va=t.gettext("Northern Mariana Islands_MP_C"),Oa=t.gettext("Martinique_MQ_C"),Fa=t.gettext("Mauritania_MR_C"),Za=t.gettext("Montserrat_MS_C"),ja=t.gettext("Malta_MT_C"),za=t.gettext("Mauritius_MU_C"),Ja=t.gettext("Maldives_MV_C"),Ya=t.gettext("Malawi_MW_C"),Wa=t.gettext("Mexico_MX_C"),qa=t.gettext("Malaysia_MY_C"),Qa=t.gettext("Mozambique_MZ_C"),Xa=t.gettext("Namibia_NA_C"),$a=t.gettext("New Caledonia_NC_C"),et=t.gettext("Niger_NE_C"),at=t.gettext("Norfolk Island_NF_C"),tt=t.gettext("Nigeria_NG_C"),nt=t.gettext("Nicaragua_NI_C"),it=t.gettext("Netherlands_NL_C"),_t=t.gettext("Norway_NO_C"),ot=t.gettext("Nepal_NP_C"),rt=t.gettext("Nauru_NR_C"),st=t.gettext("Niue_NU_C"),lt=t.gettext("New Zealand_NZ_C"),ut=t.gettext("Oman_OM_C"),gt=t.gettext("Panama_PA_C"),ht=t.gettext("Peru_PE_C"),ct=t.gettext("French Polynesia_PF_C"),dt=t.gettext("Papua New Guinea_PG_C"),St=t.gettext("Philippines_PH_C"),mt=t.gettext("Pakistan_PK_C"),Ct=t.gettext("Poland_PL_C"),Mt=t.gettext("Saint Pierre and Miquelon_PM_C"),At=t.gettext("Pitcairn_PN_C"),Tt=t.gettext("Puerto Rico_PR_C"),ft=t.gettext("Palestine, State of_PS_C"),yt=t.gettext("Portugal_PT_C"),pt=t.gettext("Palau_PW_C"),vt=t.gettext("Paraguay_PY_C"),kt=t.gettext("Qatar_QA_C"),Rt=t.gettext("Reunion_RE_C"),bt=t.gettext("Romania_RO_C"),Pt=t.gettext("Serbia_RS_C"),Bt=t.gettext("Russian Federation_RU_C"),It=t.gettext("Rwanda_RW_C"),Nt=t.gettext("Saudi Arabia_SA_C"),Et=t.gettext("Solomon Islands_SB_C"),Gt=t.gettext("Seychelles_SC_C"),xt=t.gettext("Sudan_SD_C"),Kt=t.gettext("Sweden_SE_C"),Ut=t.gettext("Singapore_SG_C"),Dt=t.gettext("Saint Helena, Ascension and Tristan Da Cunha_SH_C"),Lt=t.gettext("Slovenia_SI_C"),Ht=t.gettext("Svalbard and Jan Mayen_SJ_C"),wt=t.gettext("Slovakia_SK_C"),Vt=t.gettext("Sierra Leone_SL_C"),Ot=t.gettext("San Marino_SM_C"),Ft=t.gettext("Senegal_SN_C"),Zt=t.gettext("Somalia_SO_C"),jt=t.gettext("Suriname_SR_C"),zt=t.gettext("South Sudan_SS_C"),Jt=t.gettext("Sao Tome and Principe_ST_C"),Yt=t.gettext("El Salvador_SV_C"),Wt=t.gettext("Sint Maarten (Dutch Part)_SX_C"),qt=t.gettext("Syrian Arab Republic_SY_C"),Qt=t.gettext("Swaziland_SZ_C"),Xt=t.gettext("Turks and Caicos Islands_TC_C"),$t=t.gettext("Chad_TD_C"),en=t.gettext("French Southern Territories_TF_C"),an=t.gettext("Togo_TG_C"),tn=t.gettext("Thailand_TH_C"),nn=t.gettext("Tajikistan_TJ_C"),_n=t.gettext("Tokelau_TK_C"),on=t.gettext("Timor-Leste_TL_C"),rn=t.gettext("Turkmenistan_TM_C"),sn=t.gettext("Tunisia_TN_C"),ln=t.gettext("Tonga_TO_C"),un=t.gettext("Turkey_TR_C"),gn=t.gettext("Trinidad and Tobago_TT_C"),hn=t.gettext("Tuvalu_TV_C"),cn=t.gettext("Taiwan, Province of China_TW_C"),dn=t.gettext("Tanzania, United Republic of_TZ_C"),Sn=t.gettext("Ukraine_UA_C"),mn=t.gettext("Uganda_UG_C"),Cn=t.gettext("United States Minor Outlying Islands_UM_C"),Mn=t.gettext("United States_US_C"),An=t.gettext("Uruguay_UY_C"),Tn=t.gettext("Uzbekistan_UZ_C"),fn=t.gettext("Holy See_VA_C"),yn=t.gettext("Saint Vincent and The Grenadines_VC_C"),pn=t.gettext("Venezuela, Bolivarian Republic of_VE_C"),vn=t.gettext("Virgin Islands, British_VG_C"),kn=t.gettext("Virgin Islands, U.S._VI_C"),Rn=t.gettext("Viet Nam_VN_C"),bn=t.gettext("Vanuatu_VU_C"),Pn=t.gettext("Wallis and Futuna_WF_C"),Bn=t.gettext("Samoa_WS_C"),In=t.gettext("Yemen_YE_C"),Nn=t.gettext("Mayotte_YT_C"),En=t.gettext("South Africa_ZA_C"),Gn=t.gettext("Zambia_ZM_C"),xn=t.gettext("Zimbabwe_ZW_C"),Kn=["Andorra la Vella_AD","Canillo_AD","Encamp_AD","Escaldes-Engordany_AD","La Massana_AD","Ordino_AD","Sant Julia de Loria_AD"],Un=["'Ajman_AE","Abu Zaby_AE","Al Fujayrah_AE","Ash Shariqah_AE","Dubayy_AE","Ra's al Khaymah_AE","Umm al Qaywayn_AE"],Dn=["Badakhshan_AF","Badghis_AF","Baghlan_AF","Balkh_AF","Bamyan_AF","Daykundi_AF","Farah_AF","Faryab_AF","Ghazni_AF","Ghor_AF","Helmand_AF","Herat_AF","Jowzjan_AF","Kabul_AF","Kandahar_AF","Kapisa_AF","Khost_AF","Kunar_AF","Kunduz_AF","Laghman_AF","Logar_AF","Nangarhar_AF","Nimroz_AF","Nuristan_AF","Paktika_AF","Paktiya_AF","Panjshayr_AF","Parwan_AF","Samangan_AF","Sar-e Pul_AF","Takhar_AF","Uruzgan_AF","Wardak_AF","Zabul_AF"],Ln=["Barbuda_AG","Redonda_AG","Saint George_AG","Saint John_AG","Saint Mary_AG","Saint Paul_AG","Saint Peter_AG","Saint Philip_AG"],Hn=["Anguilla_AI"],wn=["Berat_AL","Diber_AL","Durres_AL","Elbasan_AL","Fier_AL","Gjirokaster_AL","Korce_AL","Kukes_AL","Lezhe_AL","Shkoder_AL","Tirane_AL","Vlore_AL"],Vn=["Aragacotn_AM","Ararat_AM","Armavir_AM","Erevan_AM","Gegark'unik'_AM","Kotayk'_AM","Lori_AM","Sirak_AM","Syunik'_AM","Tavus_AM","Vayoc Jor_AM"],On=["Bengo_AO","Benguela_AO","Bie_AO","Cabinda_AO","Cunene_AO","Huambo_AO","Huila_AO","Kuando Kubango_AO","Kwanza Norte_AO","Kwanza Sul_AO","Luanda_AO","Lunda Norte_AO","Lunda Sul_AO","Malange_AO","Moxico_AO","Namibe_AO","Uige_AO","Zaire_AO"],Fn=["Antarctica_AQ"],Zn=["Buenos Aires_AR","Catamarca_AR","Chaco_AR","Chubut_AR","Ciudad Autonoma de Buenos Aires_AR","Cordoba_AR","Corrientes_AR","Entre Rios_AR","Formosa_AR","Jujuy_AR","La Pampa_AR","La Rioja_AR","Mendoza_AR","Misiones_AR","Neuquen_AR","Rio Negro_AR","Salta_AR","San Juan_AR","San Luis_AR","Santa Cruz_AR","Santa Fe_AR","Santiago del Estero_AR","Tierra del Fuego_AR","Tucuman_AR"],jn=["Eastern District_AS","Western District_AS"],zn=["Burgenland_AT","Karnten_AT","Niederosterreich_AT","Oberosterreich_AT","Salzburg_AT","Steiermark_AT","Tirol_AT","Vorarlberg_AT","Wien_AT"],Jn=["Australian Capital Territory_AU","New South Wales_AU","Northern Territory_AU","Queensland_AU","South Australia_AU","Tasmania_AU","Victoria_AU","Western Australia_AU"],Yn=["Aruba_AW"],Wn=["Eckeroe_AX","Finstroem_AX","Hammarland_AX","Jomala_AX","Lemland_AX","Mariehamn_AX","Saltvik_AX","Sund_AX"],qn=["Abseron_AZ","Agcabadi_AZ","Agdam_AZ","Agdas_AZ","Agstafa_AZ","Agsu_AZ","Astara_AZ","Baki_AZ","Balakan_AZ","Barda_AZ","Beylaqan_AZ","Bilasuvar_AZ","Cabrayil_AZ","Calilabad_AZ","Daskasan_AZ","Fuzuli_AZ","Gadabay_AZ","Ganca_AZ","Goranboy_AZ","Goycay_AZ","Goygol_AZ","Haciqabul_AZ","Imisli_AZ","Ismayilli_AZ","Kalbacar_AZ","Kurdamir_AZ","Lacin_AZ","Lankaran_AZ","Lerik_AZ","Masalli_AZ","Mingacevir_AZ","Naftalan_AZ","Naxcivan_AZ","Neftcala_AZ","Oguz_AZ","Qabala_AZ","Qax_AZ","Qazax_AZ","Qobustan_AZ","Quba_AZ","Qubadli_AZ","Qusar_AZ","Saatli_AZ","Sabirabad_AZ","Saki_AZ","Salyan_AZ","Samaxi_AZ","Samkir_AZ","Samux_AZ","Sirvan_AZ","Siyazan_AZ","Sumqayit_AZ","Susa_AZ","Tartar_AZ","Tovuz_AZ","Ucar_AZ","Xacmaz_AZ","Xankandi_AZ","Xizi_AZ","Xocali_AZ","Xocavand_AZ","Yardimli_AZ","Yevlax_AZ","Zangilan_AZ","Zaqatala_AZ","Zardab_AZ"],Qn=["Brcko distrikt_BA","Federacija Bosne i Hercegovine_BA","Republika Srpska_BA"],Xn=["Christ Church_BB","Saint Andrew_BB","Saint George_BB","Saint James_BB","Saint John_BB","Saint Joseph_BB","Saint Lucy_BB","Saint Michael_BB","Saint Peter_BB","Saint Philip_BB","Saint Thomas_BB"],$n=["Barisal_BD","Chittagong_BD","Dhaka_BD","Khulna_BD","Rajshahi_BD","Rangpur_BD","Sylhet_BD"],ei=["Antwerpen_BE","Brabant wallon_BE","Brussels Hoofdstedelijk Gewest_BE","Hainaut_BE","Liege_BE","Limburg_BE","Luxembourg_BE","Namur_BE","Oost-Vlaanderen_BE","Vlaams-Brabant_BE","West-Vlaanderen_BE"],ai=["Bale_BF","Bam_BF","Banwa_BF","Bazega_BF","Bougouriba_BF","Boulgou_BF","Boulkiemde_BF","Comoe_BF","Ganzourgou_BF","Gnagna_BF","Gourma_BF","Houet_BF","Ioba_BF","Kadiogo_BF","Kenedougou_BF","Komondjari_BF","Kompienga_BF","Kossi_BF","Koulpelogo_BF","Kouritenga_BF","Kourweogo_BF","Leraba_BF","Loroum_BF","Mouhoun_BF","Nahouri_BF","Namentenga_BF","Nayala_BF","Noumbiel_BF","Oubritenga_BF","Oudalan_BF","Passore_BF","Poni_BF","Sanguie_BF","Sanmatenga_BF","Seno_BF","Sissili_BF","Soum_BF","Sourou_BF","Tapoa_BF","Tuy_BF","Yagha_BF","Yatenga_BF","Ziro_BF","Zondoma_BF","Zoundweogo_BF"],ti=["Blagoevgrad_BG","Burgas_BG","Dobrich_BG","Gabrovo_BG","Haskovo_BG","Kardzhali_BG","Kyustendil_BG","Lovech_BG","Montana_BG","Pazardzhik_BG","Pernik_BG","Pleven_BG","Plovdiv_BG","Razgrad_BG","Ruse_BG","Shumen_BG","Silistra_BG","Sliven_BG","Smolyan_BG","Sofia_BG","Sofia (stolitsa)_BG","Stara Zagora_BG","Targovishte_BG","Varna_BG","Veliko Tarnovo_BG","Vidin_BG","Vratsa_BG","Yambol_BG"],ni=["Al 'Asimah_BH","Al Janubiyah_BH","Al Muharraq_BH","Ash Shamaliyah_BH"],ii=["Bubanza_BI","Bujumbura Mairie_BI","Bururi_BI","Cankuzo_BI","Cibitoke_BI","Gitega_BI","Karuzi_BI","Kayanza_BI","Kirundo_BI","Makamba_BI","Muramvya_BI","Muyinga_BI","Mwaro_BI","Ngozi_BI","Rutana_BI","Ruyigi_BI"],_i=["Alibori_BJ","Atacora_BJ","Atlantique_BJ","Borgou_BJ","Collines_BJ","Couffo_BJ","Donga_BJ","Littoral_BJ","Mono_BJ","Oueme_BJ","Plateau_BJ","Zou_BJ"],oi=["Saint Barthelemy_BL"],ri=["Hamilton_BM","Saint George_BM"],si=["Belait_BN","Brunei-Muara_BN","Temburong_BN","Tutong_BN"],li=["Chuquisaca_BO","Cochabamba_BO","El Beni_BO","La Paz_BO","Oruro_BO","Pando_BO","Potosi_BO","Santa Cruz_BO","Tarija_BO"],ui=["Bonaire_BQ","Saba_BQ","Sint Eustatius_BQ"],gi=["Acre_BR","Alagoas_BR","Amapa_BR","Amazonas_BR","Bahia_BR","Ceara_BR","Distrito Federal_BR","Espirito Santo_BR","Goias_BR","Maranhao_BR","Mato Grosso_BR","Mato Grosso do Sul_BR","Minas Gerais_BR","Para_BR","Paraiba_BR","Parana_BR","Pernambuco_BR","Piaui_BR","Rio de Janeiro_BR","Rio Grande do Norte_BR","Rio Grande do Sul_BR","Rondonia_BR","Roraima_BR","Santa Catarina_BR","Sao Paulo_BR","Sergipe_BR","Tocantins_BR"],hi=["Central Andros_BS","City of Freeport_BS","East Grand Bahama_BS","Harbour Island_BS","Hope Town_BS","Long Island_BS","New Providence_BS","South Eleuthera_BS"],ci=["Bumthang_BT","Chhukha_BT","Dagana_BT","Gasa_BT","Haa_BT","Lhuentse_BT","Monggar_BT","Paro_BT","Pemagatshel_BT","Punakha_BT","Samdrup Jongkhar_BT","Samtse_BT","Thimphu_BT","Trashi Yangtse_BT","Trashigang_BT","Trongsa_BT","Tsirang_BT","Wangdue Phodrang_BT","Zhemgang_BT"],di=["Central_BW","Ghanzi_BW","Kgalagadi_BW","Kgatleng_BW","Kweneng_BW","North East_BW","North West_BW","South East_BW","Southern_BW"],Si=["Brestskaya voblasts'_BY","Homyel'skaya voblasts'_BY","Horad Minsk_BY","Hrodzenskaya voblasts'_BY","Mahilyowskaya voblasts'_BY","Minskaya voblasts'_BY","Vitsyebskaya voblasts'_BY"],mi=["Belize_BZ","Cayo_BZ","Corozal_BZ","Orange Walk_BZ","Stann Creek_BZ","Toledo_BZ"],Ci=["Alberta_CA","British Columbia_CA","Manitoba_CA","New Brunswick_CA","Newfoundland and Labrador_CA","Northwest Territories_CA","Nova Scotia_CA","Nunavut_CA","Ontario_CA","Prince Edward Island_CA","Quebec_CA","Saskatchewan_CA","Yukon_CA"],Mi=["Cocos (Keeling) Islands_CC"],Ai=["Bas-Uele_CD","Equateur_CD","Haut-Katanga_CD","Haut-Lomami_CD","Haut-Uele_CD","Ituri_CD","Kasai_CD","Kasai Central_CD","Kasai Oriental_CD","Kinshasa_CD","Kongo Central_CD","Kwango_CD","Kwilu_CD","Lomami_CD","Lualaba_CD","Mai-Ndombe_CD","Maniema_CD","Mongala_CD","Nord-Kivu_CD","Nord-Ubangi_CD","Sankuru_CD","Sud-Kivu_CD","Sud-Ubangi_CD","Tanganyika_CD","Tshopo_CD","Tshuapa_CD"],Ti=["Bamingui-Bangoran_CF","Bangui_CF","Basse-Kotto_CF","Gribingui_CF","Haut-Mbomou_CF","Haute-Kotto_CF","Kemo-Gribingui_CF","Lobaye_CF","Mambere-Kadei_CF","Mbomou_CF","Nana-Mambere_CF","Ombella-Mpoko_CF","Ouaka_CF","Ouham_CF","Ouham-Pende_CF","Sangha_CF","Vakaga_CF"],fi=["Bouenza_CG","Brazzaville_CG","Cuvette_CG","Cuvette-Ouest_CG","Lekoumou_CG","Likouala_CG","Niari_CG","Plateaux_CG","Pointe-Noire_CG","Pool_CG","Sangha_CG"],yi=["Aargau_CH","Appenzell Ausserrhoden_CH","Appenzell Innerrhoden_CH","Basel-Landschaft_CH","Basel-Stadt_CH","Bern_CH","Fribourg_CH","Geneve_CH","Glarus_CH","Graubunden_CH","Jura_CH","Luzern_CH","Neuchatel_CH","Nidwalden_CH","Obwalden_CH","Sankt Gallen_CH","Schaffhausen_CH","Schwyz_CH","Solothurn_CH","Thurgau_CH","Ticino_CH","Uri_CH","Valais_CH","Vaud_CH","Zug_CH","Zurich_CH"],pi=["Abidjan_CI","Bas-Sassandra_CI","Comoe_CI","Denguele_CI","Goh-Djiboua_CI","Lacs_CI","Lagunes_CI","Montagnes_CI","Sassandra-Marahoue_CI","Savanes_CI","Vallee du Bandama_CI","Woroba_CI","Yamoussoukro_CI","Zanzan_CI"],vi=["Cook Islands_CK"],ki=["Aisen del General Carlos Ibanez del Campo_CL","Antofagasta_CL","Arica y Parinacota_CL","Atacama_CL","Biobio_CL","Coquimbo_CL","La Araucania_CL","Libertador General Bernardo O'Higgins_CL","Los Lagos_CL","Los Rios_CL","Magallanes_CL","Maule_CL","Region Metropolitana de Santiago_CL","Tarapaca_CL","Valparaiso_CL"],Ri=["Adamaoua_CM","Centre_CM","Est_CM","Extreme-Nord_CM","Littoral_CM","Nord_CM","Nord-Ouest_CM","Ouest_CM","Sud_CM","Sud-Ouest_CM"],bi=["Anhui_CN","Beijing_CN","Chongqing_CN","Fujian_CN","Gansu_CN","Guangdong_CN","Guangxi_CN","Guizhou_CN","Hainan_CN","Hebei_CN","Heilongjiang_CN","Henan_CN","Hubei_CN","Hunan_CN","Jiangsu_CN","Jiangxi_CN","Jilin_CN","Liaoning_CN","Nei Mongol_CN","Ningxia_CN","Qinghai_CN","Shaanxi_CN","Shandong_CN","Shanghai_CN","Shanxi_CN","Sichuan_CN","Tianjin_CN","Xinjiang_CN","Xizang_CN","Yunnan_CN","Zhejiang_CN"],Pi=["Amazonas_CO","Antioquia_CO","Arauca_CO","Atlantico_CO","Bolivar_CO","Boyaca_CO","Caldas_CO","Caqueta_CO","Casanare_CO","Cauca_CO","Cesar_CO","Choco_CO","Cordoba_CO","Cundinamarca_CO","Distrito Capital de Bogota_CO","Guainia_CO","Guaviare_CO","Huila_CO","La Guajira_CO","Magdalena_CO","Meta_CO","Narino_CO","Norte de Santander_CO","Putumayo_CO","Quindio_CO","Risaralda_CO","San Andres, Providencia y Santa Catalina_CO","Santander_CO","Sucre_CO","Tolima_CO","Valle del Cauca_CO","Vaupes_CO","Vichada_CO"],Bi=["Alajuela_CR","Cartago_CR","Guanacaste_CR","Heredia_CR","Limon_CR","Puntarenas_CR","San Jose_CR"],Ii=["Artemisa_CU","Camaguey_CU","Ciego de Avila_CU","Cienfuegos_CU","Granma_CU","Guantanamo_CU","Holguin_CU","Isla de la Juventud_CU","La Habana_CU","Las Tunas_CU","Matanzas_CU","Mayabeque_CU","Pinar del Rio_CU","Sancti Spiritus_CU","Santiago de Cuba_CU","Villa Clara_CU"],Ni=["Boa Vista_CV","Brava_CV","Maio_CV","Mosteiros_CV","Paul_CV","Porto Novo_CV","Praia_CV","Ribeira Brava_CV","Ribeira Grande_CV","Ribeira Grande de Santiago_CV","Sal_CV","Santa Catarina_CV","Santa Catarina do Fogo_CV","Santa Cruz_CV","Sao Domingos_CV","Sao Filipe_CV","Sao Lourenco dos Orgaos_CV","Sao Miguel_CV","Sao Salvador do Mundo_CV","Sao Vicente_CV","Tarrafal_CV","Tarrafal de Sao Nicolau_CV"],Ei=["Curacao_CW"],Gi=["Christmas Island_CX"],xi=["Ammochostos_CY","Keryneia_CY","Larnaka_CY","Lefkosia_CY","Lemesos_CY","Pafos_CY"],Ki=["Jihocesky kraj_CZ","Jihomoravsky kraj_CZ","Karlovarsky kraj_CZ","Kraj Vysocina_CZ","Kralovehradecky kraj_CZ","Liberecky kraj_CZ","Moravskoslezsky kraj_CZ","Olomoucky kraj_CZ","Pardubicky kraj_CZ","Plzensky kraj_CZ","Praha, Hlavni mesto_CZ","Stredocesky kraj_CZ","Ustecky kraj_CZ","Zlinsky kraj_CZ"],Ui=["Baden-Wurttemberg_DE","Bayern_DE","Berlin_DE","Brandenburg_DE","Bremen_DE","Hamburg_DE","Hessen_DE","Mecklenburg-Vorpommern_DE","Niedersachsen_DE","Nordrhein-Westfalen_DE","Rheinland-Pfalz_DE","Saarland_DE","Sachsen_DE","Sachsen-Anhalt_DE","Schleswig-Holstein_DE","Thuringen_DE"],Di=["Ali Sabieh_DJ","Arta_DJ","Dikhil_DJ","Djibouti_DJ","Obock_DJ","Tadjourah_DJ"],Li=["Hovedstaden_DK","Midtjylland_DK","Nordjylland_DK","Sjaelland_DK","Syddanmark_DK"],Hi=["Saint Andrew_DM","Saint David_DM","Saint George_DM","Saint John_DM","Saint Joseph_DM","Saint Luke_DM","Saint Mark_DM","Saint Patrick_DM","Saint Paul_DM","Saint Peter_DM"],wi=["Azua_DO","Baoruco_DO","Barahona_DO","Dajabon_DO","Distrito Nacional (Santo Domingo)_DO","Duarte_DO","El Seibo_DO","Elias Pina_DO","Espaillat_DO","Hato Mayor_DO","Hermanas Mirabal_DO","Independencia_DO","La Altagracia_DO","La Romana_DO","La Vega_DO","Maria Trinidad Sanchez_DO","Monsenor Nouel_DO","Monte Cristi_DO","Monte Plata_DO","Pedernales_DO","Peravia_DO","Puerto Plata_DO","Samana_DO","San Cristobal_DO","San Jose de Ocoa_DO","San Juan_DO","San Pedro de Macoris_DO","Sanchez Ramirez_DO","Santiago_DO","Santiago Rodriguez_DO","Valverde_DO"],Vi=["Adrar_DZ","Ain Defla_DZ","Ain Temouchent_DZ","Alger_DZ","Annaba_DZ","Batna_DZ","Bechar_DZ","Bejaia_DZ","Biskra_DZ","Blida_DZ","Bordj Bou Arreridj_DZ","Bouira_DZ","Boumerdes_DZ","Chlef_DZ","Constantine_DZ","Djelfa_DZ","El Bayadh_DZ","El Oued_DZ","El Tarf_DZ","Ghardaia_DZ","Guelma_DZ","Illizi_DZ","Jijel_DZ","Khenchela_DZ","Laghouat_DZ","M'sila_DZ","Mascara_DZ","Medea_DZ","Mila_DZ","Mostaganem_DZ","Naama_DZ","Oran_DZ","Ouargla_DZ","Oum el Bouaghi_DZ","Relizane_DZ","Saida_DZ","Setif_DZ","Sidi Bel Abbes_DZ","Skikda_DZ","Souk Ahras_DZ","Tamanrasset_DZ","Tebessa_DZ","Tiaret_DZ","Tindouf_DZ","Tipaza_DZ","Tissemsilt_DZ","Tizi Ouzou_DZ","Tlemcen_DZ"],Oi=["Azuay_EC","Bolivar_EC","Canar_EC","Carchi_EC","Chimborazo_EC","Cotopaxi_EC","El Oro_EC","Esmeraldas_EC","Galapagos_EC","Guayas_EC","Imbabura_EC","Loja_EC","Los Rios_EC","Manabi_EC","Morona Santiago_EC","Napo_EC","Orellana_EC","Pastaza_EC","Pichincha_EC","Santa Elena_EC","Santo Domingo de los Tsachilas_EC","Sucumbios_EC","Tungurahua_EC","Zamora Chinchipe_EC"],Fi=["Harjumaa_EE","Hiiumaa_EE","Ida-Virumaa_EE","Jarvamaa_EE","Jogevamaa_EE","Laane-Virumaa_EE","Laanemaa_EE","Parnumaa_EE","Polvamaa_EE","Raplamaa_EE","Saaremaa_EE","Tartumaa_EE","Valgamaa_EE","Viljandimaa_EE","Vorumaa_EE"],Zi=["Ad Daqahliyah_EG","Al Bahr al Ahmar_EG","Al Buhayrah_EG","Al Fayyum_EG","Al Gharbiyah_EG","Al Iskandariyah_EG","Al Isma'iliyah_EG","Al Jizah_EG","Al Minufiyah_EG","Al Minya_EG","Al Qahirah_EG","Al Qalyubiyah_EG","Al Uqsur_EG","Al Wadi al Jadid_EG","As Suways_EG","Ash Sharqiyah_EG","Aswan_EG","Asyut_EG","Bani Suwayf_EG","Bur Sa'id_EG","Dumyat_EG","Janub Sina'_EG","Kafr ash Shaykh_EG","Matruh_EG","Qina_EG","Shamal Sina'_EG","Suhaj_EG"],ji=["Western Sahara_EH"],zi=["Al Awsat_ER","Al Janubi_ER","Ansaba_ER","Janubi al Bahri al Ahmar_ER","Qash-Barkah_ER","Shimali al Bahri al Ahmar_ER"],Ji=["Andalucia_ES","Aragon_ES","Asturias, Principado de_ES","Canarias_ES","Cantabria_ES","Castilla y Leon_ES","Castilla-La Mancha_ES","Catalunya_ES","Ceuta_ES","Extremadura_ES","Galicia_ES","Illes Balears_ES","La Rioja_ES","Madrid, Comunidad de_ES","Melilla_ES","Murcia, Region de_ES","Navarra, Comunidad Foral de_ES","Pais Vasco_ES","Valenciana, Comunidad_ES"],Yi=["Adis Abeba_ET","Afar_ET","Amara_ET","Binshangul Gumuz_ET","Dire Dawa_ET","Gambela Hizboch_ET","Hareri Hizb_ET","Oromiya_ET","Sumale_ET","Tigray_ET","YeDebub Biheroch Bihereseboch na Hizboch_ET"],Wi=["Etela-Karjala_FI","Etela-Pohjanmaa_FI","Etela-Savo_FI","Kainuu_FI","Kanta-Hame_FI","Keski-Pohjanmaa_FI","Keski-Suomi_FI","Kymenlaakso_FI","Lappi_FI","Paijat-Hame_FI","Pirkanmaa_FI","Pohjanmaa_FI","Pohjois-Karjala_FI","Pohjois-Pohjanmaa_FI","Pohjois-Savo_FI","Satakunta_FI","Uusimaa_FI","Varsinais-Suomi_FI"],qi=["Central_FJ","Eastern_FJ","Northern_FJ","Rotuma_FJ","Western_FJ"],Qi=["Falkland Islands (Malvinas)_FK"],Xi=["Chuuk_FM","Kosrae_FM","Pohnpei_FM","Yap_FM"],$i=["Eysturoy_FO","Nordoyar_FO","Sandoy_FO","Streymoy_FO","Suduroy_FO","Vagar_FO"],e_=["Auvergne-Rhone-Alpes_FR","Bourgogne-Franche-Comte_FR","Bretagne_FR","Centre-Val de Loire_FR","Corse_FR","Grand-Est_FR","Hauts-de-France_FR","Ile-de-France_FR","Normandie_FR","Nouvelle-Aquitaine_FR","Occitanie_FR","Pays-de-la-Loire_FR","Provence-Alpes-Cote-d'Azur_FR"],a_=["Estuaire_GA","Haut-Ogooue_GA","Moyen-Ogooue_GA","Ngounie_GA","Nyanga_GA","Ogooue-Ivindo_GA","Ogooue-Lolo_GA","Ogooue-Maritime_GA","Woleu-Ntem_GA"],t_=["England_GB","Northern Ireland_GB","Scotland_GB","Wales_GB"],n_=["Saint Andrew_GD","Saint David_GD","Saint George_GD","Saint John_GD","Saint Mark_GD","Saint Patrick_GD","Southern Grenadine Islands_GD"],i_=["Abkhazia_GE","Ajaria_GE","Guria_GE","Imereti_GE","K'akheti_GE","Kvemo Kartli_GE","Mtskheta-Mtianeti_GE","Rach'a-Lechkhumi-Kvemo Svaneti_GE","Samegrelo-Zemo Svaneti_GE","Samtskhe-Javakheti_GE","Shida Kartli_GE","Tbilisi_GE"],__=["Guyane_GF"],o_=["Guernsey_GG"],r_=["Ashanti_GH","Brong-Ahafo_GH","Central_GH","Eastern_GH","Greater Accra_GH","Northern_GH","Upper East_GH","Upper West_GH","Volta_GH","Western_GH"],s_=["Gibraltar_GI"],l_=["Avannaata Kommunia_GL","Kommune Kujalleq_GL","Kommune Qeqertalik_GL","Kommuneqarfik Sermersooq_GL","Qeqqata Kommunia_GL"],u_=["Banjul_GM","Central River_GM","Lower River_GM","North Bank_GM","Upper River_GM","Western_GM"],g_=["Beyla_GN","Boffa_GN","Boke_GN","Conakry_GN","Coyah_GN","Dabola_GN","Dalaba_GN","Dinguiraye_GN","Dubreka_GN","Faranah_GN","Forecariah_GN","Fria_GN","Gaoual_GN","Guekedou_GN","Kankan_GN","Kerouane_GN","Kindia_GN","Kissidougou_GN","Koubia_GN","Koundara_GN","Kouroussa_GN","Labe_GN","Lelouma_GN","Lola_GN","Macenta_GN","Mali_GN","Mamou_GN","Mandiana_GN","Nzerekore_GN","Pita_GN","Siguiri_GN","Telimele_GN","Tougue_GN","Yomou_GN"],h_=["Guadeloupe_GP"],c_=["Annobon_GQ","Bioko Norte_GQ","Bioko Sur_GQ","Centro Sur_GQ","Kie-Ntem_GQ","Litoral_GQ","Wele-Nzas_GQ"],d_=["Agion Oros_GR","Anatoliki Makedonia kai Thraki_GR","Attiki_GR","Dytiki Ellada_GR","Dytiki Makedonia_GR","Ionia Nisia_GR","Ipeiros_GR","Kentriki Makedonia_GR","Kriti_GR","Notio Aigaio_GR","Peloponnisos_GR","Sterea Ellada_GR","Thessalia_GR","Voreio Aigaio_GR"],S_=["South Georgia and the South Sandwich Islands_GS"],m_=["Alta Verapaz_GT","Baja Verapaz_GT","Chimaltenango_GT","Chiquimula_GT","El Progreso_GT","Escuintla_GT","Guatemala_GT","Huehuetenango_GT","Izabal_GT","Jalapa_GT","Jutiapa_GT","Peten_GT","Quetzaltenango_GT","Quiche_GT","Retalhuleu_GT","Sacatepequez_GT","San Marcos_GT","Santa Rosa_GT","Solola_GT","Suchitepequez_GT","Totonicapan_GT","Zacapa_GT"],C_=["Agana Heights_GU","Agat_GU","Asan-Maina_GU","Barrigada_GU","Chalan Pago-Ordot_GU","Dededo_GU","Hagatna_GU","Inarajan_GU","Mangilao_GU","Merizo_GU","Mongmong-Toto-Maite_GU","Piti_GU","Santa Rita_GU","Sinajana_GU","Talofofo_GU","Tamuning-Tumon-Harmon_GU","Umatac_GU","Yigo_GU","Yona_GU"],M_=["Bafata_GW","Biombo_GW","Bissau_GW","Bolama_GW","Cacheu_GW","Gabu_GW","Oio_GW","Quinara_GW","Tombali_GW"],A_=["Barima-Waini_GY","Cuyuni-Mazaruni_GY","Demerara-Mahaica_GY","East Berbice-Corentyne_GY","Essequibo Islands-West Demerara_GY","Mahaica-Berbice_GY","Pomeroon-Supenaam_GY","Potaro-Siparuni_GY","Upper Demerara-Berbice_GY","Upper Takutu-Upper Essequibo_GY"],T_=["Hong Kong_HK"],f_=["Atlantida_HN","Choluteca_HN","Colon_HN","Comayagua_HN","Copan_HN","Cortes_HN","El Paraiso_HN","Francisco Morazan_HN","Gracias a Dios_HN","Intibuca_HN","Islas de la Bahia_HN","La Paz_HN","Lempira_HN","Ocotepeque_HN","Olancho_HN","Santa Barbara_HN","Valle_HN","Yoro_HN"],y_=["Bjelovarsko-bilogorska zupanija_HR","Brodsko-posavska zupanija_HR","Dubrovacko-neretvanska zupanija_HR","Grad Zagreb_HR","Istarska zupanija_HR","Karlovacka zupanija_HR","Koprivnicko-krizevacka zupanija_HR","Krapinsko-zagorska zupanija_HR","Licko-senjska zupanija_HR","Medimurska zupanija_HR","Osjecko-baranjska zupanija_HR","Pozesko-slavonska zupanija_HR","Primorsko-goranska zupanija_HR","Sibensko-kninska zupanija_HR","Sisacko-moslavacka zupanija_HR","Splitsko-dalmatinska zupanija_HR","Varazdinska zupanija_HR","Viroviticko-podravska zupanija_HR","Vukovarsko-srijemska zupanija_HR","Zadarska zupanija_HR","Zagrebacka zupanija_HR"],p_=["Artibonite_HT","Centre_HT","Grande'Anse_HT","Nippes_HT","Nord_HT","Nord-Est_HT","Nord-Ouest_HT","Ouest_HT","Sud_HT","Sud-Est_HT"],v_=["Bacs-Kiskun_HU","Baranya_HU","Bekes_HU","Borsod-Abauj-Zemplen_HU","Budapest_HU","Csongrad_HU","Fejer_HU","Gyor-Moson-Sopron_HU","Hajdu-Bihar_HU","Heves_HU","Jasz-Nagykun-Szolnok_HU","Komarom-Esztergom_HU","Nograd_HU","Pest_HU","Somogy_HU","Szabolcs-Szatmar-Bereg_HU","Tolna_HU","Vas_HU","Veszprem_HU","Zala_HU"],k_=["Aceh_ID","Bali_ID","Banten_ID","Bengkulu_ID","Gorontalo_ID","Jakarta Raya_ID","Jambi_ID","Jawa Barat_ID","Jawa Tengah_ID","Jawa Timur_ID","Kalimantan Barat_ID","Kalimantan Selatan_ID","Kalimantan Tengah_ID","Kalimantan Timur_ID","Kalimantan Utara_ID","Kepulauan Bangka Belitung_ID","Kepulauan Riau_ID","Lampung_ID","Maluku_ID","Maluku Utara_ID","Nusa Tenggara Barat_ID","Nusa Tenggara Timur_ID","Papua_ID","Papua Barat_ID","Riau_ID","Sulawesi Barat_ID","Sulawesi Selatan_ID","Sulawesi Tengah_ID","Sulawesi Tenggara_ID","Sulawesi Utara_ID","Sumatera Barat_ID","Sumatera Selatan_ID","Sumatera Utara_ID","Yogyakarta_ID"],R_=["Carlow_IE","Cavan_IE","Clare_IE","Cork_IE","Donegal_IE","Dublin_IE","Galway_IE","Kerry_IE","Kildare_IE","Kilkenny_IE","Laois_IE","Leitrim_IE","Limerick_IE","Longford_IE","Louth_IE","Mayo_IE","Meath_IE","Monaghan_IE","Offaly_IE","Roscommon_IE","Sligo_IE","Tipperary_IE","Waterford_IE","Westmeath_IE","Wexford_IE","Wicklow_IE"],b_=["HaDarom_IL","HaMerkaz_IL","HaTsafon_IL","Hefa_IL","Tel Aviv_IL","Yerushalayim_IL"],P_=["Isle of Man_IM"],B_=["Andaman and Nicobar Islands_IN","Andhra Pradesh_IN","Arunachal Pradesh_IN","Assam_IN","Bihar_IN","Chandigarh_IN","Chhattisgarh_IN","Dadra and Nagar Haveli_IN","Daman and Diu_IN","Delhi_IN","Goa_IN","Gujarat_IN","Haryana_IN","Himachal Pradesh_IN","Jammu and Kashmir_IN","Jharkhand_IN","Karnataka_IN","Kerala_IN","Lakshadweep_IN","Madhya Pradesh_IN","Maharashtra_IN","Manipur_IN","Meghalaya_IN","Mizoram_IN","Nagaland_IN","Odisha_IN","Puducherry_IN","Punjab_IN","Rajasthan_IN","Sikkim_IN","Tamil Nadu_IN","Telangana_IN","Tripura_IN","Uttar Pradesh_IN","Uttarakhand_IN","West Bengal_IN"],I_=["British Indian Ocean Territory_IO"],N_=["Al Anbar_IQ","Al Basrah_IQ","Al Muthanna_IQ","Al Qadisiyah_IQ","An Najaf_IQ","Arbil_IQ","As Sulaymaniyah_IQ","Babil_IQ","Baghdad_IQ","Dahuk_IQ","Dhi Qar_IQ","Diyala_IQ","Karbala'_IQ","Kirkuk_IQ","Maysan_IQ","Ninawa_IQ","Salah ad Din_IQ","Wasit_IQ"],E_=["Alborz_IR","Ardabil_IR","Azarbayjan-e Gharbi_IR","Azarbayjan-e Sharqi_IR","Bushehr_IR","Chahar Mahal va Bakhtiari_IR","Esfahan_IR","Fars_IR","Gilan_IR","Golestan_IR","Hamadan_IR","Hormozgan_IR","Ilam_IR","Kerman_IR","Kermanshah_IR","Khorasan-e Jonubi_IR","Khorasan-e Razavi_IR","Khorasan-e Shomali_IR","Khuzestan_IR","Kohgiluyeh va Bowyer Ahmad_IR","Kordestan_IR","Lorestan_IR","Markazi_IR","Mazandaran_IR","Qazvin_IR","Qom_IR","Semnan_IR","Sistan va Baluchestan_IR","Tehran_IR","Yazd_IR","Zanjan_IR"],G_=["Austurland_IS","Hofudborgarsvaedi_IS","Nordurland eystra_IS","Nordurland vestra_IS","Sudurland_IS","Sudurnes_IS","Vestfirdir_IS","Vesturland_IS"],x_=["Abruzzo_IT","Basilicata_IT","Calabria_IT","Campania_IT","Emilia-Romagna_IT","Friuli-Venezia Giulia_IT","Lazio_IT","Liguria_IT","Lombardia_IT","Marche_IT","Molise_IT","Piemonte_IT","Puglia_IT","Sardegna_IT","Sicilia_IT","Toscana_IT","Trentino-Alto Adige_IT","Umbria_IT","Valle d'Aosta_IT","Veneto_IT"],K_=["Jersey_JE"],U_=["Clarendon_JM","Hanover_JM","Kingston_JM","Manchester_JM","Portland_JM","Saint Andrew_JM","Saint Ann_JM","Saint Catherine_JM","Saint Elizabeth_JM","Saint James_JM","Saint Mary_JM","Saint Thomas_JM","Trelawny_JM","Westmoreland_JM"],D_=["'Ajlun_JO","Al 'Aqabah_JO","Al 'Asimah_JO","Al Balqa'_JO","Al Karak_JO","Al Mafraq_JO","At Tafilah_JO","Az Zarqa'_JO","Irbid_JO","Jarash_JO","Ma'an_JO","Madaba_JO"],L_=["Aichi_JP","Akita_JP","Aomori_JP","Chiba_JP","Ehime_JP","Fukui_JP","Fukuoka_JP","Fukushima_JP","Gifu_JP","Gunma_JP","Hiroshima_JP","Hokkaido_JP","Hyogo_JP","Ibaraki_JP","Ishikawa_JP","Iwate_JP","Kagawa_JP","Kagoshima_JP","Kanagawa_JP","Kochi_JP","Kumamoto_JP","Kyoto_JP","Mie_JP","Miyagi_JP","Miyazaki_JP","Nagano_JP","Nagasaki_JP","Nara_JP","Niigata_JP","Oita_JP","Okayama_JP","Okinawa_JP","Osaka_JP","Saga_JP","Saitama_JP","Shiga_JP","Shimane_JP","Shizuoka_JP","Tochigi_JP","Tokushima_JP","Tokyo_JP","Tottori_JP","Toyama_JP","Wakayama_JP","Yamagata_JP","Yamaguchi_JP","Yamanashi_JP"],H_=["Baringo_KE","Bomet_KE","Bungoma_KE","Busia_KE","Elgeyo/Marakwet_KE","Embu_KE","Garissa_KE","Homa Bay_KE","Isiolo_KE","Kajiado_KE","Kakamega_KE","Kericho_KE","Kiambu_KE","Kilifi_KE","Kirinyaga_KE","Kisii_KE","Kisumu_KE","Kitui_KE","Kwale_KE","Laikipia_KE","Lamu_KE","Machakos_KE","Makueni_KE","Mandera_KE","Marsabit_KE","Meru_KE","Migori_KE","Mombasa_KE","Murang'a_KE","Nairobi City_KE","Nakuru_KE","Nandi_KE","Narok_KE","Nyamira_KE","Nyandarua_KE","Nyeri_KE","Samburu_KE","Siaya_KE","Taita/Taveta_KE","Tana River_KE","Tharaka-Nithi_KE","Trans Nzoia_KE","Turkana_KE","Uasin Gishu_KE","Vihiga_KE","Wajir_KE","West Pokot_KE"],w_=["Batken_KG","Bishkek_KG","Chuy_KG","Jalal-Abad_KG","Naryn_KG","Osh_KG","Talas_KG","Ysyk-Kol_KG"],V_=["Baat Dambang_KH","Banteay Mean Chey_KH","Kampong Chaam_KH","Kampong Chhnang_KH","Kampong Spueu_KH","Kampong Thum_KH","Kampot_KH","Kandaal_KH","Kaoh Kong_KH","Kracheh_KH","Krong Kaeb_KH","Krong Pailin_KH","Krong Preah Sihanouk_KH","Mondol Kiri_KH","Otdar Mean Chey_KH","Phnom Penh_KH","Pousaat_KH","Preah Vihear_KH","Prey Veaeng_KH","Rotanak Kiri_KH","Siem Reab_KH","Stueng Traeng_KH","Svaay Rieng_KH","Taakaev_KH"],O_=["Gilbert Islands_KI","Line Islands_KI"],F_=["Anjouan_KM","Grande Comore_KM","Moheli_KM"],Z_=["Christ Church Nichola Town_KN","Saint Anne Sandy Point_KN","Saint George Basseterre_KN","Saint George Gingerland_KN","Saint James Windward_KN","Saint John Capisterre_KN","Saint John Figtree_KN","Saint Mary Cayon_KN","Saint Paul Capisterre_KN","Saint Paul Charlestown_KN","Saint Peter Basseterre_KN","Saint Thomas Lowland_KN","Saint Thomas Middle Island_KN","Trinity Palmetto Point_KN"],j_=["Chagang-do_KP","Hamgyong-bukto_KP","Hamgyong-namdo_KP","Hwanghae-bukto_KP","Hwanghae-namdo_KP","Kangwon-do_KP","P'yongan-bukto_KP","P'yongan-namdo_KP","P'yongyang_KP","Rason_KP","Ryanggang-do_KP"],z_=["Busan-gwangyeoksi_KR","Chungcheongbuk-do_KR","Chungcheongnam-do_KR","Daegu-gwangyeoksi_KR","Daejeon-gwangyeoksi_KR","Gangwon-do_KR","Gwangju-gwangyeoksi_KR","Gyeonggi-do_KR","Gyeongsangbuk-do_KR","Gyeongsangnam-do_KR","Incheon-gwangyeoksi_KR","Jeju-teukbyeoljachido_KR","Jeollabuk-do_KR","Jeollanam-do_KR","Seoul-teukbyeolsi_KR","Ulsan-gwangyeoksi_KR"],J_=["Al 'Asimah_KW","Al Ahmadi_KW","Al Farwaniyah_KW","Al Jahra'_KW","Hawalli_KW","Mubarak al Kabir_KW"],Y_=["Cayman Islands_KY"],W_=["Almaty_KZ","Almaty oblysy_KZ","Aqmola oblysy_KZ","Aqtobe oblysy_KZ","Astana_KZ","Atyrau oblysy_KZ","Batys Qazaqstan oblysy_KZ","Bayqongyr_KZ","Mangghystau oblysy_KZ","Ongtustik Qazaqstan oblysy_KZ","Pavlodar oblysy_KZ","Qaraghandy oblysy_KZ","Qostanay oblysy_KZ","Qyzylorda oblysy_KZ","Shyghys Qazaqstan oblysy_KZ","Soltustik Qazaqstan oblysy_KZ","Zhambyl oblysy_KZ"],q_=["Attapu_LA","Bokeo_LA","Bolikhamxai_LA","Champasak_LA","Houaphan_LA","Khammouan_LA","Louang Namtha_LA","Louangphabang_LA","Oudomxai_LA","Phongsali_LA","Salavan_LA","Savannakhet_LA","Viangchan_LA","Xaignabouli_LA","Xekong_LA","Xiangkhouang_LA"],Q_=["Aakkar_LB","Baalbek-Hermel_LB","Beqaa_LB","Beyrouth_LB","Liban-Nord_LB","Liban-Sud_LB","Mont-Liban_LB","Nabatiye_LB"],X_=["Anse la Raye_LC","Castries_LC","Choiseul_LC","Dennery_LC","Gros Islet_LC","Laborie_LC","Micoud_LC","Soufriere_LC","Vieux Fort_LC"],$_=["Balzers_LI","Eschen_LI","Gamprin_LI","Mauren_LI","Planken_LI","Ruggell_LI","Schaan_LI","Schellenberg_LI","Triesen_LI","Triesenberg_LI","Vaduz_LI"],eo=["Central Province_LK","Eastern Province_LK","North Central Province_LK","North Western Province_LK","Northern Province_LK","Sabaragamuwa Province_LK","Southern Province_LK","Uva Province_LK","Western Province_LK"],ao=["Bomi_LR","Bong_LR","Gbarpolu_LR","Grand Bassa_LR","Grand Cape Mount_LR","Grand Gedeh_LR","Grand Kru_LR","Lofa_LR","Margibi_LR","Maryland_LR","Montserrado_LR","Nimba_LR","River Cess_LR","River Gee_LR","Sinoe_LR"],to=["Berea_LS","Butha-Buthe_LS","Leribe_LS","Mafeteng_LS","Maseru_LS","Mohale's Hoek_LS","Mokhotlong_LS","Qacha's Nek_LS","Quthing_LS","Thaba-Tseka_LS"],no=["Alytaus apskritis_LT","Kauno apskritis_LT","Klaipedos apskritis_LT","Marijampoles apskritis_LT","Panevezio apskritis_LT","Siauliu apskritis_LT","Taurages apskritis_LT","Telsiu apskritis_LT","Utenos apskritis_LT","Vilniaus apskritis_LT"],io=["Diekirch_LU","Grevenmacher_LU","Luxembourg_LU"],_o=["Adazu novads_LV","Aglonas novads_LV","Aizkraukles novads_LV","Aizputes novads_LV","Alojas novads_LV","Aluksnes novads_LV","Babites novads_LV","Baldones novads_LV","Baltinavas novads_LV","Balvu novads_LV","Bauskas novads_LV","Beverinas novads_LV","Brocenu novads_LV","Carnikavas novads_LV","Cesu novads_LV","Cesvaines novads_LV","Ciblas novads_LV","Daugavpils novads_LV","Dobeles novads_LV","Dundagas novads_LV","Erglu novads_LV","Gulbenes novads_LV","Iecavas novads_LV","Ikskiles novads_LV","Incukalna novads_LV","Jaunjelgavas novads_LV","Jaunpiebalgas novads_LV","Jaunpils novads_LV","Jekabpils novads_LV","Jelgava_LV","Jelgavas novads_LV","Jurmala_LV","Kekavas novads_LV","Kokneses novads_LV","Kraslavas novads_LV","Kuldigas novads_LV","Lielvardes novads_LV","Liepaja_LV","Limbazu novads_LV","Livanu novads_LV","Lubanas novads_LV","Ludzas novads_LV","Madonas novads_LV","Malpils novads_LV","Nauksenu novads_LV","Ogres novads_LV","Olaines novads_LV","Ozolnieku novads_LV","Preilu novads_LV","Rezeknes novads_LV","Riebinu novads_LV","Riga_LV","Rojas novads_LV","Ropazu novads_LV","Rugaju novads_LV","Rundales novads_LV","Salacgrivas novads_LV","Salaspils novads_LV","Saldus novads_LV","Saulkrastu novads_LV","Sejas novads_LV","Siguldas novads_LV","Skrundas novads_LV","Stopinu novads_LV","Strencu novads_LV","Talsu novads_LV","Tukuma novads_LV","Vainodes novads_LV","Valkas novads_LV","Valmiera_LV","Varkavas novads_LV","Vecumnieku novads_LV","Ventspils novads_LV"],oo=["Al Butnan_LY","Al Jabal al Akhdar_LY","Al Jabal al Gharbi_LY","Al Jafarah_LY","Al Jufrah_LY","Al Kufrah_LY","Al Marj_LY","Al Marqab_LY","Al Wahat_LY","An Nuqat al Khams_LY","Az Zawiyah_LY","Banghazi_LY","Darnah_LY","Ghat_LY","Misratah_LY","Murzuq_LY","Nalut_LY","Sabha_LY","Surt_LY","Tarabulus_LY","Wadi al Hayat_LY","Wadi ash Shati'_LY"],ro=["Beni-Mellal-Khenifra_MA","Casablanca-Settat_MA","Draa-Tafilalet_MA","Fes- Meknes_MA","Guelmim-Oued Noun (EH-partial)_MA","L'Oriental_MA","Laayoune-Sakia El Hamra (EH-partial)_MA","Marrakech-Safi_MA","Rabat-Sale-Kenitra_MA","Souss-Massa_MA","Tanger-Tetouan-Al Hoceima_MA"],so=["Fontvieille_MC","La Condamine_MC","Monaco-Ville_MC","Moneghetti_MC","Monte-Carlo_MC","Saint-Roman_MC"],lo=["Anenii Noi_MD","Balti_MD","Basarabeasca_MD","Bender_MD","Briceni_MD","Cahul_MD","Calarasi_MD","Cantemir_MD","Causeni_MD","Chisinau_MD","Cimislia_MD","Criuleni_MD","Donduseni_MD","Drochia_MD","Dubasari_MD","Edinet_MD","Falesti_MD","Floresti_MD","Gagauzia, Unitatea teritoriala autonoma_MD","Glodeni_MD","Hincesti_MD","Ialoveni_MD","Leova_MD","Nisporeni_MD","Ocnita_MD","Orhei_MD","Rezina_MD","Riscani_MD","Singerei_MD","Soldanesti_MD","Soroca_MD","Stefan Voda_MD","Stinga Nistrului, unitatea teritoriala din_MD","Straseni_MD","Taraclia_MD","Telenesti_MD","Ungheni_MD"],uo=["Andrijevica_ME","Bar_ME","Berane_ME","Bijelo Polje_ME","Budva_ME","Cetinje_ME","Danilovgrad_ME","Herceg-Novi_ME","Kolasin_ME","Kotor_ME","Mojkovac_ME","Niksic_ME","Plav_ME","Pljevlja_ME","Pluzine_ME","Podgorica_ME","Rozaje_ME","Savnik_ME","Tivat_ME","Ulcinj_ME","Zabljak_ME"],go=["Saint Martin (French Part)_MF"],ho=["Antananarivo_MG","Antsiranana_MG","Fianarantsoa_MG","Mahajanga_MG","Toamasina_MG","Toliara_MG"],co=["Ailinglaplap_MH","Ailuk_MH","Arno_MH","Aur_MH","Bikini & Kili_MH","Ebon_MH","Enewetak & Ujelang_MH","Jabat_MH","Jaluit_MH","Kwajalein_MH","Lae_MH","Lib_MH","Likiep_MH","Majuro_MH","Maloelap_MH","Mejit_MH","Mili_MH","Namdrik_MH","Namu_MH","Rongelap_MH","Ujae_MH","Utrik_MH","Wotho_MH","Wotje_MH"],So=["Aracinovo_MK","Berovo_MK","Bitola_MK","Bogdanci_MK","Bogovinje_MK","Bosilovo_MK","Brvenica_MK","Caska_MK","Centar Zupa_MK","Cesinovo-Oblesevo_MK","Cucer Sandevo_MK","Debar_MK","Debarca_MK","Delcevo_MK","Demir Hisar_MK","Demir Kapija_MK","Dojran_MK","Dolneni_MK","Gevgelija_MK","Gostivar_MK","Gradsko_MK","Ilinden_MK","Jegunovce_MK","Karbinci_MK","Kavadarci_MK","Kicevo_MK","Kocani_MK","Konce_MK","Kratovo_MK","Kriva Palanka_MK","Krivogastani_MK","Krusevo_MK","Kumanovo_MK","Lipkovo_MK","Lozovo_MK","Makedonska Kamenica_MK","Makedonski Brod_MK","Mavrovo i Rostusa_MK","Mogila_MK","Negotino_MK","Novaci_MK","Novo Selo_MK","Ohrid_MK","Pehcevo_MK","Petrovec_MK","Plasnica_MK","Prilep_MK","Probistip_MK","Radovis_MK","Rankovce_MK","Resen_MK","Rosoman_MK","Skopje_MK","Sopiste_MK","Staro Nagoricane_MK","Stip_MK","Struga_MK","Strumica_MK","Studenicani_MK","Sveti Nikole_MK","Tearce_MK","Tetovo_MK","Valandovo_MK","Vasilevo_MK","Veles_MK","Vevcani_MK","Vinica_MK","Vrapciste_MK","Zelenikovo_MK","Zelino_MK","Zrnovci_MK"],mo=["Bamako_ML","Gao_ML","Kayes_ML","Kidal_ML","Koulikoro_ML","Mopti_ML","Segou_ML","Sikasso_ML","Tombouctou_ML"],Co=["Ayeyarwady_MM","Bago_MM","Chin_MM","Kachin_MM","Kayah_MM","Kayin_MM","Magway_MM","Mandalay_MM","Mon_MM","Nay Pyi Taw_MM","Rakhine_MM","Sagaing_MM","Shan_MM","Tanintharyi_MM","Yangon_MM"],Mo=["Arhangay_MN","Bayan-Olgiy_MN","Bayanhongor_MN","Bulgan_MN","Darhan uul_MN","Dornod_MN","Dornogovi_MN","Dundgovi_MN","Dzavhan_MN","Govi-Altay_MN","Govi-Sumber_MN","Hentiy_MN","Hovd_MN","Hovsgol_MN","Omnogovi_MN","Orhon_MN","Ovorhangay_MN","Selenge_MN","Suhbaatar_MN","Tov_MN","Ulaanbaatar_MN","Uvs_MN"],Ao=["Macao_MO"],To=["Northern Mariana Islands_MP"],fo=["Martinique_MQ"],yo=["Adrar_MR","Assaba_MR","Brakna_MR","Dakhlet Nouadhibou_MR","Gorgol_MR","Guidimaka_MR","Hodh ech Chargui_MR","Hodh el Gharbi_MR","Inchiri_MR","Nouakchott Nord_MR","Tagant_MR","Tiris Zemmour_MR","Trarza_MR"],po=["Saint Anthony_MS","Saint Peter_MS"],vo=["Attard_MT","Balzan_MT","Birgu_MT","Birkirkara_MT","Birzebbuga_MT","Bormla_MT","Dingli_MT","Fgura_MT","Floriana_MT","Fontana_MT","Ghajnsielem_MT","Gharb_MT","Gharghur_MT","Ghasri_MT","Ghaxaq_MT","Gudja_MT","Gzira_MT","Hamrun_MT","Iklin_MT","Isla_MT","Kalkara_MT","Kercem_MT","Kirkop_MT","Lija_MT","Luqa_MT","Marsa_MT","Marsaskala_MT","Marsaxlokk_MT","Mdina_MT","Mellieha_MT","Mgarr_MT","Mosta_MT","Mqabba_MT","Msida_MT","Mtarfa_MT","Munxar_MT","Nadur_MT","Naxxar_MT","Paola_MT","Pembroke_MT","Pieta_MT","Qala_MT","Qormi_MT","Qrendi_MT","Rabat Gozo_MT","Rabat Malta_MT","Safi_MT","Saint John_MT","Saint Julian's_MT","Saint Lucia's_MT","Saint Paul's Bay_MT","Sannat_MT","Santa Venera_MT","Siggiewi_MT","Sliema_MT","Swieqi_MT","Ta' Xbiex_MT","Tarxien_MT","Valletta_MT","Xaghra_MT","Xewkija_MT","Xghajra_MT","Zabbar_MT","Zebbug Gozo_MT","Zejtun_MT","Zurrieq_MT"],ko=["Agalega Islands_MU","Black River_MU","Flacq_MU","Grand Port_MU","Moka_MU","Pamplemousses_MU","Plaines Wilhems_MU","Port Louis_MU","Riviere du Rempart_MU","Rodrigues Islands_MU","Savanne_MU"],Ro=["Alifu Alifu_MV","Baa_MV","Dhaalu_MV","Gaafu Dhaalu_MV","Gnaviyani_MV","Haa Alifu_MV","Haa Dhaalu_MV","Kaafu_MV","Laamu_MV","Maale_MV","Meemu_MV","Noonu_MV","Raa_MV","Seenu_MV","Shaviyani_MV","Thaa_MV","Vaavu_MV"],bo=["Balaka_MW","Blantyre_MW","Chikwawa_MW","Chiradzulu_MW","Chitipa_MW","Dedza_MW","Dowa_MW","Karonga_MW","Kasungu_MW","Likoma_MW","Lilongwe_MW","Machinga_MW","Mangochi_MW","Mchinji_MW","Mulanje_MW","Mwanza_MW","Mzimba_MW","Neno_MW","Nkhata Bay_MW","Nkhotakota_MW","Nsanje_MW","Ntcheu_MW","Ntchisi_MW","Phalombe_MW","Rumphi_MW","Salima_MW","Thyolo_MW","Zomba_MW"],Po=["Aguascalientes_MX","Baja California_MX","Baja California Sur_MX","Campeche_MX","Chiapas_MX","Chihuahua_MX","Ciudad de Mexico_MX","Coahuila de Zaragoza_MX","Colima_MX","Durango_MX","Guanajuato_MX","Guerrero_MX","Hidalgo_MX","Jalisco_MX","Mexico_MX","Michoacan de Ocampo_MX","Morelos_MX","Nayarit_MX","Nuevo Leon_MX","Oaxaca_MX","Puebla_MX","Queretaro_MX","Quintana Roo_MX","San Luis Potosi_MX","Sinaloa_MX","Sonora_MX","Tabasco_MX","Tamaulipas_MX","Tlaxcala_MX","Veracruz de Ignacio de la Llave_MX","Yucatan_MX","Zacatecas_MX"],Bo=["Johor_MY","Kedah_MY","Kelantan_MY","Melaka_MY","Negeri Sembilan_MY","Pahang_MY","Perak_MY","Perlis_MY","Pulau Pinang_MY","Sabah_MY","Sarawak_MY","Selangor_MY","Terengganu_MY","Wilayah Persekutuan Kuala Lumpur_MY","Wilayah Persekutuan Labuan_MY","Wilayah Persekutuan Putrajaya_MY"],Io=["Cabo Delgado_MZ","Gaza_MZ","Inhambane_MZ","Manica_MZ","Maputo_MZ","Nampula_MZ","Niassa_MZ","Sofala_MZ","Tete_MZ","Zambezia_MZ"],No=["Erongo_NA","Hardap_NA","Karas_NA","Kavango East_NA","Khomas_NA","Kunene_NA","Ohangwena_NA","Omaheke_NA","Omusati_NA","Oshana_NA","Oshikoto_NA","Otjozondjupa_NA","Zambezi_NA"],Eo=["Province des iles Loyaute_NC","Province Nord_NC","Province Sud_NC"],Go=["Agadez_NE","Diffa_NE","Dosso_NE","Maradi_NE","Niamey_NE","Tahoua_NE","Tillaberi_NE","Zinder_NE"],xo=["Norfolk Island_NF"],Ko=["Abia_NG","Abuja Federal Capital Territory_NG","Adamawa_NG","Akwa Ibom_NG","Anambra_NG","Bauchi_NG","Bayelsa_NG","Benue_NG","Borno_NG","Cross River_NG","Delta_NG","Ebonyi_NG","Edo_NG","Ekiti_NG","Enugu_NG","Gombe_NG","Imo_NG","Jigawa_NG","Kaduna_NG","Kano_NG","Katsina_NG","Kebbi_NG","Kogi_NG","Kwara_NG","Lagos_NG","Nasarawa_NG","Niger_NG","Ogun_NG","Ondo_NG","Osun_NG","Oyo_NG","Plateau_NG","Rivers_NG","Sokoto_NG","Taraba_NG","Yobe_NG","Zamfara_NG"],Uo=["Boaco_NI","Carazo_NI","Chinandega_NI","Chontales_NI","Costa Caribe Norte_NI","Costa Caribe Sur_NI","Esteli_NI","Granada_NI","Jinotega_NI","Leon_NI","Madriz_NI","Managua_NI","Masaya_NI","Matagalpa_NI","Nueva Segovia_NI","Rio San Juan_NI","Rivas_NI"],Do=["Drenthe_NL","Flevoland_NL","Fryslan_NL","Gelderland_NL","Groningen_NL","Limburg_NL","Noord-Brabant_NL","Noord-Holland_NL","Overijssel_NL","Utrecht_NL","Zeeland_NL","Zuid-Holland_NL"],Lo=["Akershus_NO","Aust-Agder_NO","Buskerud_NO","Finnmark_NO","Hedmark_NO","Hordaland_NO","More og Romsdal_NO","Nord-Trondelag_NO","Nordland_NO","Oppland_NO","Oslo_NO","Ostfold_NO","Rogaland_NO","Sogn og Fjordane_NO","Sor-Trondelag_NO","Telemark_NO","Troms_NO","Vest-Agder_NO","Vestfold_NO"],Ho=["Bagmati_NP","Bheri_NP","Dhawalagiri_NP","Gandaki_NP","Janakpur_NP","Karnali_NP","Kosi_NP","Lumbini_NP","Mahakali_NP","Mechi_NP","Narayani_NP","Rapti_NP","Sagarmatha_NP","Seti_NP"],wo=["Aiwo_NR","Anabar_NR","Anetan_NR","Anibare_NR","Baitsi_NR","Buada_NR","Ewa_NR","Ijuw_NR","Uaboe_NR","Yaren_NR"],Vo=["Niue_NU"],Oo=["Auckland_NZ","Bay of Plenty_NZ","Canterbury_NZ","Chatham Islands Territory_NZ","Gisborne_NZ","Hawke's Bay_NZ","Manawatu-Wanganui_NZ","Marlborough_NZ","Nelson_NZ","Northland_NZ","Otago_NZ","Southland_NZ","Taranaki_NZ","Tasman_NZ","Waikato_NZ","Wellington_NZ","West Coast_NZ"],Fo=["Ad Dakhiliyah_OM","Al Buraymi_OM","Al Wusta_OM","Az Zahirah_OM","Janub al Batinah_OM","Janub ash Sharqiyah_OM","Masqat_OM","Musandam_OM","Shamal al Batinah_OM","Shamal ash Sharqiyah_OM","Zufar_OM"],Zo=["Bocas del Toro_PA","Chiriqui_PA","Cocle_PA","Colon_PA","Darien_PA","Embera_PA","Guna Yala_PA","Herrera_PA","Los Santos_PA","Ngobe-Bugle_PA","Panama_PA","Veraguas_PA"],jo=["Amazonas_PE","Ancash_PE","Apurimac_PE","Arequipa_PE","Ayacucho_PE","Cajamarca_PE","Cusco_PE","El Callao_PE","Huancavelica_PE","Huanuco_PE","Ica_PE","Junin_PE","La Libertad_PE","Lambayeque_PE","Lima_PE","Loreto_PE","Madre de Dios_PE","Moquegua_PE","Pasco_PE","Piura_PE","Puno_PE","San Martin_PE","Tacna_PE","Tumbes_PE","Ucayali_PE"],zo=["Iles Australes_PF","Iles du Vent_PF","Iles Marquises_PF","Iles Sous-le-Vent_PF","Iles Tuamotu-Gambier_PF"],Jo=["Bougainville_PG","Central_PG","Chimbu_PG","East New Britain_PG","East Sepik_PG","Eastern Highlands_PG","Enga_PG","Gulf_PG","Madang_PG","Manus_PG","Milne Bay_PG","Morobe_PG","National Capital District (Port Moresby)_PG","New Ireland_PG","Northern_PG","Southern Highlands_PG","West New Britain_PG","West Sepik_PG","Western_PG","Western Highlands_PG"],Yo=["Abra_PH","Agusan del Norte_PH","Agusan del Sur_PH","Aklan_PH","Albay_PH","Antique_PH","Apayao_PH","Aurora_PH","Basilan_PH","Bataan_PH","Batanes_PH","Batangas_PH","Benguet_PH","Biliran_PH","Bohol_PH","Bukidnon_PH","Bulacan_PH","Cagayan_PH","Camarines Norte_PH","Camarines Sur_PH","Camiguin_PH","Capiz_PH","Catanduanes_PH","Cavite_PH","Cebu_PH","Compostela Valley_PH","Cotabato_PH","Davao del Norte_PH","Davao del Sur_PH","Davao Oriental_PH","Dinagat Islands_PH","Eastern Samar_PH","Guimaras_PH","Ifugao_PH","Ilocos Norte_PH","Ilocos Sur_PH","Iloilo_PH","Isabela_PH","Kalinga_PH","La Union_PH","Laguna_PH","Lanao del Norte_PH","Lanao del Sur_PH","Leyte_PH","Maguindanao_PH","Marinduque_PH","Masbate_PH","Mindoro Occidental_PH","Mindoro Oriental_PH","Misamis Occidental_PH","Misamis Oriental_PH","Mountain Province_PH","National Capital Region_PH","Negros Occidental_PH","Negros Oriental_PH","Northern Samar_PH","Nueva Ecija_PH","Nueva Vizcaya_PH","Palawan_PH","Pampanga_PH","Pangasinan_PH","Quezon_PH","Quirino_PH","Rizal_PH","Romblon_PH","Samar_PH","Sarangani_PH","Siquijor_PH","Sorsogon_PH","South Cotabato_PH","Southern Leyte_PH","Sultan Kudarat_PH","Sulu_PH","Surigao del Norte_PH","Surigao del Sur_PH","Tarlac_PH","Tawi-Tawi_PH","Zambales_PH","Zamboanga del Norte_PH","Zamboanga del Sur_PH","Zamboanga Sibugay_PH"],Wo=["Azad Jammu and Kashmir_PK","Balochistan_PK","Federally Administered Tribal Areas_PK","Gilgit-Baltistan_PK","Islamabad_PK","Khyber Pakhtunkhwa_PK","Punjab_PK","Sindh_PK"],qo=["Dolnoslaskie_PL","Kujawsko-pomorskie_PL","Lodzkie_PL","Lubelskie_PL","Lubuskie_PL","Malopolskie_PL","Mazowieckie_PL","Opolskie_PL","Podkarpackie_PL","Podlaskie_PL","Pomorskie_PL","Slaskie_PL","Swietokrzyskie_PL","Warminsko-mazurskie_PL","Wielkopolskie_PL","Zachodniopomorskie_PL"],Qo=["Saint Pierre and Miquelon_PM"],Xo=["Pitcairn_PN"],$o=["Adjuntas_PR","Aguada_PR","Aguadilla_PR","Aguas Buenas_PR","Aibonito_PR","Anasco_PR","Arecibo_PR","Arroyo_PR","Barceloneta_PR","Barranquitas_PR","Bayamon_PR","Cabo Rojo_PR","Caguas_PR","Camuy_PR","Canovanas_PR","Carolina_PR","Catano_PR","Cayey_PR","Ceiba_PR","Ciales_PR","Cidra_PR","Coamo_PR","Comerio_PR","Corozal_PR","Culebra_PR","Dorado_PR","Fajardo_PR","Florida_PR","Guanica_PR","Guayama_PR","Guayanilla_PR","Guaynabo_PR","Gurabo_PR","Hatillo_PR","Hormigueros_PR","Humacao_PR","Isabela_PR","Juana Diaz_PR","Lajas_PR","Lares_PR","Las Marias_PR","Las Piedras_PR","Loiza_PR","Luquillo_PR","Manati_PR","Maricao_PR","Maunabo_PR","Mayaguez_PR","Moca_PR","Morovis_PR","Municipio de Jayuya_PR","Municipio de Juncos_PR","Naguabo_PR","Naranjito_PR","Patillas_PR","Penuelas_PR","Ponce_PR","Quebradillas_PR","Rincon_PR","Rio Grande_PR","Sabana Grande_PR","Salinas_PR","San German_PR","San Juan_PR","San Lorenzo_PR","San Sebastian_PR","Santa Isabel Municipio_PR","Toa Alta_PR","Toa Baja_PR","Trujillo Alto_PR","Utuado_PR","Vega Alta_PR","Vega Baja_PR","Vieques_PR","Villalba_PR","Yabucoa_PR","Yauco_PR"],er=["Bethlehem_PS","Gaza_PS","Hebron_PS","Jenin_PS","Jericho and Al Aghwar_PS","Jerusalem_PS","Nablus_PS","Qalqilya_PS","Ramallah_PS","Salfit_PS","Tubas_PS","Tulkarm_PS"],ar=["Aveiro_PT","Beja_PT","Braga_PT","Braganca_PT","Castelo Branco_PT","Coimbra_PT","Evora_PT","Faro_PT","Guarda_PT","Leiria_PT","Lisboa_PT","Portalegre_PT","Porto_PT","Regiao Autonoma da Madeira_PT","Regiao Autonoma dos Acores_PT","Santarem_PT","Setubal_PT","Viana do Castelo_PT","Vila Real_PT","Viseu_PT"],tr=["Aimeliik_PW","Airai_PW","Angaur_PW","Hatohobei_PW","Kayangel_PW","Koror_PW","Melekeok_PW","Ngaraard_PW","Ngarchelong_PW","Ngardmau_PW","Ngatpang_PW","Ngchesar_PW","Ngeremlengui_PW","Ngiwal_PW","Peleliu_PW","Sonsorol_PW"],nr=["Alto Paraguay_PY","Alto Parana_PY","Amambay_PY","Asuncion_PY","Boqueron_PY","Caaguazu_PY","Caazapa_PY","Canindeyu_PY","Central_PY","Concepcion_PY","Cordillera_PY","Guaira_PY","Itapua_PY","Misiones_PY","Neembucu_PY","Paraguari_PY","Presidente Hayes_PY","San Pedro_PY"],ir=["Ad Dawhah_QA","Al Khawr wa adh Dhakhirah_QA","Al Wakrah_QA","Ar Rayyan_QA","Ash Shamal_QA","Az Za'ayin_QA","Umm Salal_QA"],_r=["Reunion_RE"],or=["Alba_RO","Arad_RO","Arges_RO","Bacau_RO","Bihor_RO","Bistrita-Nasaud_RO","Botosani_RO","Braila_RO","Brasov_RO","Bucuresti_RO","Buzau_RO","Calarasi_RO","Caras-Severin_RO","Cluj_RO","Constanta_RO","Covasna_RO","Dambovita_RO","Dolj_RO","Galati_RO","Giurgiu_RO","Gorj_RO","Harghita_RO","Hunedoara_RO","Ialomita_RO","Iasi_RO","Ilfov_RO","Maramures_RO","Mehedinti_RO","Mures_RO","Neamt_RO","Olt_RO","Prahova_RO","Salaj_RO","Satu Mare_RO","Sibiu_RO","Suceava_RO","Teleorman_RO","Timis_RO","Tulcea_RO","Valcea_RO","Vaslui_RO","Vrancea_RO"],rr=["Beograd_RS","Borski okrug_RS","Branicevski okrug_RS","Jablanicki okrug_RS","Juznobacki okrug_RS","Juznobanatski okrug_RS","Kolubarski okrug_RS","Kosovsko-Mitrovacki okrug_RS","Macvanski okrug_RS","Moravicki okrug_RS","Nisavski okrug_RS","Pcinjski okrug_RS","Pecki okrug_RS","Pirotski okrug_RS","Podunavski okrug_RS","Pomoravski okrug_RS","Prizrenski okrug_RS","Rasinski okrug_RS","Raski okrug_RS","Severnobacki okrug_RS","Severnobanatski okrug_RS","Srednjebanatski okrug_RS","Sremski okrug_RS","Sumadijski okrug_RS","Toplicki okrug_RS","Zajecarski okrug_RS","Zapadnobacki okrug_RS","Zlatiborski okrug_RS"],sr=["Adygeya, Respublika_RU","Altay, Respublika_RU","Altayskiy kray_RU","Amurskaya oblast'_RU","Arkhangel'skaya oblast'_RU","Astrakhanskaya oblast'_RU","Bashkortostan, Respublika_RU","Belgorodskaya oblast'_RU","Bryanskaya oblast'_RU","Buryatiya, Respublika_RU","Chechenskaya Respublika_RU","Chelyabinskaya oblast'_RU","Chukotskiy avtonomnyy okrug_RU","Chuvashskaya Respublika_RU","Dagestan, Respublika_RU","Ingushetiya, Respublika_RU","Irkutskaya oblast'_RU","Ivanovskaya oblast'_RU","Kabardino-Balkarskaya Respublika_RU","Kaliningradskaya oblast'_RU","Kalmykiya, Respublika_RU","Kaluzhskaya oblast'_RU","Kamchatskiy kray_RU","Karachayevo-Cherkesskaya Respublika_RU","Kareliya, Respublika_RU","Kemerovskaya oblast'_RU","Khabarovskiy kray_RU","Khakasiya, Respublika_RU","Khanty-Mansiyskiy avtonomnyy okrug_RU","Kirovskaya oblast'_RU","Komi, Respublika_RU","Kostromskaya oblast'_RU","Krasnodarskiy kray_RU","Krasnoyarskiy kray_RU","Kurganskaya oblast'_RU","Kurskaya oblast'_RU","Leningradskaya oblast'_RU","Lipetskaya oblast'_RU","Magadanskaya oblast'_RU","Mariy El, Respublika_RU","Mordoviya, Respublika_RU","Moskovskaya oblast'_RU","Moskva_RU","Murmanskaya oblast'_RU","Nenetskiy avtonomnyy okrug_RU","Nizhegorodskaya oblast'_RU","Novgorodskaya oblast'_RU","Novosibirskaya oblast'_RU","Omskaya oblast'_RU","Orenburgskaya oblast'_RU","Orlovskaya oblast'_RU","Penzenskaya oblast'_RU","Permskiy kray_RU","Primorskiy kray_RU","Pskovskaya oblast'_RU","Rostovskaya oblast'_RU","Ryazanskaya oblast'_RU","Saha, Respublika_RU","Sakhalinskaya oblast'_RU","Samarskaya oblast'_RU","Sankt-Peterburg_RU","Saratovskaya oblast'_RU","Severnaya Osetiya, Respublika_RU","Smolenskaya oblast'_RU","Stavropol'skiy kray_RU","Sverdlovskaya oblast'_RU","Tambovskaya oblast'_RU","Tatarstan, Respublika_RU","Tomskaya oblast'_RU","Tul'skaya oblast'_RU","Tverskaya oblast'_RU","Tyumenskaya oblast'_RU","Tyva, Respublika_RU","Udmurtskaya Respublika_RU","Ul'yanovskaya oblast'_RU","Vladimirskaya oblast'_RU","Volgogradskaya oblast'_RU","Vologodskaya oblast'_RU","Voronezhskaya oblast'_RU","Yamalo-Nenetskiy avtonomnyy okrug_RU","Yaroslavskaya oblast'_RU","Yevreyskaya avtonomnaya oblast'_RU","Zabaykal'skiy kray_RU"],lr=["Est_RW","Nord_RW","Ouest_RW","Sud_RW","Ville de Kigali_RW"],ur=["'Asir_SA","Al Bahah_SA","Al Hudud ash Shamaliyah_SA","Al Jawf_SA","Al Madinah al Munawwarah_SA","Al Qasim_SA","Ar Riyad_SA","Ash Sharqiyah_SA","Ha'il_SA","Jazan_SA","Makkah al Mukarramah_SA","Najran_SA","Tabuk_SA"],gr=["Central_SB","Choiseul_SB","Guadalcanal_SB","Isabel_SB","Makira-Ulawa_SB","Malaita_SB","Rennell and Bellona_SB","Temotu_SB","Western_SB"],hr=["Anse aux Pins_SC","Anse Boileau_SC","Anse Royale_SC","Baie Lazare_SC","Beau Vallon_SC","Bel Ombre_SC","Cascade_SC","English River_SC","Grand Anse Mahe_SC","La Digue_SC","Pointe Larue_SC","Port Glaud_SC","Takamaka_SC"],cr=["Blue Nile_SD","Gedaref_SD","Gezira_SD","Kassala_SD","Khartoum_SD","North Darfur_SD","North Kordofan_SD","Northern_SD","Red Sea_SD","River Nile_SD","Sennar_SD","South Darfur_SD","South Kordofan_SD","West Darfur_SD","White Nile_SD"],dr=["Blekinge lan_SE","Dalarnas lan_SE","Gavleborgs lan_SE","Gotlands lan_SE","Hallands lan_SE","Jamtlands lan_SE","Jonkopings lan_SE","Kalmar lan_SE","Kronobergs lan_SE","Norrbottens lan_SE","Orebro lan_SE","Ostergotlands lan_SE","Skane lan_SE","Sodermanlands lan_SE","Stockholms lan_SE","Uppsala lan_SE","Varmlands lan_SE","Vasterbottens lan_SE","Vasternorrlands lan_SE","Vastmanlands lan_SE","Vastra Gotalands lan_SE"],Sr=["Singapore_SG"],mr=["Ascension_SH","Saint Helena_SH","Tristan da Cunha_SH"],Cr=["Ajdovscina_SI","Apace_SI","Beltinci_SI","Benedikt_SI","Bistrica ob Sotli_SI","Bled_SI","Bloke_SI","Bohinj_SI","Borovnica_SI","Bovec_SI","Braslovce_SI","Brda_SI","Brezice_SI","Brezovica_SI","Cankova_SI","Celje_SI","Cerklje na Gorenjskem_SI","Cerknica_SI","Cerkno_SI","Cirkulane_SI","Crensovci_SI","Crnomelj_SI","Destrnik_SI","Divaca_SI","Dobje_SI","Dobrepolje_SI","Dobrna_SI","Dobrova-Polhov Gradec_SI","Dobrovnik_SI","Domzale_SI","Dornava_SI","Dravograd_SI","Duplek_SI","Gorje_SI","Gornja Radgona_SI","Gornji Petrovci_SI","Grad_SI","Grosuplje_SI","Hajdina_SI","Hoce-Slivnica_SI","Hodos_SI","Horjul_SI","Hrastnik_SI","Hrpelje-Kozina_SI","Idrija_SI","Ig_SI","Ilirska Bistrica_SI","Ivancna Gorica_SI","Izola_SI","Jesenice_SI","Jursinci_SI","Kamnik_SI","Kanal_SI","Kidricevo_SI","Kobarid_SI","Kobilje_SI","Kocevje_SI","Komen_SI","Komenda_SI","Koper_SI","Kosanjevica na Krki_SI","Kostel_SI","Kranj_SI","Kranjska Gora_SI","Krizevci_SI","Krsko_SI","Kungota_SI","Kuzma_SI","Lasko_SI","Lenart_SI","Lendava_SI","Litija_SI","Ljubljana_SI","Ljutomer_SI","Log-Dragomer_SI","Logatec_SI","Loska Dolina_SI","Loski Potok_SI","Lovrenc na Pohorju_SI","Luce_SI","Lukovica_SI","Majsperk_SI","Makole_SI","Maribor_SI","Markovci_SI","Medvode_SI","Menges_SI","Metlika_SI","Mezica_SI","Miklavz na Dravskem Polju_SI","Miren-Kostanjevica_SI","Mirna Pec_SI","Mislinja_SI","Mokronog-Trebelno_SI","Moravce_SI","Mozirje_SI","Murska Sobota_SI","Muta_SI","Naklo_SI","Nazarje_SI","Nova Gorica_SI","Novo Mesto_SI","Odranci_SI","Oplotnica_SI","Ormoz_SI","Piran_SI","Pivka_SI","Podcetrtek_SI","Podlehnik_SI","Poljcane_SI","Polzela_SI","Postojna_SI","Prebold_SI","Preddvor_SI","Prevalje_SI","Ptuj_SI","Puconci_SI","Race-Fram_SI","Radece_SI","Radenci_SI","Radlje ob Dravi_SI","Radovljica_SI","Ravne na Koroskem_SI","Razkrizje_SI","Recica ob Savinji_SI","Rence-Vogrsko_SI","Ribnica_SI","Rogaska Slatina_SI","Rogasovci_SI","Ruse_SI","Salovci_SI","Semic_SI","Sempeter-Vrtojba_SI","Sencur_SI","Sentilj_SI","Sentjernej_SI","Sentjur_SI","Sentrupert_SI","Sevnica_SI","Sezana_SI","Skocjan_SI","Skofja Loka_SI","Skofljica_SI","Slovenj Gradec_SI","Slovenska Bistrica_SI","Slovenske Konjice_SI","Smarje pri Jelsah_SI","Smarjeske Toplice_SI","Smartno ob Paki_SI","Smartno pri Litiji_SI","Sodrazica_SI","Solcava_SI","Sostanj_SI","Starse_SI","Store_SI","Straza_SI","Sveta Trojica v Slovenskih Goricah_SI","Sveti Andraz v Slovenskih Goricah_SI","Sveti Jurij_SI","Sveti Jurij v Slovenskih Goricah_SI","Sveti Tomaz_SI","Tabor_SI","Tisina_SI","Tolmin_SI","Trbovlje_SI","Trebnje_SI","Trnovska Vas_SI","Trzic_SI","Trzin_SI","Turnisce_SI","Velenje_SI","Velika Polana_SI","Velike Lasce_SI","Verzej_SI","Videm_SI","Vipava_SI","Vitanje_SI","Vodice_SI","Vojnik_SI","Vransko_SI","Vrhnika_SI","Vuzenica_SI","Zagorje ob Savi_SI","Zalec_SI","Zavrc_SI","Zelezniki_SI","Zetale_SI","Ziri_SI","Zrece_SI","Zuzemberk_SI"],Mr=["Svalbard and Jan Mayen_SJ"],Ar=["Banskobystricky kraj_SK","Bratislavsky kraj_SK","Kosicky kraj_SK","Nitriansky kraj_SK","Presovsky kraj_SK","Trenciansky kraj_SK","Trnavsky kraj_SK","Zilinsky kraj_SK"],Tr=["Eastern_SL","Northern_SL","Southern_SL","Western Area_SL"],fr=["Acquaviva_SM","Borgo Maggiore_SM","Chiesanuova_SM","Domagnano_SM","Faetano_SM","Fiorentino_SM","Montegiardino_SM","San Marino_SM","Serravalle_SM"],yr=["Dakar_SN","Diourbel_SN","Fatick_SN","Kaffrine_SN","Kaolack_SN","Kedougou_SN","Kolda_SN","Louga_SN","Matam_SN","Saint-Louis_SN","Sedhiou_SN","Tambacounda_SN","Thies_SN","Ziguinchor_SN"],pr=["Awdal_SO","Bakool_SO","Banaadir_SO","Bari_SO","Bay_SO","Galguduud_SO","Gedo_SO","Hiiraan_SO","Jubbada Dhexe_SO","Jubbada Hoose_SO","Mudug_SO","Nugaal_SO","Sanaag_SO","Shabeellaha Dhexe_SO","Shabeellaha Hoose_SO","Sool_SO","Togdheer_SO","Woqooyi Galbeed_SO"],vr=["Brokopondo_SR","Commewijne_SR","Coronie_SR","Marowijne_SR","Nickerie_SR","Para_SR","Paramaribo_SR","Saramacca_SR","Sipaliwini_SR","Wanica_SR"],kr=["Central Equatoria_SS","Eastern Equatoria_SS","Jonglei_SS","Lakes_SS","Northern Bahr el Ghazal_SS","Unity_SS","Upper Nile_SS","Warrap_SS","Western Bahr el Ghazal_SS","Western Equatoria_SS"],Rr=["Principe_ST","Sao Tome_ST"],br=["Ahuachapan_SV","Cabanas_SV","Chalatenango_SV","Cuscatlan_SV","La Libertad_SV","La Paz_SV","La Union_SV","Morazan_SV","San Miguel_SV","San Salvador_SV","San Vicente_SV","Santa Ana_SV","Sonsonate_SV","Usulutan_SV"],Pr=["Sint Maarten (Dutch Part)_SX"],Br=["Al Hasakah_SY","Al Ladhiqiyah_SY","Al Qunaytirah_SY","Ar Raqqah_SY","As Suwayda'_SY","Dar'a_SY","Dayr az Zawr_SY","Dimashq_SY","Halab_SY","Hamah_SY","Hims_SY","Idlib_SY","Rif Dimashq_SY","Tartus_SY"],Ir=["Hhohho_SZ","Lubombo_SZ","Manzini_SZ","Shiselweni_SZ"],Nr=["Turks and Caicos Islands_TC"],Er=["Bahr el Gazel_TD","Batha_TD","Borkou_TD","Chari-Baguirmi_TD","Guera_TD","Hadjer Lamis_TD","Kanem_TD","Lac_TD","Logone-Occidental_TD","Logone-Oriental_TD","Mandoul_TD","Mayo-Kebbi-Est_TD","Mayo-Kebbi-Ouest_TD","Moyen-Chari_TD","Ouaddai_TD","Salamat_TD","Sila_TD","Tandjile_TD","Tibesti_TD","Ville de Ndjamena_TD","Wadi Fira_TD"],Gr=["French Southern Territories_TF"],xr=["Centrale_TG","Kara_TG","Maritime_TG","Plateaux_TG","Savanes_TG"],Kr=["Amnat Charoen_TH","Ang Thong_TH","Bueng Kan_TH","Buri Ram_TH","Chachoengsao_TH","Chai Nat_TH","Chaiyaphum_TH","Chanthaburi_TH","Chiang Mai_TH","Chiang Rai_TH","Chon Buri_TH","Chumphon_TH","Kalasin_TH","Kamphaeng Phet_TH","Kanchanaburi_TH","Khon Kaen_TH","Krabi_TH","Krung Thep Maha Nakhon_TH","Lampang_TH","Lamphun_TH","Loei_TH","Lop Buri_TH","Mae Hong Son_TH","Maha Sarakham_TH","Mukdahan_TH","Nakhon Nayok_TH","Nakhon Pathom_TH","Nakhon Phanom_TH","Nakhon Ratchasima_TH","Nakhon Sawan_TH","Nakhon Si Thammarat_TH","Nan_TH","Narathiwat_TH","Nong Bua Lam Phu_TH","Nong Khai_TH","Nonthaburi_TH","Pathum Thani_TH","Pattani_TH","Phangnga_TH","Phatthalung_TH","Phayao_TH","Phetchabun_TH","Phetchaburi_TH","Phichit_TH","Phitsanulok_TH","Phra Nakhon Si Ayutthaya_TH","Phrae_TH","Phuket_TH","Prachin Buri_TH","Prachuap Khiri Khan_TH","Ranong_TH","Ratchaburi_TH","Rayong_TH","Roi Et_TH","Sa Kaeo_TH","Sakon Nakhon_TH","Samut Prakan_TH","Samut Sakhon_TH","Samut Songkhram_TH","Saraburi_TH","Satun_TH","Si Sa Ket_TH","Sing Buri_TH","Songkhla_TH","Sukhothai_TH","Suphan Buri_TH","Surat Thani_TH","Surin_TH","Tak_TH","Trang_TH","Trat_TH","Ubon Ratchathani_TH","Udon Thani_TH","Uthai Thani_TH","Uttaradit_TH","Yala_TH","Yasothon_TH"],Ur=["Dushanbe_TJ","Khatlon_TJ","Kuhistoni Badakhshon_TJ","Nohiyahoi Tobei Jumhuri_TJ","Sughd_TJ"],Dr=["Tokelau_TK"],Lr=["Aileu_TL","Ainaro_TL","Baucau_TL","Bobonaro_TL","Cova Lima_TL","Dili_TL","Ermera_TL","Lautem_TL","Liquica_TL","Manatuto_TL","Manufahi_TL","Oecussi_TL","Viqueque_TL"],Hr=["Ahal_TM","Balkan_TM","Dasoguz_TM","Lebap_TM","Mary_TM"],wr=["Beja_TN","Ben Arous_TN","Bizerte_TN","Gabes_TN","Gafsa_TN","Jendouba_TN","Kairouan_TN","Kasserine_TN","Kebili_TN","L'Ariana_TN","La Manouba_TN","Le Kef_TN","Mahdia_TN","Medenine_TN","Monastir_TN","Nabeul_TN","Sfax_TN","Sidi Bouzid_TN","Siliana_TN","Sousse_TN","Tataouine_TN","Tozeur_TN","Tunis_TN","Zaghouan_TN"],Vr=["'Eua_TO","Ha'apai_TO","Niuas_TO","Tongatapu_TO","Vava'u_TO"],Or=["Adana_TR","Adiyaman_TR","Afyonkarahisar_TR","Agri_TR","Aksaray_TR","Amasya_TR","Ankara_TR","Antalya_TR","Ardahan_TR","Artvin_TR","Aydin_TR","Balikesir_TR","Bartin_TR","Batman_TR","Bayburt_TR","Bilecik_TR","Bingol_TR","Bitlis_TR","Bolu_TR","Burdur_TR","Bursa_TR","Canakkale_TR","Cankiri_TR","Corum_TR","Denizli_TR","Diyarbakir_TR","Duzce_TR","Edirne_TR","Elazig_TR","Erzincan_TR","Erzurum_TR","Eskisehir_TR","Gaziantep_TR","Giresun_TR","Gumushane_TR","Hakkari_TR","Hatay_TR","Igdir_TR","Isparta_TR","Istanbul_TR","Izmir_TR","Kahramanmaras_TR","Karabuk_TR","Karaman_TR","Kars_TR","Kastamonu_TR","Kayseri_TR","Kilis_TR","Kirikkale_TR","Kirklareli_TR","Kirsehir_TR","Kocaeli_TR","Konya_TR","Kutahya_TR","Malatya_TR","Manisa_TR","Mardin_TR","Mersin_TR","Mugla_TR","Mus_TR","Nevsehir_TR","Nigde_TR","Ordu_TR","Osmaniye_TR","Rize_TR","Sakarya_TR","Samsun_TR","Sanliurfa_TR","Siirt_TR","Sinop_TR","Sirnak_TR","Sivas_TR","Tekirdag_TR","Tokat_TR","Trabzon_TR","Tunceli_TR","Usak_TR","Van_TR","Yalova_TR","Yozgat_TR","Zonguldak_TR"],Fr=["Arima_TT","Chaguanas_TT","Couva-Tabaquite-Talparo_TT","Diego Martin_TT","Mayaro-Rio Claro_TT","Penal-Debe_TT","Point Fortin_TT","Port of Spain_TT","Princes Town_TT","San Fernando_TT","San Juan-Laventille_TT","Sangre Grande_TT","Siparia_TT","Tobago_TT","Tunapuna-Piarco_TT"],Zr=["Funafuti_TV","Nanumaga_TV","Nanumea_TV","Niutao_TV","Nui_TV","Nukufetau_TV","Nukulaelae_TV","Vaitupu_TV"],jr=["Changhua_TW","Chiayi_TW","Hsinchu_TW","Hualien_TW","Kaohsiung_TW","Keelung_TW","Kinmen_TW","Lienchiang_TW","Miaoli_TW","Nantou_TW","New Taipei_TW","Penghu_TW","Pingtung_TW","Taichung_TW","Tainan_TW","Taipei_TW","Taitung_TW","Taoyuan_TW","Yilan_TW","Yunlin_TW"],zr=["Arusha_TZ","Dar es Salaam_TZ","Dodoma_TZ","Geita_TZ","Iringa_TZ","Kagera_TZ","Kaskazini Pemba_TZ","Kaskazini Unguja_TZ","Katavi_TZ","Kigoma_TZ","Kilimanjaro_TZ","Kusini Pemba_TZ","Kusini Unguja_TZ","Lindi_TZ","Manyara_TZ","Mara_TZ","Mbeya_TZ","Mjini Magharibi_TZ","Morogoro_TZ","Mtwara_TZ","Mwanza_TZ","Njombe_TZ","Pwani_TZ","Rukwa_TZ","Ruvuma_TZ","Shinyanga_TZ","Simiyu_TZ","Singida_TZ","Tabora_TZ","Tanga_TZ"],Jr=["Avtonomna Respublika Krym_UA","Cherkaska oblast_UA","Chernihivska oblast_UA","Chernivetska oblast_UA","Dnipropetrovska oblast_UA","Donetska oblast_UA","Ivano-Frankivska oblast_UA","Kharkivska oblast_UA","Khersonska oblast_UA","Khmelnytska oblast_UA","Kirovohradska oblast_UA","Kyiv_UA","Kyivska oblast_UA","Luhanska oblast_UA","Lvivska oblast_UA","Mykolaivska oblast_UA","Odeska oblast_UA","Poltavska oblast_UA","Rivnenska oblast_UA","Sevastopol_UA","Sumska oblast_UA","Ternopilska oblast_UA","Vinnytska oblast_UA","Volynska oblast_UA","Zakarpatska oblast_UA","Zaporizka oblast_UA","Zhytomyrska oblast_UA"],Yr=["Abim_UG","Adjumani_UG","Agago_UG","Alebtong_UG","Amolatar_UG","Amudat_UG","Amuria_UG","Amuru_UG","Apac_UG","Arua_UG","Budaka_UG","Bududa_UG","Bugiri_UG","Buhweju_UG","Buikwe_UG","Bukedea_UG","Bukomansibi_UG","Bukwa_UG","Bulambuli_UG","Buliisa_UG","Bundibugyo_UG","Bushenyi_UG","Busia_UG","Butaleja_UG","Buvuma_UG","Buyende_UG","Dokolo_UG","Gomba_UG","Gulu_UG","Hoima_UG","Ibanda_UG","Iganga_UG","Isingiro_UG","Jinja_UG","Kaabong_UG","Kabale_UG","Kabarole_UG","Kaberamaido_UG","Kalangala_UG","Kaliro_UG","Kalungu_UG","Kampala_UG","Kamuli_UG","Kamwenge_UG","Kanungu_UG","Kapchorwa_UG","Kasese_UG","Katakwi_UG","Kayunga_UG","Kibaale_UG","Kiboga_UG","Kibuku_UG","Kiruhura_UG","Kiryandongo_UG","Kisoro_UG","Kitgum_UG","Koboko_UG","Kole_UG","Kotido_UG","Kumi_UG","Kween_UG","Kyankwanzi_UG","Kyegegwa_UG","Kyenjojo_UG","Lamwo_UG","Lira_UG","Luuka_UG","Luwero_UG","Lwengo_UG","Lyantonde_UG","Manafwa_UG","Maracha_UG","Masaka_UG","Masindi_UG","Mayuge_UG","Mbale_UG","Mbarara_UG","Mitooma_UG","Mityana_UG","Moroto_UG","Moyo_UG","Mpigi_UG","Mubende_UG","Mukono_UG","Nakapiripirit_UG","Nakaseke_UG","Nakasongola_UG","Namayingo_UG","Namutumba_UG","Napak_UG","Nebbi_UG","Ngora_UG","Ntoroko_UG","Ntungamo_UG","Nwoya_UG","Otuke_UG","Oyam_UG","Pader_UG","Pallisa_UG","Rakai_UG","Rubirizi_UG","Rukungiri_UG","Sembabule_UG","Serere_UG","Sheema_UG","Sironko_UG","Soroti_UG","Tororo_UG","Wakiso_UG","Yumbe_UG","Zombo_UG"],Wr=["Baker Island_UM","Howland Island_UM","Jarvis Island_UM","Palmyra Atoll_UM"],qr=["Alabama_US","Alaska_US","Arizona_US","Arkansas_US","California_US","Colorado_US","Connecticut_US","Delaware_US","District of Columbia_US","Florida_US","Georgia_US","Hawaii_US","Idaho_US","Illinois_US","Indiana_US","Iowa_US","Kansas_US","Kentucky_US","Louisiana_US","Maine_US","Maryland_US","Massachusetts_US","Michigan_US","Minnesota_US","Mississippi_US","Missouri_US","Montana_US","Nebraska_US","Nevada_US","New Hampshire_US","New Jersey_US","New Mexico_US","New York_US","North Carolina_US","North Dakota_US","Ohio_US","Oklahoma_US","Oregon_US","Pennsylvania_US","Rhode Island_US","South Carolina_US","South Dakota_US","Tennessee_US","Texas_US","Utah_US","Vermont_US","Virginia_US","Washington_US","West Virginia_US","Wisconsin_US","Wyoming_US"],Qr=["Artigas_UY","Canelones_UY","Cerro Largo_UY","Colonia_UY","Durazno_UY","Flores_UY","Florida_UY","Lavalleja_UY","Maldonado_UY","Montevideo_UY","Paysandu_UY","Rio Negro_UY","Rivera_UY","Rocha_UY","Salto_UY","San Jose_UY","Soriano_UY","Tacuarembo_UY","Treinta y Tres_UY"],Xr=["Andijon_UZ","Buxoro_UZ","Farg'ona_UZ","Jizzax_UZ","Namangan_UZ","Navoiy_UZ","Qashqadaryo_UZ","Qoraqalpog'iston Respublikasi_UZ","Samarqand_UZ","Sirdaryo_UZ","Surxondaryo_UZ","Toshkent_UZ","Xorazm_UZ"],$r=["Vatican City_VA"],es=["Charlotte_VC","Grenadines_VC","Saint David_VC","Saint George_VC","Saint Patrick_VC"],as=["Amazonas_VE","Anzoategui_VE","Apure_VE","Aragua_VE","Barinas_VE","Bolivar_VE","Carabobo_VE","Cojedes_VE","Delta Amacuro_VE","Dependencias Federales_VE","Distrito Capital_VE","Falcon_VE","Guarico_VE","Lara_VE","Merida_VE","Miranda_VE","Monagas_VE","Nueva Esparta_VE","Portuguesa_VE","Sucre_VE","Tachira_VE","Trujillo_VE","Vargas_VE","Yaracuy_VE","Zulia_VE"],ts=["Virgin Islands, British_VG"],ns=["Virgin Islands, U.S._VI"],is=["An Giang_VN","Ba Ria - Vung Tau_VN","Bac Giang_VN","Bac Kan_VN","Bac Lieu_VN","Bac Ninh_VN","Ben Tre_VN","Binh Dinh_VN","Binh Duong_VN","Binh Phuoc_VN","Binh Thuan_VN","Ca Mau_VN","Can Tho_VN","Cao Bang_VN","Da Nang_VN","Dak Lak_VN","Dak Nong_VN","Dien Bien_VN","Dong Nai_VN","Dong Thap_VN","Gia Lai_VN","Ha Giang_VN","Ha Nam_VN","Ha Noi_VN","Ha Tinh_VN","Hai Duong_VN","Hai Phong_VN","Ho Chi Minh_VN","Hoa Binh_VN","Hung Yen_VN","Khanh Hoa_VN","Kien Giang_VN","Kon Tum_VN","Lai Chau_VN","Lam Dong_VN","Lang Son_VN","Lao Cai_VN","Long An_VN","Nam Dinh_VN","Nghe An_VN","Ninh Binh_VN","Ninh Thuan_VN","Phu Tho_VN","Phu Yen_VN","Quang Binh_VN","Quang Nam_VN","Quang Ngai_VN","Quang Ninh_VN","Quang Tri_VN","Soc Trang_VN","Son La_VN","Tay Ninh_VN","Thai Binh_VN","Thai Nguyen_VN","Thanh Hoa_VN","Thua Thien-Hue_VN","Tien Giang_VN","Tra Vinh_VN","Tuyen Quang_VN","Vinh Long_VN","Vinh Phuc_VN","Yen Bai_VN"],_s=["Malampa_VU","Penama_VU","Sanma_VU","Shefa_VU","Tafea_VU","Torba_VU"],os=["Alo_WF","Sigave_WF","Uvea_WF"],rs=["A'ana_WS","Aiga-i-le-Tai_WS","Atua_WS","Fa'asaleleaga_WS","Gagaifomauga_WS","Palauli_WS","Satupa'itea_WS","Tuamasaga_WS","Va'a-o-Fonoti_WS","Vaisigano_WS"],ss=["'Adan_YE","'Amran_YE","Abyan_YE","Ad Dali'_YE","Al Bayda'_YE","Al Hudaydah_YE","Al Jawf_YE","Al Mahrah_YE","Al Mahwit_YE","Amanat al 'Asimah_YE","Dhamar_YE","Hadramawt_YE","Hajjah_YE","Ibb_YE","Lahij_YE","Ma'rib_YE","Raymah_YE","Sa'dah_YE","San'a'_YE","Shabwah_YE","Ta'izz_YE"],ls=["Acoua_YT","Bandraboua_YT","Bandrele_YT","Boueni_YT","Chiconi_YT","Chirongui_YT","Dzaoudzi_YT","Kani-Keli_YT","Koungou_YT","Mamoudzou_YT","Mtsamboro_YT","Ouangani_YT","Pamandzi_YT","Sada_YT","Tsingoni_YT"],us=["Eastern Cape_ZA","Free State_ZA","Gauteng_ZA","Kwazulu-Natal_ZA","Limpopo_ZA","Mpumalanga_ZA","North-West_ZA","Northern Cape_ZA","Western Cape_ZA"],gs=["Central_ZM","Copperbelt_ZM","Eastern_ZM","Luapula_ZM","Lusaka_ZM","North-Western_ZM","Northern_ZM","Southern_ZM","Western_ZM"],hs=["Bulawayo_ZW","Harare_ZW","Manicaland_ZW","Mashonaland Central_ZW","Mashonaland East_ZW","Mashonaland West_ZW","Masvingo_ZW","Matabeleland North_ZW","Matabeleland South_ZW","Midlands_ZW"],cs=[Kn.length,Un.length,Dn.length,Ln.length,Hn.length,wn.length,Vn.length,On.length,Fn.length,Zn.length,jn.length,zn.length,Jn.length,Yn.length,Wn.length,qn.length,Qn.length,Xn.length,$n.length,ei.length,ai.length,ti.length,ni.length,ii.length,_i.length,oi.length,ri.length,si.length,li.length,ui.length,gi.length,hi.length,ci.length,di.length,Si.length,mi.length,Ci.length,Mi.length,Ai.length,Ti.length,fi.length,yi.length,pi.length,vi.length,ki.length,Ri.length,bi.length,Pi.length,Bi.length,Ii.length,Ni.length,Ei.length,Gi.length,xi.length,Ki.length,Ui.length,Di.length,Li.length,Hi.length,wi.length,Vi.length,Oi.length,Fi.length,Zi.length,ji.length,zi.length,Ji.length,Yi.length,Wi.length,qi.length,Qi.length,Xi.length,$i.length,e_.length,a_.length,t_.length,n_.length,i_.length,__.length,o_.length,r_.length,s_.length,l_.length,u_.length,g_.length,h_.length,c_.length,d_.length,S_.length,m_.length,C_.length,M_.length,A_.length,T_.length,f_.length,y_.length,p_.length,v_.length,k_.length,R_.length,b_.length,P_.length,B_.length,I_.length,N_.length,E_.length,G_.length,x_.length,K_.length,U_.length,D_.length,L_.length,H_.length,w_.length,V_.length,O_.length,F_.length,Z_.length,j_.length,z_.length,J_.length,Y_.length,W_.length,q_.length,Q_.length,X_.length,$_.length,eo.length,ao.length,to.length,no.length,io.length,_o.length,oo.length,ro.length,so.length,lo.length,uo.length,go.length,ho.length,co.length,So.length,mo.length,Co.length,Mo.length,Ao.length,To.length,fo.length,yo.length,po.length,vo.length,ko.length,Ro.length,bo.length,Po.length,Bo.length,Io.length,No.length,Eo.length,Go.length,xo.length,Ko.length,Uo.length,Do.length,Lo.length,Ho.length,wo.length,Vo.length,Oo.length,Fo.length,Zo.length,jo.length,zo.length,Jo.length,Yo.length,Wo.length,qo.length,Qo.length,Xo.length,$o.length,er.length,ar.length,tr.length,nr.length,ir.length,_r.length,or.length,rr.length,sr.length,lr.length,ur.length,gr.length,hr.length,cr.length,dr.length,Sr.length,mr.length,Cr.length,Mr.length,Ar.length,Tr.length,fr.length,yr.length,pr.length,vr.length,kr.length,Rr.length,br.length,Pr.length,Br.length,Ir.length,Nr.length,Er.length,Gr.length,xr.length,Kr.length,Ur.length,Dr.length,Lr.length,Hr.length,wr.length,Vr.length,Or.length,Fr.length,Zr.length,jr.length,zr.length,Jr.length,Yr.length,Wr.length,qr.length,Qr.length,Xr.length,$r.length,es.length,as.length,ts.length,ns.length,is.length,_s.length,os.length,rs.length,ss.length,ls.length,us.length,gs.length,hs.length],ds=Math.max.apply(Math,cs),Ss=[],ms=[],Cs=[],Ms=[],As=[],Ts=[],fs=[],ys=[],ps=[],vs=[],ks=[],Rs=[],bs=[],Ps=[],Bs=[],Is=[],Ns=[],Es=[],Gs=[],xs=[],Ks=[],Us=[],Ds=[],Ls=[],Hs=[],ws=[],Vs=[],Os=[],Fs=[],Zs=[],js=[],zs=[],Js=[],Ys=[],Ws=[],qs=[],Qs=[],Xs=[],$s=[],el=[],al=[],tl=[],nl=[],il=[],_l=[],ol=[],rl=[],sl=[],ll=[],ul=[],gl=[],hl=[],cl=[],dl=[],Sl=[],ml=[],Cl=[],Ml=[],Al=[],Tl=[],fl=[],yl=[],pl=[],vl=[],kl=[],Rl=[],bl=[],Pl=[],Bl=[],Il=[],Nl=[],El=[],Gl=[],xl=[],Kl=[],Ul=[],Dl=[],Ll=[],Hl=[],wl=[],Vl=[],Ol=[],Fl=[],Zl=[],jl=[],zl=[],Jl=[],Yl=[],Wl=[],ql=[],Ql=[],Xl=[],$l=[],eu=[],au=[],tu=[],nu=[],iu=[],_u=[],ou=[],ru=[],su=[],lu=[],uu=[],gu=[],hu=[],cu=[],du=[],Su=[],mu=[],Cu=[],Mu=[],Au=[],Tu=[],fu=[],yu=[],pu=[],vu=[],ku=[],Ru=[],bu=[],Pu=[],Bu=[],Iu=[],Nu=[],Eu=[],Gu=[],xu=[],Ku=[],Uu=[],Du=[],Lu=[],Hu=[],wu=[],Vu=[],Ou=[],Fu=[],Zu=[],ju=[],zu=[],Ju=[],Yu=[],Wu=[],qu=[],Qu=[],Xu=[],$u=[],eg=[],ag=[],tg=[],ng=[],ig=[],_g=[],og=[],rg=[],sg=[],lg=[],ug=[],gg=[],hg=[],cg=[],dg=[],Sg=[],mg=[],Cg=[],Mg=[],Ag=[],Tg=[],fg=[],yg=[],pg=[],vg=[],kg=[],Rg=[],bg=[],Pg=[],Bg=[],Ig=[],Ng=[],Eg=[],Gg=[],xg=[],Kg=[],Ug=[],Dg=[],Lg=[],Hg=[],wg=[],Vg=[],Og=[],Fg=[],Zg=[],jg=[],zg=[],Jg=[],Yg=[],Wg=[],qg=[],Qg=[],Xg=[],$g=[],eh=[],ah=[],th=[],nh=[],ih=[],_h=[],oh=[],rh=[],sh=[],lh=[],uh=[],gh=[],hh=[],ch=[],dh=[],Sh=[],mh=[],Ch=[],Mh=[],Ah=[],Th=[],fh=[],yh=[],ph=[],vh=[],kh=[],Rh=[],bh=[],Ph=[],Bh=[],Ih=[],Nh=[],Eh=[],Gh=[],xh=[],Kh=[],Uh=[],Dh=[],Lh=[],Hh=[],wh=[],Vh=[],Oh=[],Fh=[],Zh=[],jh=[],zh=0;zh<ds;zh++)Ss+=t.gettext(Kn[zh])+"|",ms+=t.gettext(Un[zh])+"|",Cs+=t.gettext(Dn[zh])+"|",Ms+=t.gettext(Ln[zh])+"|",As+=t.gettext(Hn[zh])+"|",Ts+=t.gettext(wn[zh])+"|",fs+=t.gettext(Vn[zh])+"|",ys+=t.gettext(On[zh])+"|",ps+=t.gettext(Fn[zh])+"|",vs+=t.gettext(Zn[zh])+"|",ks+=t.gettext(jn[zh])+"|",Rs+=t.gettext(zn[zh])+"|",bs+=t.gettext(Jn[zh])+"|",Ps+=t.gettext(Yn[zh])+"|",Bs+=t.gettext(Wn[zh])+"|",Is+=t.gettext(qn[zh])+"|",Ns+=t.gettext(Qn[zh])+"|",Es+=t.gettext(Xn[zh])+"|",Gs+=t.gettext($n[zh])+"|",xs+=t.gettext(ei[zh])+"|",Ks+=t.gettext(ai[zh])+"|",Us+=t.gettext(ti[zh])+"|",Ds+=t.gettext(ni[zh])+"|",Ls+=t.gettext(ii[zh])+"|",Hs+=t.gettext(_i[zh])+"|",ws+=t.gettext(oi[zh])+"|",Vs+=t.gettext(ri[zh])+"|",Os+=t.gettext(si[zh])+"|",Fs+=t.gettext(li[zh])+"|",Zs+=t.gettext(ui[zh])+"|",js+=t.gettext(gi[zh])+"|",zs+=t.gettext(hi[zh])+"|",Js+=t.gettext(ci[zh])+"|",Ys+=t.gettext(di[zh])+"|",Ws+=t.gettext(Si[zh])+"|",qs+=t.gettext(mi[zh])+"|",Qs+=t.gettext(Ci[zh])+"|",Xs+=t.gettext(Mi[zh])+"|",$s+=t.gettext(Ai[zh])+"|",el+=t.gettext(Ti[zh])+"|",al+=t.gettext(fi[zh])+"|",tl+=t.gettext(yi[zh])+"|",nl+=t.gettext(pi[zh])+"|",il+=t.gettext(vi[zh])+"|",_l+=t.gettext(ki[zh])+"|",ol+=t.gettext(Ri[zh])+"|",rl+=t.gettext(bi[zh])+"|",sl+=t.gettext(Pi[zh])+"|",ll+=t.gettext(Bi[zh])+"|",ul+=t.gettext(Ii[zh])+"|",gl+=t.gettext(Ni[zh])+"|",hl+=t.gettext(Ei[zh])+"|",cl+=t.gettext(Gi[zh])+"|",dl+=t.gettext(xi[zh])+"|",Sl+=t.gettext(Ki[zh])+"|",ml+=t.gettext(Ui[zh])+"|",Cl+=t.gettext(Di[zh])+"|",Ml+=t.gettext(Li[zh])+"|",Al+=t.gettext(Hi[zh])+"|",Tl+=t.gettext(wi[zh])+"|",fl+=t.gettext(Vi[zh])+"|",yl+=t.gettext(Oi[zh])+"|",pl+=t.gettext(Fi[zh])+"|",vl+=t.gettext(Zi[zh])+"|",kl+=t.gettext(ji[zh])+"|",Rl+=t.gettext(zi[zh])+"|",bl+=t.gettext(Ji[zh])+"|",Pl+=t.gettext(Yi[zh])+"|",Bl+=t.gettext(Wi[zh])+"|",Il+=t.gettext(qi[zh])+"|",Nl+=t.gettext(Qi[zh])+"|",El+=t.gettext(Xi[zh])+"|",Gl+=t.gettext($i[zh])+"|",xl+=t.gettext(e_[zh])+"|",Kl+=t.gettext(a_[zh])+"|",Ul+=t.gettext(t_[zh])+"|",Dl+=t.gettext(n_[zh])+"|",Ll+=t.gettext(i_[zh])+"|",Hl+=t.gettext(__[zh])+"|",wl+=t.gettext(o_[zh])+"|",Vl+=t.gettext(r_[zh])+"|",Ol+=t.gettext(s_[zh])+"|",Fl+=t.gettext(l_[zh])+"|",Zl+=t.gettext(u_[zh])+"|",jl+=t.gettext(g_[zh])+"|",zl+=t.gettext(h_[zh])+"|",Jl+=t.gettext(c_[zh])+"|",Yl+=t.gettext(d_[zh])+"|",Wl+=t.gettext(S_[zh])+"|",ql+=t.gettext(m_[zh])+"|",Ql+=t.gettext(C_[zh])+"|",Xl+=t.gettext(M_[zh])+"|",$l+=t.gettext(A_[zh])+"|",eu+=t.gettext(T_[zh])+"|",au+=t.gettext(f_[zh])+"|",tu+=t.gettext(y_[zh])+"|",nu+=t.gettext(p_[zh])+"|",iu+=t.gettext(v_[zh])+"|",_u+=t.gettext(k_[zh])+"|",ou+=t.gettext(R_[zh])+"|",ru+=t.gettext(b_[zh])+"|",su+=t.gettext(P_[zh])+"|",lu+=t.gettext(B_[zh])+"|",uu+=t.gettext(I_[zh])+"|",gu+=t.gettext(N_[zh])+"|",hu+=t.gettext(E_[zh])+"|",cu+=t.gettext(G_[zh])+"|",du+=t.gettext(x_[zh])+"|",Su+=t.gettext(K_[zh])+"|",mu+=t.gettext(U_[zh])+"|",Cu+=t.gettext(D_[zh])+"|",Mu+=t.gettext(L_[zh])+"|",Au+=t.gettext(H_[zh])+"|",Tu+=t.gettext(w_[zh])+"|",fu+=t.gettext(V_[zh])+"|",yu+=t.gettext(O_[zh])+"|",pu+=t.gettext(F_[zh])+"|",vu+=t.gettext(Z_[zh])+"|",ku+=t.gettext(j_[zh])+"|",Ru+=t.gettext(z_[zh])+"|",bu+=t.gettext(J_[zh])+"|",Pu+=t.gettext(Y_[zh])+"|",Bu+=t.gettext(W_[zh])+"|",Iu+=t.gettext(q_[zh])+"|",Nu+=t.gettext(Q_[zh])+"|",Eu+=t.gettext(X_[zh])+"|",Gu+=t.gettext($_[zh])+"|",xu+=t.gettext(eo[zh])+"|",Ku+=t.gettext(ao[zh])+"|",Uu+=t.gettext(to[zh])+"|",Du+=t.gettext(no[zh])+"|",Lu+=t.gettext(io[zh])+"|",Hu+=t.gettext(_o[zh])+"|",wu+=t.gettext(oo[zh])+"|",Vu+=t.gettext(ro[zh])+"|",Ou+=t.gettext(so[zh])+"|",Fu+=t.gettext(lo[zh])+"|",Zu+=t.gettext(uo[zh])+"|",ju+=t.gettext(go[zh])+"|",zu+=t.gettext(ho[zh])+"|",Ju+=t.gettext(co[zh])+"|",Yu+=t.gettext(So[zh])+"|",Wu+=t.gettext(mo[zh])+"|",qu+=t.gettext(Co[zh])+"|",Qu+=t.gettext(Mo[zh])+"|",Xu+=t.gettext(Ao[zh])+"|",$u+=t.gettext(To[zh])+"|",eg+=t.gettext(fo[zh])+"|",ag+=t.gettext(yo[zh])+"|",tg+=t.gettext(po[zh])+"|",ng+=t.gettext(vo[zh])+"|",ig+=t.gettext(ko[zh])+"|",_g+=t.gettext(Ro[zh])+"|",og+=t.gettext(bo[zh])+"|",rg+=t.gettext(Po[zh])+"|",sg+=t.gettext(Bo[zh])+"|",lg+=t.gettext(Io[zh])+"|",ug+=t.gettext(No[zh])+"|",gg+=t.gettext(Eo[zh])+"|",hg+=t.gettext(Go[zh])+"|",cg+=t.gettext(xo[zh])+"|",dg+=t.gettext(Ko[zh])+"|",Sg+=t.gettext(Uo[zh])+"|",mg+=t.gettext(Do[zh])+"|",Cg+=t.gettext(Lo[zh])+"|",Mg+=t.gettext(Ho[zh])+"|",Ag+=t.gettext(wo[zh])+"|",Tg+=t.gettext(Vo[zh])+"|",fg+=t.gettext(Oo[zh])+"|",yg+=t.gettext(Fo[zh])+"|",pg+=t.gettext(Zo[zh])+"|",vg+=t.gettext(jo[zh])+"|",kg+=t.gettext(zo[zh])+"|",Rg+=t.gettext(Jo[zh])+"|",bg+=t.gettext(Yo[zh])+"|",Pg+=t.gettext(Wo[zh])+"|",Bg+=t.gettext(qo[zh])+"|",Ig+=t.gettext(Qo[zh])+"|",Ng+=t.gettext(Xo[zh])+"|",Eg+=t.gettext($o[zh])+"|",Gg+=t.gettext(er[zh])+"|",xg+=t.gettext(ar[zh])+"|",Kg+=t.gettext(tr[zh])+"|",Ug+=t.gettext(nr[zh])+"|",Dg+=t.gettext(ir[zh])+"|",Lg+=t.gettext(_r[zh])+"|",Hg+=t.gettext(or[zh])+"|",wg+=t.gettext(rr[zh])+"|",Vg+=t.gettext(sr[zh])+"|",Og+=t.gettext(lr[zh])+"|",Fg+=t.gettext(ur[zh])+"|",Zg+=t.gettext(gr[zh])+"|",jg+=t.gettext(hr[zh])+"|",zg+=t.gettext(cr[zh])+"|",Jg+=t.gettext(dr[zh])+"|",Yg+=t.gettext(Sr[zh])+"|",Wg+=t.gettext(mr[zh])+"|",qg+=t.gettext(Cr[zh])+"|",Qg+=t.gettext(Mr[zh])+"|",Xg+=t.gettext(Ar[zh])+"|",$g+=t.gettext(Tr[zh])+"|",eh+=t.gettext(fr[zh])+"|",ah+=t.gettext(yr[zh])+"|",th+=t.gettext(pr[zh])+"|",nh+=t.gettext(vr[zh])+"|",ih+=t.gettext(kr[zh])+"|",_h+=t.gettext(Rr[zh])+"|",oh+=t.gettext(br[zh])+"|",rh+=t.gettext(Pr[zh])+"|",sh+=t.gettext(Br[zh])+"|",lh+=t.gettext(Ir[zh])+"|",uh+=t.gettext(Nr[zh])+"|",gh+=t.gettext(Er[zh])+"|",hh+=t.gettext(Gr[zh])+"|",ch+=t.gettext(xr[zh])+"|",dh+=t.gettext(Kr[zh])+"|",Sh+=t.gettext(Ur[zh])+"|",mh+=t.gettext(Dr[zh])+"|",Ch+=t.gettext(Lr[zh])+"|",Mh+=t.gettext(Hr[zh])+"|",Ah+=t.gettext(wr[zh])+"|",Th+=t.gettext(Vr[zh])+"|",fh+=t.gettext(Or[zh])+"|",yh+=t.gettext(Fr[zh])+"|",ph+=t.gettext(Zr[zh])+"|",vh+=t.gettext(jr[zh])+"|",kh+=t.gettext(zr[zh])+"|",Rh+=t.gettext(Jr[zh])+"|",bh+=t.gettext(Yr[zh])+"|",Ph+=t.gettext(Wr[zh])+"|",Bh+=t.gettext(qr[zh])+"|",Ih+=t.gettext(Qr[zh])+"|",Nh+=t.gettext(Xr[zh])+"|",Eh+=t.gettext($r[zh])+"|",Gh+=t.gettext(es[zh])+"|",xh+=t.gettext(as[zh])+"|",Kh+=t.gettext(ts[zh])+"|",Uh+=t.gettext(ns[zh])+"|",Dh+=t.gettext(is[zh])+"|",Lh+=t.gettext(_s[zh])+"|",Hh+=t.gettext(os[zh])+"|",wh+=t.gettext(rs[zh])+"|",Vh+=t.gettext(ss[zh])+"|",Oh+=t.gettext(ls[zh])+"|",Fh+=t.gettext(us[zh])+"|",Zh+=t.gettext(gs[zh])+"|",jh+=t.gettext(hs[zh])+"|";var Jh=[["AF",_,Cs.slice(0,-(ds-Dn.length+1))],["AX",C,Bs.slice(0,-(ds-Wn.length+1))],["AL",s,Ts.slice(0,-(ds-wn.length+1))],["DZ",le,fl.slice(0,-(ds-Vi.length+1))],["AS",c,ks.slice(0,-(ds-jn.length+1))],["AD",n,Ss.slice(0,-(ds-Kn.length+1))],["AO",u,ys.slice(0,-(ds-On.length+1))],["AI",r,As.slice(0,-(ds-Hn.length+1))],["AQ",g,ps.slice(0,-(ds-Fn.length+1))],["AG",o,Ms.slice(0,-(ds-Ln.length+1))],["AR",h,vs.slice(0,-(ds-Zn.length+1))],["AM",l,fs.slice(0,-(ds-Vn.length+1))],["AW",m,Ps.slice(0,-(ds-Yn.length+1))],["AU",S,bs.slice(0,-(ds-Jn.length+1))],["AT",d,Rs.slice(0,-(ds-zn.length+1))],["AZ",M,Is.slice(0,-(ds-qn.length+1))],["BS",x,zs.slice(0,-(ds-hi.length+1))],["BH",k,Ds.slice(0,-(ds-ni.length+1))],["BD",f,Gs.slice(0,-(ds-$n.length+1))],["BB",T,Es.slice(0,-(ds-Xn.length+1))],["BY",D,Ws.slice(0,-(ds-Si.length+1))],["BE",y,xs.slice(0,-(ds-ei.length+1))],["BZ",L,qs.slice(0,-(ds-mi.length+1))],["BJ",b,Hs.slice(0,-(ds-_i.length+1))],["BM",B,Vs.slice(0,-(ds-ri.length+1))],["BT",K,Js.slice(0,-(ds-ci.length+1))],["BO",N,Fs.slice(0,-(ds-li.length+1))],["BQ",E,Zs.slice(0,-(ds-ui.length+1))],["BA",A,Ns.slice(0,-(ds-Qn.length+1))],["BW",U,Ys.slice(0,-(ds-di.length+1))],["BR",G,js.slice(0,-(ds-gi.length+1))],["IO",Xe,uu.slice(0,-(ds-I_.length+1))],["BN",I,Os.slice(0,-(ds-si.length+1))],["BG",v,Us.slice(0,-(ds-ti.length+1))],["BF",p,Ks.slice(0,-(ds-ai.length+1))],["BI",R,Ls.slice(0,-(ds-ii.length+1))],["CV",$,gl.slice(0,-(ds-Ni.length+1))],["KH",la,fu.slice(0,-(ds-V_.length+1))],["CM",Y,ol.slice(0,-(ds-Ri.length+1))],["CA",H,Qs.slice(0,-(ds-Ci.length+1))],["KY",ma,Pu.slice(0,-(ds-Y_.length+1))],["CF",O,el.slice(0,-(ds-Ti.length+1))],["TD",$t,gh.slice(0,-(ds-Er.length+1))],["CL",J,_l.slice(0,-(ds-ki.length+1))],["CN",W,rl.slice(0,-(ds-bi.length+1))],["CX",ae,cl.slice(0,-(ds-Gi.length+1))],["CC",w,Xs.slice(0,-(ds-Mi.length+1))],["CO",q,sl.slice(0,-(ds-Pi.length+1))],["KM",ga,pu.slice(0,-(ds-F_.length+1))],["CG",F,al.slice(0,-(ds-fi.length+1))],["CD",V,$s.slice(0,-(ds-Ai.length+1))],["CK",z,il.slice(0,-(ds-vi.length+1))],["CR",Q,ll.slice(0,-(ds-Bi.length+1))],["CI",j,nl.slice(0,-(ds-pi.length+1))],["HR",Ze,tu.slice(0,-(ds-y_.length+1))],["CU",X,ul.slice(0,-(ds-Ii.length+1))],["CW",ee,hl.slice(0,-(ds-Ei.length+1))],["CY",te,dl.slice(0,-(ds-xi.length+1))],["CZ",ne,Sl.slice(0,-(ds-Ki.length+1))],["DK",oe,Ml.slice(0,-(ds-Li.length+1))],["DJ",_e,Cl.slice(0,-(ds-Di.length+1))],["DM",re,Al.slice(0,-(ds-Hi.length+1))],["DO",se,Tl.slice(0,-(ds-wi.length+1))],["EC",ue,yl.slice(0,-(ds-Oi.length+1))],["EG",he,vl.slice(0,-(ds-Zi.length+1))],["SV",Yt,oh.slice(0,-(ds-br.length+1))],["GQ",Ke,Jl.slice(0,-(ds-c_.length+1))],["ER",de,Rl.slice(0,-(ds-zi.length+1))],["EE",ge,pl.slice(0,-(ds-Fi.length+1))],["ET",me,Pl.slice(0,-(ds-Yi.length+1))],["FK",Ae,Nl.slice(0,-(ds-Qi.length+1))],["FO",fe,Gl.slice(0,-(ds-$i.length+1))],["FJ",Me,Il.slice(0,-(ds-qi.length+1))],["FI",Ce,Bl.slice(0,-(ds-Wi.length+1))],["FR",ye,xl.slice(0,-(ds-e_.length+1))],["GF",be,Hl.slice(0,-(ds-__.length+1))],["PF",ct,kg.slice(0,-(ds-zo.length+1))],["TF",en,hh.slice(0,-(ds-Gr.length+1))],["GA",pe,Kl.slice(0,-(ds-a_.length+1))],["GM",Ee,Zl.slice(0,-(ds-u_.length+1))],["GE",Re,Ll.slice(0,-(ds-i_.length+1))],["DE",ie,ml.slice(0,-(ds-Ui.length+1))],["GH",Be,Vl.slice(0,-(ds-r_.length+1))],["GI",Ie,Ol.slice(0,-(ds-s_.length+1))],["GR",Ue,Yl.slice(0,-(ds-d_.length+1))],["GL",Ne,Fl.slice(0,-(ds-l_.length+1))],["GD",ke,Dl.slice(0,-(ds-n_.length+1))],["GP",xe,zl.slice(0,-(ds-h_.length+1))],["GU",He,Ql.slice(0,-(ds-C_.length+1))],["GT",Le,ql.slice(0,-(ds-m_.length+1))],["GG",Pe,wl.slice(0,-(ds-o_.length+1))],["GN",Ge,jl.slice(0,-(ds-g_.length+1))],["GW",we,Xl.slice(0,-(ds-M_.length+1))],["GY",Ve,$l.slice(0,-(ds-A_.length+1))],["HT",je,nu.slice(0,-(ds-p_.length+1))],["VA",fn,Eh.slice(0,-(ds-$r.length+1))],["HN",Fe,au.slice(0,-(ds-f_.length+1))],["HK",Oe,eu.slice(0,-(ds-T_.length+1))],["HU",ze,iu.slice(0,-(ds-v_.length+1))],["IS",aa,cu.slice(0,-(ds-G_.length+1))],["IN",Qe,lu.slice(0,-(ds-B_.length+1))],["ID",Je,_u.slice(0,-(ds-k_.length+1))],["IR",ea,hu.slice(0,-(ds-E_.length+1))],["IQ",$e,gu.slice(0,-(ds-N_.length+1))],["IE",Ye,ou.slice(0,-(ds-R_.length+1))],["IM",qe,su.slice(0,-(ds-P_.length+1))],["IL",We,ru.slice(0,-(ds-b_.length+1))],["IT",ta,du.slice(0,-(ds-x_.length+1))],["JM",ia,mu.slice(0,-(ds-U_.length+1))],["JP",oa,Mu.slice(0,-(ds-L_.length+1))],["JE",na,Su.slice(0,-(ds-K_.length+1))],["JO",_a,Cu.slice(0,-(ds-D_.length+1))],["KZ",Ca,Bu.slice(0,-(ds-W_.length+1))],["KE",ra,Au.slice(0,-(ds-H_.length+1))],["KI",ua,yu.slice(0,-(ds-O_.length+1))],["KP",ca,ku.slice(0,-(ds-j_.length+1))],["KR",da,Ru.slice(0,-(ds-z_.length+1))],["KW",Sa,bu.slice(0,-(ds-J_.length+1))],["KG",sa,Tu.slice(0,-(ds-w_.length+1))],["LA",Ma,Iu.slice(0,-(ds-q_.length+1))],["LV",ba,Hu.slice(0,-(ds-_o.length+1))],["LB",Aa,Nu.slice(0,-(ds-Q_.length+1))],["LS",va,Uu.slice(0,-(ds-to.length+1))],["LR",pa,Ku.slice(0,-(ds-ao.length+1))],["LY",Pa,wu.slice(0,-(ds-oo.length+1))],["LI",fa,Gu.slice(0,-(ds-$_.length+1))],["LT",ka,Du.slice(0,-(ds-no.length+1))],["LU",Ra,Lu.slice(0,-(ds-io.length+1))],["MO",wa,Xu.slice(0,-(ds-Ao.length+1))],["MK",Ua,Yu.slice(0,-(ds-So.length+1))],["MG",xa,zu.slice(0,-(ds-ho.length+1))],["MW",Ya,og.slice(0,-(ds-bo.length+1))],["MY",qa,sg.slice(0,-(ds-Bo.length+1))],["MV",Ja,_g.slice(0,-(ds-Ro.length+1))],["ML",Da,Wu.slice(0,-(ds-mo.length+1))],["MT",ja,ng.slice(0,-(ds-vo.length+1))],["MH",Ka,Ju.slice(0,-(ds-co.length+1))],["MQ",Oa,eg.slice(0,-(ds-fo.length+1))],["MR",Fa,ag.slice(0,-(ds-yo.length+1))],["MU",za,ig.slice(0,-(ds-ko.length+1))],["YT",Nn,Oh.slice(0,-(ds-ls.length+1))],["MX",Wa,rg.slice(0,-(ds-Po.length+1))],["FM",Te,El.slice(0,-(ds-Xi.length+1))],["MD",Na,Fu.slice(0,-(ds-lo.length+1))],["MC",Ia,Ou.slice(0,-(ds-so.length+1))],["MN",Ha,Qu.slice(0,-(ds-Mo.length+1))],["ME",Ea,Zu.slice(0,-(ds-uo.length+1))],["MS",Za,tg.slice(0,-(ds-po.length+1))],["MA",Ba,Vu.slice(0,-(ds-ro.length+1))],["MZ",Qa,lg.slice(0,-(ds-Io.length+1))],["MM",La,qu.slice(0,-(ds-Co.length+1))],["NA",Xa,ug.slice(0,-(ds-No.length+1))],["NR",rt,Ag.slice(0,-(ds-wo.length+1))],["NP",ot,Mg.slice(0,-(ds-Ho.length+1))],["NL",it,mg.slice(0,-(ds-Do.length+1))],["NC",$a,gg.slice(0,-(ds-Eo.length+1))],["NZ",lt,fg.slice(0,-(ds-Oo.length+1))],["NI",nt,Sg.slice(0,-(ds-Uo.length+1))],["NE",et,hg.slice(0,-(ds-Go.length+1))],["NG",tt,dg.slice(0,-(ds-Ko.length+1))],["NU",st,Tg.slice(0,-(ds-Vo.length+1))],["NF",at,cg.slice(0,-(ds-xo.length+1))],["MP",Va,$u.slice(0,-(ds-To.length+1))],["NO",_t,Cg.slice(0,-(ds-Lo.length+1))],["OM",ut,yg.slice(0,-(ds-Fo.length+1))],["PK",mt,Pg.slice(0,-(ds-Wo.length+1))],["PW",pt,Kg.slice(0,-(ds-tr.length+1))],["PS",ft,Gg.slice(0,-(ds-er.length+1))],["PA",gt,pg.slice(0,-(ds-Zo.length+1))],["PG",dt,Rg.slice(0,-(ds-Jo.length+1))],["PY",vt,Ug.slice(0,-(ds-nr.length+1))],["PE",ht,vg.slice(0,-(ds-jo.length+1))],["PH",St,bg.slice(0,-(ds-Yo.length+1))],["PN",At,Ng.slice(0,-(ds-Xo.length+1))],["PL",Ct,Bg.slice(0,-(ds-qo.length+1))],["PT",yt,xg.slice(0,-(ds-ar.length+1))],["PR",Tt,Eg.slice(0,-(ds-$o.length+1))],["QA",kt,Dg.slice(0,-(ds-ir.length+1))],["RE",Rt,Lg.slice(0,-(ds-_r.length+1))],["RO",bt,Hg.slice(0,-(ds-or.length+1))],["RU",Bt,Vg.slice(0,-(ds-sr.length+1))],["RW",It,Og.slice(0,-(ds-lr.length+1))],["BL",P,ws.slice(0,-(ds-oi.length+1))],["SH",Dt,Wg.slice(0,-(ds-mr.length+1))],["KN",ha,vu.slice(0,-(ds-Z_.length+1))],["LC",Ta,Eu.slice(0,-(ds-X_.length+1))],["MF",Ga,ju.slice(0,-(ds-go.length+1))],["PM",Mt,Ig.slice(0,-(ds-Qo.length+1))],["VC",yn,Gh.slice(0,-(ds-es.length+1))],["WS",Bn,wh.slice(0,-(ds-rs.length+1))],["SM",Ot,eh.slice(0,-(ds-fr.length+1))],["ST",Jt,_h.slice(0,-(ds-Rr.length+1))],["SA",Nt,Fg.slice(0,-(ds-ur.length+1))],["SN",Ft,ah.slice(0,-(ds-yr.length+1))],["RS",Pt,wg.slice(0,-(ds-rr.length+1))],["SC",Gt,jg.slice(0,-(ds-hr.length+1))],["SL",Vt,$g.slice(0,-(ds-Tr.length+1))],["SG",Ut,Yg.slice(0,-(ds-Sr.length+1))],["SX",Wt,rh.slice(0,-(ds-Pr.length+1))],["SK",wt,Xg.slice(0,-(ds-Ar.length+1))],["SI",Lt,qg.slice(0,-(ds-Cr.length+1))],["SB",Et,Zg.slice(0,-(ds-gr.length+1))],["SO",Zt,th.slice(0,-(ds-pr.length+1))],["ZA",En,Fh.slice(0,-(ds-us.length+1))],["GS",De,Wl.slice(0,-(ds-S_.length+1))],["SS",zt,ih.slice(0,-(ds-kr.length+1))],["ES",Se,bl.slice(0,-(ds-Ji.length+1))],["LK",ya,xu.slice(0,-(ds-eo.length+1))],["SD",xt,zg.slice(0,-(ds-cr.length+1))],["SR",jt,nh.slice(0,-(ds-vr.length+1))],["SJ",Ht,Qg.slice(0,-(ds-Mr.length+1))],["SZ",Qt,lh.slice(0,-(ds-Ir.length+1))],["SE",Kt,Jg.slice(0,-(ds-dr.length+1))],["CH",Z,tl.slice(0,-(ds-yi.length+1))],["SY",qt,sh.slice(0,-(ds-Br.length+1))],["TW",cn,vh.slice(0,-(ds-jr.length+1))],["TJ",nn,Sh.slice(0,-(ds-Ur.length+1))],["TZ",dn,kh.slice(0,-(ds-zr.length+1))],["TH",tn,dh.slice(0,-(ds-Kr.length+1))],["TL",on,Ch.slice(0,-(ds-Lr.length+1))],["TG",an,ch.slice(0,-(ds-xr.length+1))],["TK",_n,mh.slice(0,-(ds-Dr.length+1))],["TO",ln,Th.slice(0,-(ds-Vr.length+1))],["TT",gn,yh.slice(0,-(ds-Fr.length+1))],["TN",sn,Ah.slice(0,-(ds-wr.length+1))],["TR",un,fh.slice(0,-(ds-Or.length+1))],["TM",rn,Mh.slice(0,-(ds-Hr.length+1))],["TC",Xt,uh.slice(0,-(ds-Nr.length+1))],["TV",hn,ph.slice(0,-(ds-Zr.length+1))],["UG",mn,bh.slice(0,-(ds-Yr.length+1))],["UA",Sn,Rh.slice(0,-(ds-Jr.length+1))],["AE",i,ms.slice(0,-(ds-Un.length+1))],["GB",ve,Ul.slice(0,-(ds-t_.length+1))],["US",Mn,Bh.slice(0,-(ds-qr.length+1))],["UM",Cn,Ph.slice(0,-(ds-Wr.length+1))],["UY",An,Ih.slice(0,-(ds-Qr.length+1))],["UZ",Tn,Nh.slice(0,-(ds-Xr.length+1))],["VU",bn,Lh.slice(0,-(ds-_s.length+1))],["VE",pn,xh.slice(0,-(ds-as.length+1))],["VN",Rn,Dh.slice(0,-(ds-is.length+1))],["VG",vn,Kh.slice(0,-(ds-ts.length+1))],["VI",kn,Uh.slice(0,-(ds-ns.length+1))],["WF",Pn,Hh.slice(0,-(ds-os.length+1))],["EH",ce,kl.slice(0,-(ds-ji.length+1))],["YE",In,Vh.slice(0,-(ds-ss.length+1))],["ZM",Gn,Zh.slice(0,-(ds-gs.length+1))],["ZW",xn,jh.slice(0,-(ds-hs.length+1))]];_c=Jh,oc();for(zh=0;zh<_c.length;zh++){var Yh=_c[zh][1],Wh=_c[zh][0];(e.options[e.length]=new Option(_c[zh][1],Yh)).setAttribute("data-class",Wh.toLowerCase()),null==defaultCountrySelectedValue||defaultCountrySelectedValue!==Yh&&defaultCountrySelectedValue!==Wh||(foundIndex=zh,foundIndex++)}e.selectedIndex=foundIndex;var qh,Qh,Xh,$h,ec,ac,tc,nc,ic=e.getAttribute("country-data-region-id");ic?((Qh=(qh=document.getElementById(ic)).getAttribute("region-data-city-id"))||console.error("Missing data-city-id on region field."),Xh=document.getElementById(Qh),qh?(rc(qh),e.onchange=function(){sc(e,qh),gc(qh,Xh)},null!==defaultCountrySelectedValue&&0<e.selectedIndex&&(sc(e,qh),null!==($h=qh.getAttribute("region-data-default-value"))&&(ec=e.selectedIndex-1,nc=_c[ec][3],lc(qh,nc,$h)))):console.error("Region field with ID "+ic+" not found."),Xh?(uc(Xh),qh.onchange=function(){gc(qh,Xh)},null!==$h&&0<qh.selectedIndex&&(gc(qh,Xh),null!==(ac=Xh.getAttribute("city-data-default-value"))&&(tc=qh.options[qh.selectedIndex].text,nc=region_cities[tc],hc(Xh,nc,ac)))):console.error("City field with ID "+Qh+" not found."),e.setAttribute("data-gds-loaded","true")):console.error("Missing data-region-id on country field.")},oc=function(){for(var e=0;e<_c.length;e++){for(var a={regions:[]},t=_c[e][2].split("|"),n=0;n<t.length;n++){var i=[];i.push(t[n]),a.regions.push(i)}_c[e][3]=a}},rc=function(e){var a=e.getAttribute("region-data-blank-option"),t=a||"-";e.length=0,e.options[0]=new Option(t,""),e.selectedIndex=0},sc=function(e,a){var t=e.selectedIndex-1,n=a.getAttribute("region-data-default-option"),i=n||"Please select a region.";if(""===e.value)rc(a);else{a.length=0,a.options[0]=new Option(i,"");for(var _=_c[t][3],o=0;o<_.regions.length;o++){var r=_.regions[o];a.options[a.length]=new Option(_.regions[o],r)}a.selectedIndex=0}},lc=function(e,a,t){for(var n=0;n<a.regions.length;n++){if(a.regions[n][0]===t){e.selectedIndex=n+1;break}}},uc=function(e){var a=e.getAttribute("city-data-blank-option"),t=a||"-";e.length=0,e.options[0]=new Option(t,""),e.selectedIndex=0},gc=function(e,a){e.selectedIndex;var t,n=a.getAttribute("city-data-default-option"),i=n||"Please select a city.",_=e.options[e.selectedIndex].text;if(region_cities[_]){a.length=0,a.options[0]=new Option(i,""),t=region_cities[_].split("|");for(var o=0;o<t.length;o++)a.options[a.length]=new Option(t[o],t[o]);a.selectedIndex=0}else uc(a)},hc=function(e,a,t){var n;e.selectedIndex=0,n=a.split("|");for(var i=0;i<n.length;i++){if(n[i]===t){e.selectedIndex=i+1;break}}};return function(a,t){var n=!1,e=!0,i=a.document,_=i.documentElement,o=i.addEventListener?"addEventListener":"attachEvent",r=i.addEventListener?"removeEventListener":"detachEvent",s=i.addEventListener?"":"on",l=function(e){"readystatechange"==e.type&&"complete"!=i.readyState||(("load"==e.type?a:i)[r](s+e.type,l,!1),!n&&(n=!0)&&t.call(a,e.type||e))},u=function(){try{_.doScroll("left")}catch(e){return void setTimeout(u,50)}l("poll")};if("complete"==i.readyState)t.call(a,"lazy");else{if(i.createEventObject&&_.doScroll){try{e=!a.frameElement}catch(e){}e&&u()}i[o](s+"DOMContentLoaded",l,!1),i[o](s+"readystatechange",l,!1),a[o](s+"load",l,!1)}}(window,e),{init:e}}),$(function(){$(window).on("hashchange",function(){location.hash&&($(".text-link").removeClass("active"),$('.text-link[href="'+location.hash+'"]').addClass("active"),$(".text-block").addClass("d-none"),$(location.hash).removeClass("d-none"))}),$(window).trigger("hashchange")});var pageURL=location.origin,userprofilePageURL=pageURL+"/userprofile",userProfile,validToken=!1,userProfileLoadedEvent=new CustomEvent("userProfileLoaded");function buyerCheck(){validToken?(document.getElementById("directToLoginButton").style.display="none",userProfile.profile_filled&&"this users picture is in S3"===userProfile.picture?document.getElementById("buybutton").style.display="block":userProfile.profile_filled?document.getElementById("directToaddPicture").style.display="block":document.getElementById("directToFillProfile").style.display="block"):document.getElementById("directToLoginButton").style.display="block"}if(document.addEventListener("userProfileLoaded",function(e){useUserData(userProfile)}),localStorage.getItem("ACCESS_TOKEN")){var token=localStorage.getItem("ACCESS_TOKEN");try{var base64Url=token.split(".")[1],base64=base64Url.replace(/-/g,"+").replace(/_/g,"/"),jsonPayload=decodeURIComponent(atob(base64).split("").map(function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)}).join("")),expDate=1e3*JSON.parse(jsonPayload).exp,now=(new Date).getTime(),validToken=now<expDate}catch(e){validToken=!1}}if(validToken){try{document.getElementById("logOut").style.display="block",document.getElementById("logInName").style.display="block",document.getElementById("userProfile").style.display="block"}catch(e){}loadUserProfileH();try{document.getElementById("login_cond").style.display="none"}catch(e){}}if(!validToken){try{document.getElementById("logIn").style.display="block",document.getElementById("signUp").style.display="block"}catch(e){}loadEmptyUserProfile()}function loadUserProfileH(){var e=new Headers;e.append("Authorization","Bearer "+localStorage.getItem("ACCESS_TOKEN")),fetch("https://api.poff.ee/profile",{method:"GET",headers:e,redirect:"follow"}).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){userProfile=e,document.dispatchEvent(userProfileLoadedEvent)}).catch(function(e){console.warn(e)})}function loadEmptyUserProfile(){fetch("https://api.poff.ee/profile",{method:"GET",redirect:"follow"}).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){userProfile={sub:e.ip,name:"Wolf"},document.dispatchEvent(userProfileLoadedEvent)}).catch(function(e){console.warn(e)})}function saveUrl(){localStorage.setItem("url",window.location.href)}function useUserData(e){if(e.name)try{document.getElementById("tervitus").innerHTML=document.getElementById("tervitus").innerHTML+", "+e.name}catch(e){}else try{document.getElementById("tervitus").innerHTML=document.getElementById("tervitus").innerHTML+", "+e.email}catch(e){}try{buyerCheck()}catch(e){}try{loadMyFavFilms()}catch(e){}try{fetchMyPasses()}catch(e){}}function logOut(){localStorage.removeItem("ACCESS_TOKEN"),localStorage.removeItem("ID_TOKEN"),localStorage.getItem("REFRESH_TOKEN")&&localStorage.removeItem("REFRESH_TOKEN"),localStorage.removeItem("url"),localStorage.removeItem("USER_PROFILE"),location.reload()}function reloadImageOnError(){for(var e=document.images,a=0;a<e.length;a++){e[a].onerror=function(){var e,a=this.getAttribute("reloaded")||0;1e3<a||(this.setAttribute("reloaded",a+1),e=this.getAttribute("src"),this.setAttribute("src",e),console.log("Error at loading image",this))}}}function BuyProduct(e){var a,t,n,i,_,o=document.getElementById("feedback");"valimata"===paymentType?o.innerHTML="Palun vali makseviis":(saveUrl(),(a=new Headers).append("Authorization","Bearer "+localStorage.getItem("ACCESS_TOKEN")),t={method:"PUT",headers:a,redirect:"follow",body:JSON.stringify({paymentMethodId:paymentType}),"content-type":"application/json"},n="en/"===langpath?"mypoff":"ru/"===langpath?"moipoff":"minupoff",i=window.location.href.slice(0,window.location.href.indexOf("/",8))+"/"+langpath+n,_=window.location.href,fetch("https://api.poff.ee/buy/"+e+"?return_url="+i+"&cancel_url="+_,t).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){window.open(e.url,"_self")}).catch(function(e){console.warn(e)}))}$(function(){function e(){var a;$("#navigation img").addClass("d-none"),$("#navigation p").addClass("d-none"),1200<$(window).width()?800<$(window).height()?($("#navigation p").removeClass("d-none"),$("#navigation img").removeClass("d-none")):600<$(window).height()&&$("#navigation img").removeClass("d-none"):1200<$(window).height()?($("#navigation p").removeClass("d-none"),$("#navigation img").removeClass("d-none")):800<$(window).height()&&$("#navigation img").removeClass("d-none"),$(window).width()<768?($("#navigation").removeClass("fixed-bottom"),$("#text").removeClass("desktop"),$("#text").css("height","")):($("#navigation").addClass("fixed-bottom"),$("#text").addClass("desktop"),$("#text").css("height",$(window).height()-$("#navigation").outerHeight(!0)+"px")),$(window).width()<576?$(".nav-title").css("height",""):(a=0,$(".nav-title").css("height",""),$(".nav-title").each(function(){var e=$(this).outerHeight(!0);a=a<e?e:a}),$(".nav-title").css("height",a+"px")),$("#text-text").css("height",""),$("#text-text").outerHeight(!0)<$("#text-search").outerHeight(!0)&&$("#text-text").css("height",$("#text-search").outerHeight(!0)+"px")}var a;$(window).on("load",function(){e()}),$(window).on("resize",function(){clearTimeout(a),a=setTimeout(e,100)})});var paymentType="valimata";function SelectPaymentType(e){paymentType=e}function Buy(e){}function GetPaymentLinks(){document.getElementById("buybutton").style.display="none";var n=document.getElementById("paymentLinks"),i=document.getElementById("paybutton"),e=new Headers;e.append("Authorization","Bearer "+localStorage.getItem("ACCESS_TOKEN")),fetch("https://api.poff.ee/buy",{method:"GET",headers:e,redirect:"follow"}).then(function(e){return e.ok?e.json():Promise.reject(e)}).then(function(e){for(var a="",t=0;t<e.banklinks.length;t++){"ee"===e.banklinks[t].country&&(a+='<label><input type="radio" name="payment" value="'+e.banklinks[t].id+'"><img src='+e.banklinks[t].logo+' onClick=SelectPaymentType("'+e.banklinks[t].id+'") ></label>')}for(t=0;t<e.cards.length;t++){a+='<label><input type="radio" name="payment" value="'+e.cards[t].id+'"><img src='+e.cards[t].logo+' onClick=SelectPaymentType("'+e.cards[t].id+'") ></label>'}for(t=0;t<e.other.length;t++){a+='<label><input type="radio" name="payment" value="'+e.other[t].id+'"><img src='+e.other[t].logo+' onClick=SelectPaymentType("'+e.other[t].id+'") ></label>'}n.innerHTML=a,i.style.display="block"}).catch(function(e){console.warn(e)})}function directToLogin(){window.open(location.origin+"/login","_self")}function directToUserProfile(){window.open(location.origin+"/userprofile","_self")}function validateEmail(e){var a=document.getElementById(e);return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(a.value).toLowerCase())?(emailHelp.classList.remove("invalid"),emailHelp.classList.add("valid"),!0):(emailHelp.classList.remove("valid"),emailHelp.classList.add("invalid"),!1)}function validatePsw(e){var a=document.getElementById(e);if(""===a.value)return pswHelp.classList.remove("valid"),pswHelp.classList.add("invalid"),!1;return/^.{8,}$/.test(String(a.value))?(pswHelp.classList.remove("invalid"),pswHelp.classList.add("valid")):(pswHelp.classList.remove("valid"),pswHelp.classList.add("invalid")),!0}function validatePswRep(e,a){var t=document.getElementById(e),n=document.getElementById(a);return""===n.value||t.value!==n.value?(psw2Help.classList.remove("valid"),psw2Help.classList.add("invalid"),!1):(psw2Help.classList.remove("invalid"),psw2Help.classList.add("valid"),!0)}function validateFirstName(e){var a=document.getElementById(e);return""==a.value||a.value.length<2||!isNaN(a.value)?(firstNameHelp.classList.remove("valid"),firstNameHelp.classList.add("invalid"),!1):(firstNameHelp.classList.remove("invalid"),firstNameHelp.classList.add("valid"),!0)}function validateLastName(e){var a=document.getElementById(e);return""===a.value||a.value.length<2||!isNaN(a.value)?(lastNameHelp.classList.remove("valid"),lastNameHelp.classList.add("invalid"),!1):(lastNameHelp.classList.remove("invalid"),lastNameHelp.classList.add("valid"),!0)}function validateGender(e){var a=document.getElementById(e);return""===a.value?(genderHelp.classList.remove("valid"),genderHelp.classList.add("invalid"),!1):""!==a.value?(genderHelp.classList.remove("invalid"),genderHelp.classList.add("valid"),!0):void 0}function validateBDay(e){var a=document.getElementById(e);if(""===a.value)return dobHelp.classList.remove("valid"),dobHelp.classList.add("invalid"),!1;var t=getAge(a.value);return 12<t&&t<116?(dobHelp.classList.remove("invalid"),dobHelp.classList.add("valid"),!0):(dobHelp.classList.remove("valid"),dobHelp.classList.add("invalid"),!1)}function validateDate(e){var a=document.getElementById(e),t=new RegExp("^(([0-9]{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01]))|((0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.](19|20)[0-9][0-9])|((0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.](19|20)[0-9][0-9]))$");return""===a.value?(dateHelp.classList.remove("valid"),dateHelp.classList.add("invalid"),!1):(t.test(String(a.value))?(dateHelp.classList.remove("invalid"),dateHelp.classList.add("valid")):(dateHelp.classList.remove("valid"),dateHelp.classList.add("invalid")),!0)}function validatePhoneNr(e){var a=document.getElementById(e);if(""===a.value)return phoneNrHelp.classList.remove("valid"),phoneNrHelp.classList.add("invalid"),!1;return/^[0-9]{7,15}$/.test(String(a.value))?(phoneNrHelp.classList.remove("invalid"),phoneNrHelp.classList.add("valid")):(phoneNrHelp.classList.remove("valid"),phoneNrHelp.classList.add("invalid")),!0}function validateCountry(e){var a=document.getElementById(e);return""===a.value?(a.classList.remove("c_valid"),a.classList.add("c_invalid"),!(a.value="Elukoha riik")):a.value?(a.classList.remove("c_invalid"),a.classList.add("c_valid"),!0):void 0}function validateCity(e){var a=document.getElementById(e);return""===a.value?(a.classList.remove("c_valid"),a.classList.add("c_invalid"),!1):a.value?(a.classList.remove("c_invalid"),a.classList.add("c_valid"),!0):void 0}function getAge(e){var a=new Date,t=new Date(e),n=a.getFullYear()-t.getFullYear(),i=a.getMonth()-t.getMonth();return(i<0||0==i&&a.getDate()<t.getDate())&&--n,n}function styleGenderList(){gender.classList.remove("invalid"),gender.options[3].classList.add("invalid")}$(function(){"staging.poff.ee"==window.location.host&&$("body").css({"background-color":"green"})});
//# sourceMappingURL=script.js.map