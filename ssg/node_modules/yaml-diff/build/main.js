'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = createDiff;

var _isEqual = require('is-equal');

var _isEqual2 = _interopRequireDefault(_isEqual);

var _isPlainObject = require('is-plain-object');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function diffPrimitives(source, target) {
	if (!(0, _isEqual2.default)(source, target)) {
		return target;
	} else {
		return undefined;
	}
}

function diffArray(source, target) {
	var diff = [];

	// Equalize array length
	if (source.length > target.length) {
		target.length = source.length;
	} else {
		source.length = target.length;
	}

	source.forEach(function (element, index) {
		if ((0, _isEqual2.default)(element, target[index])) {
			diff[index] = null;
		} else {
			diff[index] = createDiff(element, target[index]);
		}
	});

	return diff;
}

function diffObject(source, target) {
	var diff = {};

	for (var key in source) {
		diff[key] = createDiff(source[key], target[key]);
	}

	return diff;
}

function createDiff(source, target) {

	if (Array.isArray(source)) {
		return diffArray(source, target);
	} else if ((0, _isPlainObject2.default)(source)) {
		return diffObject(source, target);
	} else {
		return diffPrimitives(source, target);
	}
}