//- hidden tag to hold cassette id
input(type='hidden', value=`${self.id}`, id=`film_id`)
if self.screenings && self.screenings[0]
    input(type='hidden', value=`${self.screenings.map(s => s.id)}`, id=`screening_ids`)

main.grid_film(id=self.id)

    if self.films
        each film in self.films

            //- KARUSELL filmi piltidega
            section#carouselExampleIndicators.f_img_slider_box.carousel.slide(data-bs-ride='carousel' data-bs-interval='6000')
                ol.carousel-indicators
                    if self.cassetteCarouselPicsFilms
                        each val, index in self.cassetteCarouselPicsFilms
                            li(data-bs-target='#carouselExampleIndicators' data-bs-slide-to=index class=`${index === 0 ? 'active' : ''}`)
                .carousel-inner.container_frame_16_9
                    if self.cassetteCarouselPicsFilms
                        each val, index in self.cassetteCarouselPicsFilms
                            if index == 0
                                .carousel-item.active.container_contents_16_9
                                    img.d-block.container_contents_16_9(src=val alt = film.title || film.title_et)
                            else
                                .carousel-item.container_contents_16_9
                                    img.d-block.container_contents_16_9(src=val alt = film.title || film.title_et)
                    else
                        .carousel-item.active.container_contents_16_9
                            img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = film.title || film.title_et)

                a.carousel-control-prev(href='#carouselExampleIndicators' role='button' data-bs-slide='prev')
                    // <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                        polyline(points='15 18 9 12 15 6')
                    span.sr-only Previous
                a.carousel-control-next(href='#carouselExampleIndicators' role='button' data-bs-slide='next')
                    // <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                        polyline(points='9 18 15 12 9 6')
                    span.sr-only Next
                //- if film.trailer && film.trailer[0] && film.trailer[0].videoCode
                if (film.trailer && film.trailer[0].videoCode) || (film.QaClip && film.QaClip[0].url)
                    a.play_link(href='#trailer')
                        svg.svg_icon_play(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='2' fill='white' stroke-linecap='round' stroke-linejoin='round')
                            polygon(points='5 3 19 12 5 21 5 3')
                            //- LÕPP! KARUSSELL filmi piltidega LÕPP


                    //- Algab kasseti filmide info kuvamine

            section.f_title_box

                .premiere_type
                    if film.tags && film.tags.premiere_types && film.tags.premiere_types[0]
                        //- Kui on mitu, eraldatakse komadega, kui vaid esimest ühte vaja, siis film.tags.premiere_types[0]
                        p.premiere_type= film.tags.premiere_types.join(', ')

                h1.film_title_detailed= film.title || film.title_et


                //- a.btn.btn_secondary.isshortlisted(id='f_'+self.id+'_is_fav',
                //-     style='display: none; height: 36px; width: 100%;' role='button'
                //-     )= self.label.film.removeShortlist
                //- a.btn.btn_secondary.notshortlisted(id='f_'+self.id+'_is_not_fav',
                //-     style='display: none; height: 36px; width: 100%;' role='button'
                //-     )= self.label.film.addShortlist

                .str_info_blokk_1

                    //- each p, locale in self.otherLocalePaths
                    each p, locale in Object.keys(self.otherLocalePaths).filter(l => l !== 'ru').reduce((o, k) => { o[k] = self.otherLocalePaths[k]; return o}, {})
                        if self[`title_${locale}`]
                            .str_info_grid_3
                                .str_info_label= self.label.film[`title_${locale}`]
                                .str_info_value= film[`title_${locale}`]

                    if film.titleOriginal
                        .str_info_grid_3
                            .str_info_label= self.label.film.titleOriginal
                            .str_info_value= film.titleOriginal

                    if film.credentials && film.credentials.rolePersonsByRole && film.credentials.rolePersonsByRole.director && film.credentials.rolePersonsByRole.director[0]
                        .str_info_grid_3
                            .str_info_label= self.label.film.director
                            .str_info_value.clr_primary= film.credentials.rolePersonsByRole.director.join(', ')
                    //- todo #383
                    if film.orderedCountriesDisplay
                        .str_info_grid_3
                            .str_info_label= self.label.film.countries
                            .str_info_value= film.orderedCountriesDisplay

                    if film.year
                        .str_info_grid_3
                            .str_info_label= self.label.film.year
                            .str_info_value= film.year

                //- button.btn.btn_secondary.isshortlisted(id='is_shortlisted',
                //-     style='display: none; height: 36px; width: 100%;'
                //-     )= self.label.film.removeShortlist
                //- button.btn.btn_secondary.notshortlisted(id='not_shortlisted',
                //-     style='display: none; height: 36px; width: 100%;'
                //-     )= self.label.film.addShortlist


            section.f_synopsis_box
                -
                    var festivalEditions = []
                    var festivalEditionsIds = []
                //- Kassetti festivali info
                .str_info_meta_gi
                    .str_info_meta_item

                        if film.festival_editions
                            //- Festival editions

                            each festivalEdition in film.festival_editions
                                if festivalEdition.name
                                    - festivalEditions.push(festivalEdition.name)
                                    - festivalEditionsIds.push(festivalEdition.id)
                            - var uniqueFestivalEditions = [...new Set(festivalEditions)]
                            if uniqueFestivalEditions != undefined && uniqueFestivalEditions.length > 0
                                .str_info_meta_label.dark_1= self.label.film.festival
                                .str_info_meta_festival= uniqueFestivalEditions.join(', ')

                        if film.tags

                            if film.tags.programmes && film.tags.programmes[0]

                                -
                                    var programmeNames = function(item) {
                                    if(typeof item.name !== 'object') {
                                        var itemNames = item.name
                                    }
                                        return itemNames
                                    }

                                //- Programmes
                                - var programmes = film.tags.programmes.filter(a => a.name).map(programmeNames).join(', ')
                                if programmes !== undefined && programmes.length > 0
                                    .str_info_meta_label.dark_1= self.label.film.programme
                                    .str_info_meta_festival= programmes

                            if film.tags.genres && film.tags.genres[0]
                                .str_info_meta_label.dark_1= self.label.film.genre
                                .str_info_meta_festival= film.tags.genres.join(', ')


                            if film.tags.keywords && film.tags.keywords[0]
                                .str_info_meta_label.dark_1= self.label.film.keywords
                                .str_info_meta_festival= film.tags.keywords.join(', ')

                            if film.tags.trigger_warnings && film.tags.trigger_warnings[0]
                                .str_info_meta_label.dark_1= self.label.film.triggerWarning
                                .str_info_meta_festival= film.tags.trigger_warnings.map(item => item.name)

                            if film.tags.age_restriction
                                .str_info_meta_label.dark_1= self.label.film.ageRestriction
                                .str_info_meta_festival= film.tags.age_restriction.name

                        if film.presentedBy
                            - var presentedBy = [film.presentedBy]
                        else if self.tags && self.tags.programmes && self.tags.programmes.map(a => a.presentedBy || false).length
                            -
                                var presenters = self.tags.programmes.map((a) => {
                                    if (a.presentedBy) {
                                        delete a.presentedBy.id
                                        return a.presentedBy
                                    } else {
                                        return false
                                    }
                                }).filter(a => a)
                                var presentedBy = [...new Map(presenters.map(item => [item['presentedByText'], item])).values()]
                        else
                            - var presentedBy = []


                        //- if presentedBy.length
                        //-     section.f_extra_box

                        //-         each onePresentedBy in presentedBy
                        //-             if onePresentedBy.organisations && onePresentedBy.organisations.length

                        //-                 if onePresentedBy.presentedByText && typeof onePresentedBy.presentedByText !== 'object'
                        //-                     p.dark_1.text_center= onePresentedBy.presentedByText

                        //-                 each presenter in onePresentedBy.organisations


                        //-                     //- Artikli kontroll algus, vajab veel artikli kättesaamist ja täiendamist, et olemasolul suunata artiklile!
                        //-                     if presenter.poffi_article
                        //-                         - var articleFromYAML = self.data.articles.filter( (a) => { return presenter.poffi_article.id === a.id })
                        //-                         - var article = articleFromYAML[0]
                        //-                         if article.article_types && article.article_types[0]

                        //-                             if article.publish && article.title && article.title.length > 1
                        //-                                 - var currentTime = new Date()
                        //-                                 if typeof(article.publishFrom) === 'undefined'
                        //-                                     - var publishFrom= new Date(article.created_at)
                        //-                                 else
                        //-                                     - var publishFrom= new Date(article.publishFrom)

                        //-                                 if article.publishUntil
                        //-                                     - var publishUntil = new Date(article.publishUntil)

                        //-                                 if (currentTime > publishFrom)

                        //-                                     if (!publishUntil || (publishUntil && (publishUntil > currentTime)))


                        //-                                         - articlePublished = true
                        //-                                         - articleSlug = article.slug
                        //-                                         each artType in article.article_types
                        //-                                             - artTypes.push(artType.name.toLowerCase())
                        //-                                             if artType.name.toLowerCase() === defaultTypeIfExists[0]
                        //-                                                 - artTypeForPath = artType.slug.toLowerCase()
                        //-                                                 - break
                        //-                                             else
                        //-                                                 - artTypeForPath = artType.slug.toLowerCase()
                        //-                     //- Artikli kontroll lõpp

                        //-                     //- Programmi esitleja nimi

                        //-                     if presenter.name
                        //-                         //- p.dark_1.text_center= presenter.name

                        //-                     //- KUI ARTIKKEL KEELES OLEMAS JA PUBLISHED JA PEALKIRJAGA JNE
                        //-                     if typeof articlePublished !== 'undefined' && articlePublished === true
                        //-                         .presenter_logo_item_container
                        //-                             a(href= `/${lang_path}${artTypeForPath}/${articleSlug}`).presenter_logo_item
                        //-                                 if presenter.logoColour
                        //-                                     img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                        //-                                 else if presenter.logoBlack
                        //-                                     img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                        //-                                 else if presenter.logoWhite
                        //-                                     img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                        //-                     //- KUI ARTIKLIT POLE VÕI POLE SEE PUBLISHED, AGA ON CUSTOM URL
                        //-                     else if presenter.homepageUrl
                        //-                         .presenter_logo_item_container
                        //-                             a(href= presenter.homepageUrl).presenter_logo_item
                        //-                                 if presenter.logoColour
                        //-                                     img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                        //-                                 else if presenter.logoBlack
                        //-                                     img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                        //-                                 else if presenter.logoWhite
                        //-                                     img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                        //-                     //- LOGO ILMA LINGITA
                        //-                     else
                        //-                         if presenter.logoColour
                        //-                             .presenter_logo_item_container
                        //-                                 img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                        //-                         else if presenter.logoBlack
                        //-                             .presenter_logo_item_container
                        //-                                 img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                        //-                         else if presenter.logoWhite
                        //-                             .presenter_logo_item_container
                        //-                                 img.presenter_logo_itemx(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                        //- festival programm zanrid keywordid


                    //- .str_info_meta_item
                    //-     .str_info_meta_label
                    //-         | Programm
                    //-     .str_info_meta_program
                    //-         | Foorum, Põhjusega mässajad
                if typeof film.synopsis !== 'undefined'
                    - var synopsis_md = film.synopsis
                    .synopsis_gi
                        if typeof synopsis_md === 'string'
                            +format(synopsis_md)
                            //- +chat('casette-' + self.id)

                        //- FILM ADDITIONAL INFO (ADDITINFO)

                        if typeof film.additInfo !== 'undefined'
                            - var additInfo_md = film.additInfo
                                //- .synopsis_gi
                                if typeof additInfo_md === 'string'
                                    +format(additInfo_md)

            section.f_cred_box
                .str_info_blokk_cred

                    if film && film.credentials && film.credentials.rolePersonsByRole
                        - var rolePersonsByRole = film.credentials.rolePersonsByRole

                        if rolePersonsByRole.director && rolePersonsByRole.director[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.director
                                .str_info_value= rolePersonsByRole.director.join(', ')

                        if rolePersonsByRole.screenwriter && rolePersonsByRole.screenwriter[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.screenwriter
                                .str_info_value= rolePersonsByRole.screenwriter.join(', ')

                        if rolePersonsByRole.cast && rolePersonsByRole.cast[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.cast
                                .str_info_value= rolePersonsByRole.cast.join(', ')

                        if rolePersonsByRole.producer && rolePersonsByRole.producer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.producer
                                .str_info_value= rolePersonsByRole.producer.join(', ')

                        if rolePersonsByRole.coproducer && rolePersonsByRole.coproducer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.coProducer
                                .str_info_value= rolePersonsByRole.coproducer.join(', ')

                        if rolePersonsByRole.creativeproducer && rolePersonsByRole.creativeproducer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.creativeproducer
                                .str_info_value= rolePersonsByRole.creativeproducer.join(', ')

                        if rolePersonsByRole.juniorproducer && rolePersonsByRole.juniorproducer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.juniorproducer
                                .str_info_value= rolePersonsByRole.juniorproducer.join(', ')

                        if rolePersonsByRole.directorofphotography && rolePersonsByRole.directorofphotography[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.doP
                                .str_info_value= rolePersonsByRole.directorofphotography.join(', ')

                        if rolePersonsByRole.cinematographer && rolePersonsByRole.cinematographer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.cinematographer
                                .str_info_value= rolePersonsByRole.cinematographer.join(', ')

                        if rolePersonsByRole.productiondesigner && rolePersonsByRole.productiondesigner[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.productiondesigner
                                .str_info_value= rolePersonsByRole.productiondesigner.join(', ')
                        if rolePersonsByRole.artdirector && rolePersonsByRole.artdirector[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.artdirector
                                .str_info_value= rolePersonsByRole.artdirector.join(', ')

                        if rolePersonsByRole.editor && rolePersonsByRole.editor[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.editor
                                .str_info_value= rolePersonsByRole.editor.join(', ')

                        if rolePersonsByRole.writer && rolePersonsByRole.writer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.writer
                                .str_info_value= rolePersonsByRole.writer.join(', ')
                        if rolePersonsByRole.cowriter && rolePersonsByRole.cowriter[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.cowriter
                                .str_info_value= rolePersonsByRole.cowriter.join(', ')

                        if rolePersonsByRole.composer && rolePersonsByRole.composer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.composer
                                .str_info_value= rolePersonsByRole.composer.join(', ')

                        if rolePersonsByRole.music && rolePersonsByRole.music[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.music
                                .str_info_value= rolePersonsByRole.music.join(', ')

                        if rolePersonsByRole.sound && rolePersonsByRole.sound[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.sound
                                .str_info_value= rolePersonsByRole.sound.join(', ')

                        if rolePersonsByRole.animation && rolePersonsByRole.animation[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.animation
                                .str_info_value= rolePersonsByRole.animation.join(', ')

                        if rolePersonsByRole.instructor && rolePersonsByRole.instructor[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.instructor
                                .str_info_value= rolePersonsByRole.instructor.join(', ')
                        if rolePersonsByRole.choreographer && rolePersonsByRole.choreographer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.choreographer
                                .str_info_value= rolePersonsByRole.choreographer.join(', ')

                        if rolePersonsByRole.publicfunds && rolePersonsByRole.publicfunds[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.publicfunds
                                .str_info_value= rolePersonsByRole.publicfunds.join(', ')

                        if rolePersonsByRole.privatefunds && rolePersonsByRole.privatefunds[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.privatefunds
                                .str_info_value= rolePersonsByRole.privatefunds.join(', ')

                        //- Below datamodel needs to be updated and then code amended to be correct
                        if rolePersonsByRole.productioncompany && rolePersonsByRole.productioncompany[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.production
                                .str_info_value= film.credentials.rolePersonsByRole.productioncompany.join(', ')

                    if film && film.credentials && film.credentials.roleCompaniesByRole
                        - var roleCompaniesByRole = film.credentials.roleCompaniesByRole

                        if roleCompaniesByRole.productioncompany && roleCompaniesByRole.productioncompany[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.production
                                .str_info_value= roleCompaniesByRole.productioncompany.join(', ')

                        if roleCompaniesByRole.coproductioncompany && roleCompaniesByRole.coproductioncompany[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.coproductioncompany
                                .str_info_value= roleCompaniesByRole.coproductioncompany.join(', ')

                        if roleCompaniesByRole.distributor && roleCompaniesByRole.distributor[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.distributor
                                .str_info_value= roleCompaniesByRole.distributor.join(', ')

                        if roleCompaniesByRole.music && roleCompaniesByRole.music[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.music
                                .str_info_value= roleCompaniesByRole.music.join(', ')

                        if roleCompaniesByRole.sound && roleCompaniesByRole.sound[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.sound
                                .str_info_value= roleCompaniesByRole.sound.join(', ')

                        if roleCompaniesByRole.editor && roleCompaniesByRole.editor[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.editor
                                .str_info_value= roleCompaniesByRole.editor.join(', ')

                        if roleCompaniesByRole.animation && roleCompaniesByRole.animation[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.animation
                                .str_info_value= roleCompaniesByRole.animation.join(', ')

                        if roleCompaniesByRole.worldsales && roleCompaniesByRole.worldsales[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.worldsales
                                .str_info_value= roleCompaniesByRole.worldsales.join(', ')

            section.f_runtime_box
                - var languagesNames = function(item) {
                -   if(item.name) {
                -       var itemNames = item.name
                -       return itemNames
                -   }
                - }

                if film.runtime
                    .str_info_grid_3
                        .str_info_label= self.label.film.runtime
                        .str_info_value
                            +dur(film.runtime)

                if film.languages
                    .str_info_grid_3
                        .str_info_label= self.label.film.languages
                        .str_info_value= film.languages.map(languagesNames).join(', ')

                if film.subtitles
                    .str_info_grid_3
                        .str_info_label= self.label.film.subtitles
                        .str_info_value= film.subtitles.map(languagesNames).join(', ')

                if film.other_festivals
                    .str_info_grid_3
                        .str_info_label
                        .str_info_value
                        .str_info_label= self.label.film.otherFestivals
                        .str_info_value= film.other_festivals.map(languagesNames).join(', ')

                button.btn.btn_secondary.isshortlisted(id='is_shortlisted',
                    style='display: none; height: 36px; width: 100%;'
                    )= self.label.film.removeShortlist
                button.btn.btn_secondary.notshortlisted(id='not_shortlisted',
                    style='display: none; height: 36px; width: 100%;'
                    )= self.label.film.addShortlist

            if film.credentials && film.credentials.rolePerson && film.credentials.rolePerson[0]
                - var rolesToExpand = ['Director', 'Producer']
                - var filmDirectors = film.credentials.rolePerson.filter(a => {
                -        if (a.role_at_film && a.role_at_film.roleNamePrivate && rolesToExpand.includes(a.role_at_film.roleNamePrivate) ) {
                -            return true
                -        } else {
                -            return false
                -        }
                -    })

                - var expandedRolesSorted = filmDirectors.sort(function(a, b){return a.role_at_film.order-b.role_at_film.order})

            if typeof expandedRolesSorted !== 'undefined'
                section.f_dir_box

                    each expandedRole in expandedRolesSorted.sort(function(a, b){return a.role_at_film.order-b.role_at_film.order})
                        //- f_dir_box on nyyd container directorite boxidele
                        //- Iga Directori kohta nyyd täita see f_dir_bio_box.
                        if expandedRole.person
                            if expandedRole.person.primaryImage || expandedRole.person.biography || expandedRole.person.filmography
                                .f_dir_bio_box

                                    .dir_img
                                        if expandedRole.person.primaryImage
                                            img.img_dir(src=`https://assets.poff.ee/img/${expandedRole.person.primaryImage}` alt = film.titles)
                                        if expandedRole.person.firstName || expandedRole.person.lastName
                                            .str_info_grid_3
                                                .str_info_label.text_left.dark_1= self.label.film[expandedRole.role_at_film.roleNamePrivate.toLowerCase()]
                                                .str_info_value.text_right.dark_1= `${expandedRole.person.firstName ? expandedRole.person.firstName : ''} ${expandedRole.person.lastName ? expandedRole.person.lastName : ''}`
                                        else
                                            .str_info_grid_3
                                                .str_info_label.text_left.dark_1= self.label.film[expandedRole.role_at_film.roleNamePrivate.toLowerCase()]
                                                .str_info_value.text_right.dark_1= expandedRole.person.firstNameLastName

                                    .dir_bio.dark_1
                                        if expandedRole.person.bio && typeof expandedRole.person.bio !== 'object'
                                            - var dir_bio = expandedRole.person.bio
                                            p.dark_1
                                                if typeof dir_bio === 'string'
                                                    +format(dir_bio)

                                        if expandedRole.person.filmography && typeof expandedRole.person.filmography !== 'object'
                                            - var dir_filmography = expandedRole.person.filmography
                                            p.dark_1
                                                if typeof dir_filmography === 'string'
                                                    +format(dir_filmography)

                                        else if expandedRole.person.filmography && expandedRole.person.filmography.en
                                            p.dark_1= expandedRole.person.filmography.en

            if presentedBy.length
                            section.f_extra_box

                                each onePresentedBy in presentedBy
                                    if onePresentedBy.organisations && onePresentedBy.organisations.length

                                        if onePresentedBy.presentedByText && typeof onePresentedBy.presentedByText !== 'object'
                                            p.dark_1.text_center= onePresentedBy.presentedByText

                                        each presenter in onePresentedBy.organisations


                                            //- Artikli kontroll algus, vajab veel artikli kättesaamist ja täiendamist, et olemasolul suunata artiklile!
                                            if presenter.poffi_article
                                                - var articleFromYAML = self.data.articles.filter( (a) => { return presenter.poffi_article.id === a.id })
                                                - var article = articleFromYAML[0]
                                                if article.article_types && article.article_types[0]

                                                    if article.publish && article.title && article.title.length > 1
                                                        - var currentTime = new Date()
                                                        if typeof(article.publishFrom) === 'undefined'
                                                            - var publishFrom= new Date(article.created_at)
                                                        else
                                                            - var publishFrom= new Date(article.publishFrom)

                                                        if article.publishUntil
                                                            - var publishUntil = new Date(article.publishUntil)

                                                        if (currentTime > publishFrom)

                                                            if (!publishUntil || (publishUntil && (publishUntil > currentTime)))


                                                                - articlePublished = true
                                                                - articleSlug = article.slug
                                                                each artType in article.article_types
                                                                    - artTypes.push(artType.name.toLowerCase())
                                                                    if artType.name.toLowerCase() === defaultTypeIfExists[0]
                                                                        - artTypeForPath = artType.slug.toLowerCase()
                                                                        - break
                                                                    else
                                                                        - artTypeForPath = artType.slug.toLowerCase()
                                            //- Artikli kontroll lõpp

                                            //- Programmi esitleja nimi

                                            if presenter.name
                                                //- p.dark_1.text_center= presenter.name

                                            //- KUI ARTIKKEL KEELES OLEMAS JA PUBLISHED JA PEALKIRJAGA JNE
                                            if typeof articlePublished !== 'undefined' && articlePublished === true
                                                .presenter_logo_item_container
                                                    a(href= `/${lang_path}${artTypeForPath}/${articleSlug}`).presenter_logo_item
                                                        if presenter.logoColour
                                                            img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                                        else if presenter.logoBlack
                                                            img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                                        else if presenter.logoWhite
                                                            img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                                            //- KUI ARTIKLIT POLE VÕI POLE SEE PUBLISHED, AGA ON CUSTOM URL
                                            else if presenter.homepageUrl
                                                .presenter_logo_item_container
                                                    a(href= presenter.homepageUrl).presenter_logo_item
                                                        if presenter.logoColour
                                                            img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                                        else if presenter.logoBlack
                                                            img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                                        else if presenter.logoWhite
                                                            img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                                            //- LOGO ILMA LINGITA
                                            else
                                                if presenter.logoColour
                                                    .presenter_logo_item_container
                                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                                else if presenter.logoBlack
                                                    .presenter_logo_item_container
                                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                                else if presenter.logoWhite
                                                    .presenter_logo_item_container
                                                        img.presenter_logo_itemx(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)

            if self.screenings && self.screenings[0]

                -   var pLang = ''
                -   if (self.locale === 'ru') {
                -       pLang = 'rus'
                -   } else if (self.locale === 'en') {
                -       pLang = 'eng'
                -   } else {
                -       pLang = 'est'
                -   }

                section.f_screenings_box
                    div
                        h1.section_headline= self.label.film.screenings

                    .card-group.m-o.p-0
                        if self.screenings && self.screenings[0]
                            //- - var sortedScreenings = self.screenings.sort(function(a, b){return new Date(a.dateTime)-new Date(b.dateTime)})
                            each screening in self.screenings
                                .card.card_screening.rounded-0.border-0(id=`screening_${screening.id}`)
                                    .card-header.rounded-0.bg_dark_4
                                        .grid_container_screening_time
                                            div
                                                svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                                    rect(x='3' y='4' width='18' height='18' rx='2' ry='2')
                                                    line(x1='16' y1='2' x2='16' y2='6')
                                                    line(x1='8' y1='2' x2='8' y2='6')
                                                    line(x1='3' y1='10' x2='21' y2='10')
                                                span.screening_date
                                                    if screening.dateTime
                                                        +screeningDateEET(screening.dateTime)

                                            .text_right
                                                svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                                    circle(cx='12' cy='12' r='10')
                                                    polyline(points='12 6 12 12 16 14')
                                                span.screening_time
                                                    +screeningTimeEET(screening.dateTime)

                                        .container_screening_location
                                            svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                                path(d='M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z')
                                                circle(cx='12' cy='10' r='3')

                                            if screening.location && screening.location.hall && screening.location.hall.name
                                                if screening.location.hall && screening.location.hall.name
                                                    span.screening_hall= screening.location.hall.name
                                                    if screening.location.hall.cinema && screening.location.hall.cinema.name
                                                        span.screening_venue= ` ${screening.location.hall.cinema.name}`
                                                        if screening.location.hall.cinema.town && screening.location.hall.cinema.town.name && screening.location.hall.cinema.town.country && screening.location.hall.cinema.town.country.name
                                                            span.city= ` ${screening.location.hall.cinema.town.name}`
                                                            //- span.city= ` ${screening.location.hall.cinema.town.name}, ${screening.location.hall.cinema.town.country.name}`

                                                //- See on privateName tegelikult: Coca-Cola Plaza, iSense saal
                                                //- if screening.location.name
                                                //-     h1= screening.location.name

                                    .card-body.bg_dark_3
                                        .screening_info_blokk
                                            if screening.codeAndTitle
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.name
                                                    span.screening_info_value= screening.codeAndTitle

                                            -
                                                var subtitlesNames = function(item) {
                                                    if(item.name) {
                                                        var itemNames = item.name
                                                        return itemNames
                                                    }
                                                }

                                            if screening.subtitles
                                                - var subtitles = screening.subtitles.map(subtitlesNames)
                                            else if film.subtitles
                                                - var subtitles = film.subtitles.map(subtitlesNames)

                                            if subtitles && subtitles.length
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.subtitles
                                                    span.screening_info_value= subtitles.sort().join(', ')


                                            - var iqnac = screening.introQaConversation
                                            //- Screening Intro
                                            if iqnac
                                                - var introGuests = iqnac.filter(i => { return i.type === 'Intro' && i.guest })
                                                if introGuests.length > 0 && typeof introGuests[0].guest[0] !== 'object'
                                                    .str_info_grid_3
                                                        span.screening_info_label= self.label.screening.introGuests
                                                        span.screening_info_value= introGuests[0].guest.join(', ')

                                                - var introPresenters = iqnac.filter(i => { return i.type === 'Intro' && i.presenter })
                                                if introPresenters.length > 0 && typeof introPresenters[0].presenter[0] !== 'object'
                                                    .str_info_grid_3
                                                        span.screening_info_label= self.label.screening.introPresenter
                                                        span.screening_info_value= introPresenters[0].presenter.join(', ')

                                                //- Screening QandA
                                                - var qaGuests = iqnac.filter(i => { return i.type === 'QandA' && i.guest })
                                                if qaGuests.length > 0 && typeof qaGuests[0].guest[0] !== 'object'
                                                    .str_info_grid_3
                                                        span.screening_info_label.clr_primary= self.label.screening.qaGuests
                                                        span.screening_info_value= qaGuests[0].guest.join(', ')

                                                - var qaPresenter = iqnac.filter(i => { return i.type === 'QandA' && i.presenter })
                                                if qaPresenter.length > 0 && typeof qaPresenter[0].presenter[0] !== 'object'
                                                    .str_info_grid_3
                                                        span.screening_info_label= self.label.screening.qaPresenter
                                                        span.screening_info_value= qaPresenter[0].presenter.join(', ')

                                                if iqnac[0].duration
                                                    .str_info_grid_3
                                                        span.screening_info_label= self.label.screening.qaDuration
                                                        span.screening_info_value
                                                            +dur(iqnac[0].duration)

                                            if screening.extraInfo && typeof screening.extraInfo !== 'object'
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.extraInfo
                                                    span.screening_info_value= screening.extraInfo

                                            if screening.durationTotal
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.totalDuration
                                                    span.screening_info_value
                                                        +dur(screening.durationTotal)

                                    .btn-group(role='group' aria-label='')

                                        if screening.bookingUrl
                                            a.btn.btn_secondary.active(scrn-datetime=screening.dateTime scrn-loc=screening.location.id style='' btn-type='screening' href= screening.bookingUrl role='button' target='_blank')= self.label.button.screeningReservation

                                        a.btn.btn_secondary.active.notmyscreening(id='s_'+screening.id+'_is_not_fav',
                                            style='display: none;', role='button'
                                            )= self.label.film.addSavedScreening
                                        a.btn.btn_secondary.active.ismyscreening(id='s_'+screening.id+'_is_fav',
                                            style='display: none;', role='button'
                                            )= self.label.film.removeSavedScreening
                                        if screening.ticketingUrl
                                            if screening.screening_types && screening.screening_types.map(t => t.name).includes('Donation')
                                                a.btn.btn_primary.active(scrn-datetime=screening.dateTime scrn-loc=screening.location.id style='' onclick=`popupWidget(20432, '${pLang}', ${screening.ticketingId})` btn-type='screening' role='button' )= self.label.button.screeningDonation

                                            else
                                                a.btn.btn_primary.active(scrn-datetime=screening.dateTime scrn-loc=screening.location.id style='' onclick=`popupWidget(20432, '${pLang}', ${screening.ticketingId})` btn-type='screening' role='button')= self.label.button.screeningBuyTicket

                                        //- | test
                                        if screening.screening_types && screening.screening_types.map(t => t.name).includes('Free')
                                            a.btn.btn_primary.active(scrn-datetime=screening.dateTime scrn-loc=screening.location.id style='' btn-type='screening' role='button' )= self.label.button.screeningFree

            if film.trailer || film.QaClip
                if (film.trailer && film.trailer[0].videoCode) || (film.QaClip && film.QaClip[0].url)
                    section#trailer.f_trailer_box
                        if (film.trailer && film.trailer[0].videoCode)
                            .section_headline= self.label.film.trailer
                            each trailer in film.trailer
                                .videoaken.ratio.ratio-16x9
                                    if trailer.videoCode
                                        +video(trailer.videoCode)
                        if (film.QaClip && film.QaClip[0].url)
                            - var filterQa = film.QaClip.filter(qa => qa.url)
                            if filterQa.length
                                .section_headline= self.label.film.conversation
                                    each qaclip in filterQa
                                        .ratio.ratio-16x9
                                            +videolQaClip(qaclip.url)

            //- Switch for chat functionality lives in data.yaml
            //- if self.switches.showVotemo
            //- if film.chat_w_name
            //-     script.
            //-         var votemoConfig = {
            //-             url: `https://#{film.chat_w_name}.votemo.eu`,
            //-             openInDesktop: false,
            //-             language: 'poff'
            //-         }
            //-     script(src='https://cdn.votemo.eu/dist/widget.js')
            //-     - showMessengerChat = false

            //- +tabname(self.title)

            +tabname(film.title || film.title_et)

    //- script(src='https://store.piletilevi.ee/public/widgetApi/v2/sdk.min.js?id=' + widget_id)

    script(src='https://store.piletilevi.ee/public/widgetApi/v2/sdk.min.js?id=20432')
    script.
        document.onreadystatechange = () => {
            console.log(`document.readyState: ${document.readyState}`)
            if (document.readyState === 'complete') {
                // set up buttons only on poff.ee domain
                if (window.location.hostname === 'poff.ee') {
                    //- setupFilmFavoriteButtons()
                    setupScreeningFavoriteButtons()
                }
            }
        }
