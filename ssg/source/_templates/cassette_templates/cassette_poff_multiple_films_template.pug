main.grid_cassette
    //- Kassetti festivali info

    //- KARUSELL kasseti piltidega
    if self.cassetteCarouselPicsFilms && self.cassetteCarouselPicsFilms.length > 0
        - var cassetteCarouselPics = self.cassetteCarouselPicsFilms
    else if self.cassetteCarouselPicsCassette && self.cassetteCarouselPicsCassette.length > 0
        - var cassetteCarouselPics = self.cassetteCarouselPicsCassette
    else
        //- PLACEHOLDER IMG
        - var cassetteCarouselPics = ['/assets/img/static/placeholder_hd_1.jpg']

    section#carouselExampleIndicators.f_img_slider_box.carousel.slide(data-ride='carousel' data-interval='6000')
        ol.carousel-indicators
            if cassetteCarouselPics
                if cassetteCarouselPics
                    each val, index in cassetteCarouselPics
                        li(data-target='#carouselExampleIndicators' data-slide-to = index)
        .carousel-inner.container_frame_16_9
            if cassetteCarouselPics
                each val, index in cassetteCarouselPics
                    if index == 0
                        .carousel-item.active.container_contents_16_9
                            img.d-block.container_contents_16_9(src= val alt = self.title)
                    else
                        .carousel-item.container_contents_16_9
                            img.d-block.container_contents_16_9(src= val alt = self.title)
            else
                .carousel-item.active.container_contents_16_9
                    img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = self.title)

        a.carousel-control-prev(href='#carouselExampleIndicators' role='button' data-slide='prev')
            // <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                polyline(points='15 18 9 12 15 6')
            span.sr-only Previous
        a.carousel-control-next(href='#carouselExampleIndicators' role='button' data-slide='next')
            // <span class="carousel-control-next-icon" aria-hidden="true"></span>
            svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                polyline(points='9 18 15 12 9 6')
            span.sr-only Next
    //- LÕPP! KARUSELL kasseti piltidega LÕPP

    section.f_title_box

            if self.title
                h1.film_title_detailed= self.title

    section.f_synopsis_box
        .str_info_meta_gi
            .str_info_meta_item

            if self.festival_edition && self.festival_edition.festival && self.festival_edition.festival.name
                //- .str_info_meta_label.dark_1= self.label.film.festival
                //- .str_info_meta_festival= self.festival_edition.festival.name

            if self.festival_edition && self.festival_edition && self.festival_edition.name
                //- Kas selleks eraldi labelit vaja vms?
                .str_info_meta_label.dark_1= self.label.film.festival
                .str_info_meta_festival= self.festival_edition.name

            if self.tags && self.tags.programmes && self.tags.programmes[0]
                -
                    var programmeNames = function(item) {
                    if(typeof item.name !== 'object') {
                        var itemNames = item.name
                    }
                        return itemNames
                    }
                    var festivalEditions = []
                - var programmes = self.tags.programmes.filter(a => a.name).map(programmeNames).join(', ')
                if programmes !== undefined && programmes.length > 0
                    .str_info_meta_label.dark_1= self.label.film.programme
                    .str_info_meta_festival= programmes

            if self.tags && self.tags.genres && self.tags.genres[0]
                .str_info_meta_label.dark_1= self.label.film.genre
                .str_info_meta_festival= self.tags.genres.join(', ')


            if self.tags && self.tags.keywords && self.tags.keywords[0]
                .str_info_meta_label.dark_1= self.label.film.keywords
                .str_info_meta_festival= self.tags.keywords.join(', ')

        if typeof self.synopsis !== 'undefined'
                - var synopsis_md = self.synopsis
                .synopsis_gi
                    if typeof synopsis_md === 'string'
                        +format(synopsis_md)
                        //- if self.synopsis
                        //-     p= self.synopsis



        //- section.f_runtime_box
        //-     if film.countriesAndLanguages && film.countriesAndLanguages.languages
        //-         - var languagesNames = function(item) {
        //-         -   var itemNames = item.name
        //-         -   return itemNames
        //-         - }
        //-         .str_info_grid_3
        //-             .str_info_label= self.label.film.languages
        //-             .str_info_value= film.countriesAndLanguages.languages.map(languagesNames).join(', ')

        //-     if film.runtime
        //-         .str_info_grid_3
        //-             .str_info_label= self.label.film.runtime
        //-             .str_info_value
        //-                 +dur(film.runtime)



    if self.screenings && self.screenings[0]
        section.f_screenings_box
            h1.section_headline= self.label.film.screenings

            .card-deck.m-o.p-0
                //- - var sortedScreenings = self.screenings.sort(function(a, b){return new Date(a.dateTime)-new Date(b.dateTime)})
                each screening in self.screenings
                    .card.card_screening.rounded-0.border-0
                        .card-header.rounded-0.bg_dark_4
                            .grid_container_screening_time
                                div
                                    svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                        rect(x='3' y='4' width='18' height='18' rx='2' ry='2')
                                        line(x1='16' y1='2' x2='16' y2='6')
                                        line(x1='8' y1='2' x2='8' y2='6')
                                        line(x1='3' y1='10' x2='21' y2='10')
                                    span.screening_date
                                        if screening.dateTime
                                            +screeningDate(screening.dateTime)

                                .text-right
                                    svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                        circle(cx='12' cy='12' r='10')
                                        polyline(points='12 6 12 12 16 14')
                                    span.screening_time
                                        +screeningTime(screening.dateTime)

                            .container_screening_location
                                svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                    path(d='M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z')
                                    circle(cx='12' cy='10' r='3')

                                if screening.location && screening.location.hall && screening.location.hall.name
                                    if screening.location.hall && screening.location.hall.name
                                        span.screening_hall= screening.location.hall.name
                                        if screening.location.hall.cinema && screening.location.hall.cinema.name
                                            span.screening_venue= ` ${screening.location.hall.cinema.name}`
                                            if screening.location.hall.cinema.town && screening.location.hall.cinema.town.name && screening.location.hall.cinema.town.country && screening.location.hall.cinema.town.country.name
                                                span.city= ` ${screening.location.hall.cinema.town.name}, ${screening.location.hall.cinema.town.country.name}`

                                    //- See on privateName tegelikult: Coca-Cola Plaza, iSense saal
                                    //- if screening.location.name
                                    //-     h1= screening.location.name


                                .card-body.bg_dark_3
                                    .screening_info_blokk
                                        if screening.codeAndTitle
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.name
                                                span.screening_info_value= screening.codeAndTitle
                                        //- if screening.screeningSubtitles

                                        if screening.subtitles
                                            - var subtitlesNames = function(item) {
                                            -   if(item.name) {
                                            -       var itemNames = item.name
                                            -       return itemNames
                                            -   }
                                            - }
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.subtitles
                                                span.screening_info_value= screening.subtitles.map(subtitlesNames).sort().join(', ')


                                        - var iqnac = screening.introQaConversation
                                        //- Screening Intro
                                        if iqnac
                                            - var introGuests = iqnac.filter(i => { return i.type === 'Intro' && i.guest })
                                            if introGuests.length > 0 && typeof introGuests[0].guest[0] !== 'object'
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.introGuests
                                                    span.screening_info_value= introGuests[0].guest.join(', ')

                                            - var introPresenters = iqnac.filter(i => { return i.type === 'Intro' && i.presenter })
                                            if introPresenters.length > 0 && typeof introPresenters[0].presenter[0] !== 'object'
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.introPresenter
                                                    span.screening_info_value= introPresenters[0].presenter.join(', ')

                                            //- Screening QandA
                                            - var qaGuests = iqnac.filter(i => { return i.type === 'QandA' && i.guest })
                                            if qaGuests.length > 0 && typeof qaGuests[0].guest[0] !== 'object'
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.qaGuests
                                                    span.screening_info_value= qaGuests[0].guest.join(', ')

                                            - var qaPresenter = iqnac.filter(i => { return i.type === 'QandA' && i.presenter })
                                            if qaPresenter.length > 0 && typeof qaPresenter[0].presenter[0] !== 'object'
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.qaPresenter
                                                    span.screening_info_value= qaPresenter[0].presenter.join(', ')

                                            if iqnac[0].duration
                                                .str_info_grid_3
                                                    span.screening_info_label= self.label.screening.qaDuration
                                                    span.screening_info_value
                                                        +dur(iqnac[0].duration)

                                        if screening.extraInfo && typeof screening.extraInfo !== 'object'
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.extraInfo
                                                span.screening_info_value= screening.extraInfo

                                        if screening.durationTotal
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.totalDuration
                                                span.screening_info_value
                                                    +dur(screening.durationTotal)

                        .btn-group(role='group' aria-label='')

                            //- if screening.screening_mode && screening.screening_mode.name && screening.ticketingId && screening.ticketingUrl && screening.screening_mode.name === 'Online'
                            //-     if screening.bookingUrl
                            //-         a.btn.btn_secondary.active(href= screening.bookingUrl role='button') BOOKINGLABEL!
                            //-     a.btn.btn_primary.active(href= `${screening.ticketingUrl}/${screening.ticketingId}` role='button' target='_blank')= self.label.button.screeningBuyTicket
                            //- if screening.screeningTown === 'Tartu'
                            //-     a.btn.btn_covid.active(href='https://forms.gle/UU4sFENoWyZ3PjSF8' role='button' target='_blank')= self.label.button.covidRegister
                            //-     a.btn.btn_primary.active( role='button')= self.label.button.screeningFree

                            if screening.bookingUrl
                                a.btn.btn_secondary.active(scrn-datetime=screening.dateTime scrn-loc=screening.location.id btn-type='screening' id=`date_${screening.dateTime}` href= screening.bookingUrl role='button' target='_blank')= self.label.button.screeningReservation
                            a.btn.btn_secondary.active.notsavedscreening(id=screening.id+'_not_savedscreening', style= {display: 'none'} onclick=`saveScreeningAsFavourite(${screening.id}, "${screening.codeAndTitle}", "${screening.dateTime}")` role='button' target='_BLANK')= self.label.film.addSavedScreening
                            a.btn.btn_secondary.active.issavedscreening(id=screening.id+'_is_savedscreening', style= {display: 'none'} onclick=`removeScreening(${screening.id})` role='button' target='_BLANK')= self.label.film.removeSavedScreening
                            if screening.ticketingUrl
                                a.btn.btn_primary.active(scrn-datetime=screening.dateTime scrn-loc=screening.location.id  btn-type='screening' id=`date_${screening.dateTime}` href= `${screening.ticketingUrl}` role='button' target='_blank')= self.label.button.screeningBuyTicket

        +rmOldScreeningButtons


    if self.tags && self.tags.programmes && self.tags.programmes.map(a => a.presentedBy || false).length
        -
            var presenters = self.tags.programmes.map((a) => {
                if (a.presentedBy) {
                    delete a.presentedBy.id
                    return a.presentedBy
                } else {
                    return false
                }
            })
            var presentedBy = [...new Map(presenters.map(item => [item['presentedByText'], item])).values()]
    else
        - var presentedBy = []

    if presentedBy.length
        section.f_extra_box

            each onePresentedBy in presentedBy
                if onePresentedBy.organisations && onePresentedBy.organisations.length

                    if onePresentedBy.presentedByText && typeof onePresentedBy.presentedByText !== 'object'
                        p.dark_1.text_center= onePresentedBy.presentedByText

                    each presenter in onePresentedBy.organisations


                        //- Artikli kontroll algus, vajab veel artikli kättesaamist ja täiendamist, et olemasolul suunata artiklile!
                        if presenter.poffi_article
                            - var articleFromYAML = self.data.articles.filter( (a) => { return presenter.poffi_article.id === a.id })
                            - var article = articleFromYAML[0]
                            if article.article_types && article.article_types[0]

                                if article.publish && article.title && article.title.length > 1
                                    - var currentTime = new Date()
                                    if typeof(article.publishFrom) === 'undefined'
                                        - var publishFrom= new Date(article.created_at)
                                    else
                                        - var publishFrom= new Date(article.publishFrom)

                                    if article.publishUntil
                                        - var publishUntil = new Date(article.publishUntil)

                                    if (currentTime > publishFrom)

                                        if (!publishUntil || (publishUntil && (publishUntil > currentTime)))

                                            //- p= `${article.title} - ${article.publish} - ${article.publishFrom} - ${article.publishUntil} - ${heroPlusTrioNews} - ${article.id} - ${article.article_types[0].name} - (${publishUntil} > ${currentTime}) - (${(!publishUntil || (publishUntil && (publishUntil > currentTime)))})`
                                            - articlePublished = true
                                            - articleSlug = article.slug
                                            each artType in article.article_types
                                                - artTypes.push(artType.name.toLowerCase())
                                                if artType.name.toLowerCase() === defaultTypeIfExists[0]
                                                    - artTypeForPath = artType.slug.toLowerCase()
                                                    - break
                                                else
                                                    - artTypeForPath = artType.slug.toLowerCase()
                        //- Artikli kontroll lõpp

                        //- Programmi esitleja nimi

                        if presenter.name
                            p.dark_1.text_center= presenter.name

                        //- KUI ARTIKKEL KEELES OLEMAS JA PUBLISHED JA PEALKIRJAGA JNE
                        if typeof articlePublished !== 'undefined' && articlePublished === true
                            .presenter_logo_item_container
                                a(href= `/${lang_path}${artTypeForPath}/${articleSlug}`).presenter_logo_item
                                    if presenter.logoColour
                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                    else if presenter.logoBlack
                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                    else if presenter.logoWhite
                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                        //- KUI ARTIKLIT POLE VÕI POLE SEE PUBLISHED, AGA ON CUSTOM URL
                        else if presenter.homepageUrl
                            .presenter_logo_item_container
                                a(href= presenter.homepageUrl).presenter_logo_item
                                    if presenter.logoColour
                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                    else if presenter.logoBlack
                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                    else if presenter.logoWhite
                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                        //- LOGO ILMA LINGITA
                        else
                                if presenter.logoColour
                                    .presenter_logo_item_container
                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                else if presenter.logoBlack
                                    .presenter_logo_item_container
                                        img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                else if presenter.logoWhite
                                    .presenter_logo_item_container
                                        img.presenter_logo_itemx(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)


    if self.media && self.media
        - let med = self.media
        if (med.trailer && med.trailer[0] && med.trailer[0].videoCode) || (med && med.QaClip && med.QaClip[0].url)
            section#trailer.f_trailer_box
                if (med.trailer && med.trailer[0] && med.trailer[0].videoCode)
                    .section_headline= self.label.film.trailer
                    each trailer in med.trailer
                        .embed-responsive.embed-responsive-16by9.m-0.p-0
                            if trailer.videoCode
                                +video(trailer.videoCode)
                                - console.log(self.title)
                if (med && med.QaClip && med.QaClip[0].url)
                    - var filterQa = med.QaClip.filter(qa => qa.type === 'QandA' && qa.url)
                    if filterQa.length
                        .section_headline= self.label.film.qaClip
                            each qaclip in filterQa
                                .embed-responsive.embed-responsive-16by9.m-0.p-0
                                    +videolQaClip(qaclip.url)


//- SIIT ALGAB FILMIDE KUVAMINE
//- SIIT ALGAB FILMIDE KUVAMINE
//- SIIT ALGAB FILMIDE KUVAMINE
//- SIIT ALGAB FILMIDE KUVAMINE
h1.section_headline.padding_top_4.padding_bottom_2= self.label.menu.mainFilms

if !self.films || !self.films.length
    h1.section_headline.padding_top_4.padding_bottom_2= '...'
else
    each film in self.films
        main.grid_film.padding_top_0
            //- Kasseti title ja synopsis
            //- div
            //-     if self.title
            //-         h1.dark_1= 'ÜHEFILMIKASSETT!!!!!!!!!!!!!!!!!! ' + self.title
            //-     if self.synopsis
            //-         h1.dark_1= self.synopsis

            //- KARUSELL filmi piltidega
            section#carouselExampleIndicators.f_img_slider_box.carousel.slide(data-ride='carousel' data-interval='6000')
                ol.carousel-indicators
                    if film.media
                        if film.media.stills && film.media.stills[0]
                            each val, index in film.media.stills
                                li(data-target='#carouselExampleIndicators' data-slide-to = index)
                .carousel-inner.container_frame_16_9
                    if film.media
                        if film.media.stills && film.media.stills.length
                            each val, index in film.media.stills
                                if index == 0
                                    .carousel-item.active.container_contents_16_9
                                        img.d-block.container_contents_16_9(src=`https://assets.poff.ee/img/${val.hash}${val.ext}` alt = self.title)
                                else
                                    .carousel-item.container_contents_16_9
                                        img.d-block.container_contents_16_9(src=`https://assets.poff.ee/img/${val.hash}${val.ext}` alt = self.title)
                        else
                            .carousel-item.active.container_contents_16_9
                                img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = self.title)
                    else
                        .carousel-item.active.container_contents_16_9
                            img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = self.title)

                a.carousel-control-prev(href='#carouselExampleIndicators' role='button' data-slide='prev')
                    // <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                        polyline(points='15 18 9 12 15 6')
                    span.sr-only Previous
                a.carousel-control-next(href='#carouselExampleIndicators' role='button' data-slide='next')
                    // <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                        polyline(points='9 18 15 12 9 6')
                    span.sr-only Next
            //- LÕPP! KARUSELL filmi piltidega LÕPP


            //- Algab kasseti filmide info kuvamine

            - var pathParts = self.path.split('/')
            - var filmPath = pathParts[pathParts.length - 1]
            section.f_title_box

                .premiere_type
                    if film.tags && film.tags.premiere_types && film.tags.premiere_types[0]
                        //- Kui on mitu, eraldatakse komadega, kui vaid esimest ühte vaja, siis film.tags.premiere_types[0]
                        p.premiere_type= film.tags.premiere_types.join(', ')

                h1.film_title_detailed= film.title
                .str_info_blokk_1

                    each p, locale in self.otherLocalePaths
                        if self[`title_${locale}`]
                            .str_info_grid_3
                                .str_info_label= self.label.film[`title_${locale}`]
                                .str_info_value= film[`title_${locale}`]

                    if film.titleOriginal
                        .str_info_grid_3
                            .str_info_label= self.label.film.titleOriginal
                            .str_info_value= film.titleOriginal

                    if film.credentials && film.credentials.rolePersonsByRole && film.credentials.rolePersonsByRole.director && film.credentials.rolePersonsByRole.director[0]
                        .str_info_grid_3
                            .str_info_label= self.label.film.director
                            .str_info_value.clr_primary= film.credentials.rolePersonsByRole.director.join(', ')

                    if film.orderedCountriesDisplay
                        .str_info_grid_3
                            .str_info_label= self.label.film.countries
                            .str_info_value= film.orderedCountriesDisplay

                    if film.year
                        .str_info_grid_3
                            .str_info_label= self.label.film.year
                            .str_info_value= film.year


            section.f_synopsis_box

                //- Kassetti festivali info
                .str_info_meta_gi
                    .str_info_meta_item
                        if film.tags

                            if film.tags.programmes && film.tags.programmes[0]
                                //- Festival editions
                                - var programmeNames = function(item) {
                                -   if(typeof item.name !== 'object') {
                                -       var itemNames = item.name
                                -   }
                                -   return itemNames
                                - }
                                each programme in film.tags.programmes
                                    if programme.festival_editions
                                        - var festivalEditions = programme.festival_editions.map(programmeNames).join(', ')
                                        if festivalEditions.length > 0
                                            .str_info_meta_label.dark_1= self.label.film.programme
                                            .str_info_meta_festival= festivalEditions

                                //- Programmes
                                - var programmes = film.tags.programmes.map(programmeNames).join(', ')
                                if programmes.length > 0
                                    .str_info_meta_label.dark_1= self.label.film.programme
                                    .str_info_meta_festival= programmes



                            if film.tags.genres && film.tags.genres[0]
                                .str_info_meta_label.dark_1= self.label.film.genre
                                .str_info_meta_festival= film.tags.genres.join(', ')


                            if film.tags.keywords && film.tags.keywords[0]
                                .str_info_meta_label.dark_1= self.label.film.keywords
                                .str_info_meta_festival= film.tags.keywords.join(', ')

                        //- festival programm zanrid keywordid


                    //- .str_info_meta_item
                    //-     .str_info_meta_label
                    //-         | Programm
                    //-     .str_info_meta_program
                    //-         | Foorum, Põhjusega mässajad
                if typeof film.synopsis !== 'undefined'
                    - var synopsis_md = film.synopsis
                    if typeof synopsis_md === 'string'
                        .synopsis_gi
                            +format(synopsis_md)

                //- FILM ADDITIONAL INFO (ADDITINFO)

                //- if typeof film.additInfo !== 'undefined'
                //-     - var additInfo_md = film.additInfo
                //-     .synopsis_gi
                //-         if typeof additInfo_md === 'string'
                //-             +format(additInfo_md)
            section.f_cred_box
                .str_info_blokk_cred

                    //- if film.media && film.media.stills && film.media.stills[0]
                    //-     each still in film.media.stills
                    //-         if still.hash && still.ext
                    //-             div(style="width:30%; height:10%; padding-bottom:20px; padding-top:20px;")
                    //-                 img(src=`https://assets.poff.ee/img/${still.hash}${still.ext}` alt = film.titles style="width:100%; height:100%;")
                    //- else
                    //-     div(style="width:30%; height:10%; padding-bottom:20px; padding-top:20px;")
                    //-         img(src=`/assets/img/static/placeholder_hd_1.jpg` alt = film.titles style="width:100%; height:100%;")

                    //- NB!
                    //- NB!
                    //- NB!
                    //- NB! Credentials võetakse strapis oleva roleNamePrivate järgi väiketähtedes
                    //-     Näiteks: "Composer" all olevad isikud saab kätte film.credentials.rolePersonsByRole.composer.join(', ')

                    if film && film.credentials && film.credentials.rolePersonsByRole
                        if film.credentials.rolePersonsByRole.director && film.credentials.rolePersonsByRole.director[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.director
                                .str_info_value= film.credentials.rolePersonsByRole.director.join(', ')

                        if film.credentials.rolePersonsByRole.screenwriter && film.credentials.rolePersonsByRole.screenwriter[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.screenwriter
                                .str_info_value= film.credentials.rolePersonsByRole.screenwriter.join(', ')

                        if film.credentials.rolePersonsByRole.cast && film.credentials.rolePersonsByRole.cast[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.cast
                                .str_info_value= film.credentials.rolePersonsByRole.cast.join(', ')

                        if film.credentials.rolePersonsByRole.producer && film.credentials.rolePersonsByRole.producer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.producer
                                .str_info_value= film.credentials.rolePersonsByRole.producer.join(', ')

                        if film.credentials.rolePersonsByRole.directorofphotography && film.credentials.rolePersonsByRole.directorofphotography[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.doP
                                .str_info_value= film.credentials.rolePersonsByRole.directorofphotography.join(', ')

                        if film.credentials.rolePersonsByRole.composer && film.credentials.rolePersonsByRole.composer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.composer
                                .str_info_value= film.credentials.rolePersonsByRole.composer.join(', ')

                        if film.credentials.rolePersonsByRole.editor && film.credentials.rolePersonsByRole.editor[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.editor
                                .str_info_value= film.credentials.rolePersonsByRole.editor.join(', ')

                        //- Below datamodel needs to be updated and then code amended to be correct
                        if film.credentials.rolePersonsByRole.productionCompany && film.credentials.rolePersonsByRole.productionCompany[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.production
                                .str_info_value= film.credentials.rolePersonsByRole.productionCompany.join(', ')


            section.f_runtime_box

                if film.runtime
                    .str_info_grid_3
                        .str_info_label= self.label.film.runtime
                        .str_info_value
                            +dur(film.runtime)

                if film.languages
                    - var languagesNames = function(item) {
                    -   if(item.name) {
                    -       var itemNames = item.name
                    -       return itemNames
                    -   }
                    - }
                    .str_info_grid_3
                        .str_info_label= self.label.film.languages
                        .str_info_value= film.languages.map(languagesNames).join(', ')
            //- section.f_interactive_box
            //-     .f_interactive_item
            //-         p
            //-             | Kas oled filmi juba näinud? Osale publiku lemmikfilmi hääletuses.
            //-         a.btn.btn_vote.active(href='https://forms.gle/ew2vrQRTEb83BNxR7' role='button' target='_BLANK')= self.label.button.filmAudienceVote

            if film.credentials && film.credentials.rolePerson && film.credentials.rolePerson[0]
                - var sortCredentialsByOrder = film.credentials.rolePerson.sort(function(a, b){return a.role_at_film.order-b.role_at_film.order})
                - var director = sortCredentialsByOrder.filter( (a) => { return 'Director' === a.role_at_film.roleNamePrivate })[0]

            //- if typeof director !== 'undefined' && director.person && director.person.firstName && director.person.lastName
            //-     section.f_dir_bio_box

            //-         if director.person.picture
            //-             .dir_img
            //-                 img.img_dir(src=`https://assets.poff.ee/img/${director.person.picture.hash}${director.person.picture.ext}` alt = film.titles)
            //-                 .str_info_grid_3
            //-                     .str_info_label.text_left.dark_semi= self.label.film.director
            //-                     .str_info_value.text_right.dark_1= `${director.person.firstName} ${director.person.lastName}`

            //-         .dir_bio.dark_1
            //-             if director.person.biography && typeof director.person.biography !== 'object'
            //-                 p.dark_1= director.person.biography
            //-             if director.person.filmography && typeof director.person.filmography !== 'object'
            //-                 p.dark_1= director.person.filmography

            if film.presentedBy && film.presentedBy.presentedByText && film.presentedBy.organisations && film.presentedBy.organisations[0]

                section.f_extra_box
                    if film.presentedBy.presentedByText && typeof film.presentedBy.presentedByText !== 'object'
                        p= film.presentedBy.presentedByText
                    each presenter in film.presentedBy.organisations
                        p.dark_1= presenter.name

                        .supporter_logo_item_container
                            if presenter.homepageUrl
                                a(href= presenter.homepageUrl).supporter_logo_item_container
                                    if presenter.logoColour
                                        img.supporter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                    else if presenter.logoBlack
                                        img.supporter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                    else if presenter.logoWhite
                                        img.supporter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                            else
                                if presenter.logoColour
                                    img.supporter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                else if presenter.logoBlack
                                    img.supporter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                else if presenter.logoWhite
                                    img.supporter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)


            //- if film.filmQaClip

            //-     section.f_qaclip_box
            //-         .section_headline= self.label.film.qaClip
            //-         .embed-responsive.embed-responsive-16by9.m-0.p-0
            //-             - youtubeVideoCode = film.filmQaClip.split("=")
            //-             +youtube(youtubeVideoCode[1])

            .f_vialog_box
                //- <a name="chat"><iframe width="100%" height="540" src="https://my.vialog.app/poff.ee/241" frameborder="0" allow="microphone; camera"></iframe></a>
                a(name='chat')
                    iframe(width='100%' height='540' src=`https://my.vialog.app/poff.ee/${film.id}` frameborder='0' allow='microphone; camera')

            if film.media && film.media.trailer && film.media.trailer[0] && film.media.trailer[0].videoCode
                section.f_trailer_box
                    .section_headline= self.label.film.trailer
                    each trailer in film.media.trailer
                        .embed-responsive.embed-responsive-16by9.m-0.p-0
                            if trailer.videoCode
                                +video(trailer.videoCode)

            //- section.f_imgs_box

            +tabname(self.title)


